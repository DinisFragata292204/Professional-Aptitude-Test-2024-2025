{"version":3,"file":"static/js/main.988a004f.js","mappings":"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","sources":["config/config_db.js","components/modalConfig/index.tsx","screens/admin/AdministradorScreen.tsx","screens/admin/suggestionsScreen.tsx","components/colors.ts","screens/aluno/AlunoScreen.tsx","screens/professor/ProfessorScreen.tsx","screens/login/LoginScreen.tsx","screens/signIn/PutPasswordScreen.tsx","screens/signIn/SignInScreen.tsx","screens/signIn/VerifyCodeScreen.tsx","components/background/styles.ts","components/background/index.tsx","components/themeToggle/index.tsx","components/backgroundPicker/styles.ts","components/backgroundPicker/index.tsx","screens/MenuAluno/Configuracoes/temaScreen.tsx","screens/MenuAluno/Configuracoes/dadosPessoaisScreen.tsx","screens/MenuAluno/Configuracoes/sugestAnythingScreen.tsx","screens/MenuAluno/Configuracoes/passwordESegurancaScreen.tsx","screens/MenuAluno/Menu/NotasScreen.tsx","screens/MenuAluno/Menu/AlmocosScreen.tsx","screens/MenuAluno/Menu/HorariosScreen.tsx","screens/MenuAluno/Menu/entradasEsaidas.tsx","screens/MenuProf/adicionarEventosOrTasks.tsx","screens/MenuProf/adicionarNotas.tsx","screens/MenuAluno/tarefas/eventosETarefas.tsx","screens/aluno/qrcodeScanner.tsx","screens/MenuProf/personalizar_tarefaOuEvento.tsx","screens/login/InsertPasswordScreen.tsx","screens/login/VerificationScreen.tsx","screens/forgetPass/PutNewPassForgetPassword.tsx","screens/forgetPass/VerifiyCodeForgetPassword.tsx","screens/forgetPass/ForgetPasswordScreen.tsx","screens/aluno/createQrCode.tsx","screens/admin/adminPutFiles.tsx","screens/auxiliar/auxiliarScreen.tsx","screens/MenuProf/alunosDoProfScreen.tsx","screens/MenuProf/almocosProfScreen.tsx","screens/MenuAluno/Menu/disciplinasAluno.tsx","screens/MenuAluno/Menu/NotasDisciplina.tsx","screens/auxiliar/auxiliarEstatisticas.tsx","screens/admin/confirmacoesScreen.tsx","screens/signIn/SelectTurma.tsx","screens/MenuProf/adicionarEventosOrTasksWeb.tsx","App.tsx","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["const config = {\r\n  baseUrl: \"http://172.16.12.215/reactNative-Backend\",\r\n};\r\nexport default config;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  TouchableOpacity,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n  ActivityIndicator\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config_db\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\nconst ModalConfig = ({ visible, dynamicHeaderBackground, dynamicTextColor, onClose, navigation, email }) => {\r\n  const [loadingLogout, setLoadingLogout] = useState(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n\r\n  // Carrega o cargo do utilizador\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let role: string | null = null;\r\n        if (Platform.OS === \"web\") {\r\n          role = localStorage.getItem(\"userRole\");\r\n        } else {\r\n          role = await SecureStore.getItemAsync(\"userRole\");\r\n        }\r\n        setUserRole(role);\r\n      } catch {\r\n        setUserRole(null);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const openPersonalData = () => {\r\n    onClose();\r\n    navigation.navigate(\"PersonalDataScreen\", { email });\r\n  };\r\n\r\n  const sugestAnything = () => {\r\n    onClose();\r\n    navigation.navigate(\"sugestAnythingScreen\", { email });\r\n  };\r\n\r\n  const suggestionsScreen = () => {\r\n    onClose();\r\n    navigation.navigate(\"suggestionsScreen\", { email });\r\n  };\r\n\r\n  const goToPasswordSecurity = () => {\r\n    onClose();\r\n    navigation.navigate(\"PasswordSecurityScreen\", { email });\r\n  };\r\n\r\n  const goPersonalize = () => {\r\n    onClose();\r\n    navigation.navigate(\"TemaScreen\", { email });\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    setLoadingLogout(true);\r\n\r\n    // Recupera o token do cliente\r\n    let token = null;\r\n    if (Platform.OS === \"web\") {\r\n      token = localStorage.getItem(\"userToken\");\r\n    } else {\r\n      token = await SecureStore.getItemAsync(\"userToken\");\r\n    }\r\n\r\n    try {\r\n      await axios.post(\r\n        `${config.baseUrl}/calendarioFiles/logout.php`,\r\n        { token },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n    } catch {}\r\n\r\n    try {\r\n      if (Platform.OS === \"web\") {\r\n        localStorage.removeItem(\"userToken\");\r\n        localStorage.removeItem(\"email\");\r\n        localStorage.removeItem(\"userRole\");\r\n        localStorage.removeItem(\"userTheme\");\r\n        localStorage.removeItem(\"backgroundUrl\");\r\n      } else {\r\n        await SecureStore.deleteItemAsync(\"userToken\");\r\n        await SecureStore.deleteItemAsync(\"email\");\r\n        await SecureStore.deleteItemAsync(\"userRole\");\r\n        await SecureStore.deleteItemAsync(\"userTheme\");\r\n        await SecureStore.deleteItemAsync(\"backgroundUrl\");\r\n      }\r\n    } catch {}\r\n\r\n    setLoadingLogout(false);\r\n    onClose();\r\n    navigation.replace(\"Login\");\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      animationType=\"slide\"\r\n      transparent\r\n      onRequestClose={onClose}\r\n    >\r\n      <TouchableOpacity\r\n        style={styles.modalOverlay}\r\n        activeOpacity={1}\r\n        onPressOut={onClose}\r\n      >\r\n        <View style={[styles.modalContent, { backgroundColor: dynamicHeaderBackground }]}>\r\n          <Text style={[styles.modalTitle, { color: dynamicTextColor }]}>\r\n            Configurações do Utilizador\r\n          </Text>\r\n\r\n          <TouchableOpacity style={styles.modalOption} onPress={openPersonalData} disabled={loadingLogout}>\r\n            <Text style={[styles.modalOptionText, { color: dynamicTextColor }]}>\r\n              Dados Pessoais\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View style={styles.separator} />\r\n\r\n          <TouchableOpacity style={styles.modalOption} onPress={goToPasswordSecurity} disabled={loadingLogout}>\r\n            <Text style={[styles.modalOptionText, { color: dynamicTextColor }]}>\r\n              Palavra-passe e Segurança\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View style={styles.separator} />\r\n\r\n          <TouchableOpacity style={styles.modalOption} onPress={goPersonalize} disabled={loadingLogout}>\r\n            <Text style={[styles.modalOptionText, { color: dynamicTextColor }]}>\r\n              Personalizar\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View style={styles.separator} />\r\n\r\n          {userRole === \"admin\" ? (\r\n            <TouchableOpacity style={styles.modalOption} onPress={suggestionsScreen} disabled={loadingLogout}>\r\n              <Text style={[styles.modalOptionText, { color: dynamicTextColor }]}>\r\n                Sugestões\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity style={styles.modalOption} onPress={sugestAnything} disabled={loadingLogout}>\r\n              <Text style={[styles.modalOptionText, { color: dynamicTextColor }]}>\r\n                Sugerir melhorias\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          <View style={styles.separator} />\r\n\r\n          {loadingLogout ? (\r\n            <ActivityIndicator\r\n              size=\"large\"\r\n              color=\"#47AD4D\"\r\n              style={{ marginTop: 20 }}\r\n            />\r\n          ) : (\r\n            <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n              <Text style={styles.logoutButtonText}>Terminar Sessão</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  modalContent: {\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    justifyContent: \"flex-start\",\r\n    borderTopLeftRadius: 20,\r\n    borderBottomLeftRadius: 20,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 15,\r\n  },\r\n  modalOption: {\r\n    paddingVertical: 10,\r\n  },\r\n  modalOptionText: {\r\n    fontSize: 18,\r\n  },\r\n  separator: {\r\n    height: 1,\r\n    backgroundColor: \"#ccc\",\r\n    marginVertical: 5,\r\n  },\r\n  logoutButton: {\r\n    marginTop: \"auto\",\r\n    paddingVertical: 15,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\",\r\n    borderRadius: 10,\r\n  },\r\n  logoutButtonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ModalConfig;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Image,\r\n  ImageBackground,\r\n  StatusBar,\r\n  Platform,\r\n  Pressable,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport { TextInput, Button, RadioButton, useTheme, Portal, Dialog, Paragraph } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport config from '../../config/config_db';\r\nimport ModalConfig from \"../../components/modalConfig\";\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\nconst CriarUtilizadorScreen = ({ navigation, route }) => {\r\n  const theme = useTheme();\r\n  const isWeb = Platform.OS === \"web\";\r\n\r\n  const url = `${config.baseUrl}/adminFiles/`;\r\n  const url_getDisciplinas = `${config.baseUrl}/adminFiles/getDisciplinas.php`;\r\n  const url_getTurmas = `${config.baseUrl}/adminFiles/getTurmas.php`;\r\n  const url_createTurma = `${config.baseUrl}/adminFiles/createTurma.php`\r\n\r\n  const [turmasList, setTurmasList] = useState([]);\r\n  const [anosList, setAnosList] = useState([]);\r\n  const [turmasByAno, setTurmasByAno] = useState({});\r\n\r\n  const [showNewTurma, setShowNewTurma] = useState(false);\r\n  const [newTurmaAno, setNewTurmaAno] = useState('');\r\n  const [newTurmaLetra, setNewTurmaLetra] = useState('');\r\n  const [creatingTurma, setCreatingTurma] = useState(false);\r\n\r\n  const [emailLocal, setEmailLocal] = useState('');\r\n  const [cargo, setCargo] = useState('aluno');\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [menuVisivel, setMenuVisivel] = useState(false);\r\n  const [modalContaVisivel, setModalContaVisivel] = useState(false);\r\n  const [backgroundUrl, setBackgroundUrl] = useState(null);\r\n  const [userTheme, setUserTheme] = useState(theme.dark ? \"dark\" : \"light\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Estados específicos para alunos\r\n  const [anoAluno, setAnoAluno] = useState('');\r\n  const [turmaAluno, setTurmaAluno] = useState('');\r\n\r\n  // Estados específicos para professores\r\n  const [disciplinaSelecionada, setDisciplinaSelecionada] = useState('');\r\n  const [disciplinasList, setDisciplinasList] = useState([]);\r\n  const [anoProfessorSelecionado, setAnoProfessorSelecionado] = useState('');\r\n  const [turmasProfessor, setTurmasProfessor] = useState({});\r\n\r\n  // Estados para criação inline de disciplina\r\n  const [showNewDisciplinaInput, setShowNewDisciplinaInput] = useState(false);\r\n  const [newDisciplina, setNewDisciplina] = useState('');\r\n  const [creatingDisciplina, setCreatingDisciplina] = useState(false);\r\n\r\n  // Estado para toast notification\r\n  const [toast, setToast] = useState({ visible: false, message: '', type: '' });\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n\r\n  const [authEmail, setAuthEmail] = useState('');\r\n  \r\n  // Cores dinâmicas\r\n  const boxBackground = userTheme === \"dark\" ? \"#101218\" : \"#FFFFFF\";\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\";\r\n  const inputBackground = userTheme === \"dark\" ? \"#3F4454\" : \"#fff\";\r\n\r\n  useEffect(() => {\r\n    if (route.params?.email) {\r\n      setAuthEmail(route.params.email);\r\n    }\r\n  }, [route.params?.email]);\r\n\r\n  useEffect(() => {\r\n    if (cargo === 'aluno' || cargo === 'professor') {\r\n      fetch(url_getTurmas)\r\n      .then(async res => {\r\n        const text = await res.text();\r\n        console.log('RESPUESTA BRUTA DO SERVIDOR:', text);\r\n        return JSON.parse(text);\r\n      })\r\n        .then(dados => {\r\n          if (dados.success) {\r\n            setTurmasList(dados.turmas);\r\n            // extrair anos únicos e agrupar turmas\r\n            const anos = Array.from(new Set(dados.turmas.map(t => t.ano)))\r\n                             .sort((a, b) => Number(a) - Number(b))\r\n                             .map(n=>n.toString());\r\n            setAnosList(anos);\r\n            const agrup = {};\r\n            dados.turmas.forEach(t=>{\r\n              const ano = t.ano.toString();\r\n              agrup[ano] = agrup[ano] || [];\r\n              agrup[ano].push(t);\r\n            });\r\n            setTurmasByAno(agrup);\r\n          } else {\r\n            showToast(dados.message,'error');\r\n          }\r\n        })\r\n        .catch(() => showToast('Não foi possível carregar turmas','error'));\r\n    }\r\n  }, [cargo]);\r\n\r\n  const handleCreateTurma = async () => {\r\n    if (!newTurmaAno || !newTurmaLetra.trim()) {\r\n      showToast('Preenche ano e letra da turma','error');\r\n      return;\r\n    }\r\n    if (turmasList.some(t => \r\n                t.ano.toString() === newTurmaAno && \r\n                t.turma.toUpperCase()  === newTurmaLetra.toUpperCase()\r\n              )) {\r\n            showToast('Essa turma já existe','error');\r\n            return;\r\n          }\r\n    setCreatingTurma(true);\r\n    try {\r\n      const res = await fetch(url_createTurma, {\r\n        method:'POST',\r\n        headers:{'Content-Type':'application/json'},\r\n        body: JSON.stringify({ ano: newTurmaAno, turma: newTurmaLetra })\r\n      });\r\n      const dados = await res.json();\r\n      if (dados.success) {\r\n        showToast('Turma criada!','success');\r\n        // atualizar lista local\r\n        const t = dados.turma;\r\n        setTurmasList(prev=>[...prev,t]);\r\n        // atualizar agrupamentos\r\n        setAnosList(prev => prev.includes(t.ano.toString()) ? prev : [...prev,t.ano.toString()].sort());\r\n        setTurmasByAno(prev => {\r\n          const anoKey = t.ano.toString();\r\n          const arr = prev[anoKey] ? [...prev[anoKey], t] : [t];\r\n          return {...prev, [anoKey]: arr};\r\n        });\r\n        setShowNewTurma(false);\r\n        setNewTurmaAno('');\r\n        setNewTurmaLetra('');\r\n      } else {\r\n        showToast(dados.message || 'Erro ao criar turma','error');\r\n      }\r\n    } catch {\r\n      showToast('Falha ao comunicar com o servidor','error');\r\n    } finally {\r\n      setCreatingTurma(false);\r\n    }\r\n  };\r\n\r\n  const salvarDisabled =\r\n  !newTurmaAno ||\r\n  !newTurmaLetra.trim() ||\r\n  turmasList.some(t =>\r\n    t.ano.toString() === newTurmaAno &&\r\n    t.turma.toUpperCase() === newTurmaLetra.toUpperCase()\r\n  );\r\n\r\n  const renderAlunoFields = () => (\r\n    <>\r\n      <Text style={[styles.rotulo,{ color: dynamicTextColor }]}>\r\n        Ano Escolar:\r\n      </Text>\r\n      {anosList.length === 0 ? (\r\n        <ActivityIndicator size=\"small\" />\r\n      ) : (\r\n        <RadioButton.Group onValueChange={setAnoAluno} value={anoAluno}>\r\n          {anosList.map(ano=>(\r\n            <View key={ano} style={styles.grupoRadio}>\r\n              <RadioButton value={ano} color=\"#47AD4D\"/>\r\n              <Text style={{color:dynamicTextColor}}>{ano}º Ano</Text>\r\n            </View>\r\n          ))}\r\n        </RadioButton.Group>\r\n      )}\r\n  \r\n      {anoAluno !== '' && (\r\n        <>\r\n          <Text style={[styles.rotulo,{ color: dynamicTextColor }]}>\r\n            Turma:\r\n          </Text>\r\n          <RadioButton.Group onValueChange={setTurmaAluno} value={turmaAluno}>\r\n            { (turmasByAno[anoAluno]||[]).map(t => (\r\n              <View key={t.id} style={styles.grupoRadio}>\r\n                <RadioButton value={t.id.toString()} color=\"#47AD4D\"/>\r\n                <Text style={{color:dynamicTextColor}}>Turma {t.turma}</Text>\r\n              </View>\r\n            ))}\r\n          </RadioButton.Group>\r\n        </>\r\n      )}\r\n  \r\n      {/* botão para nova turma */}\r\n      <TouchableOpacity onPress={()=>setShowNewTurma(!showNewTurma)} style={styles.plusButton}>\r\n        <Ionicons name=\"add-circle-outline\" size={24} color={dynamicTextColor}/>\r\n        <Text style={{color:dynamicTextColor,marginLeft:5}}>Nova Turma</Text>\r\n      </TouchableOpacity>\r\n      <Portal>\r\n      <Dialog\r\n   visible={showNewTurma}\r\n   onDismiss={() => {\r\n     setShowNewTurma(false);\r\n     setNewTurmaAno('');\r\n     setNewTurmaLetra('');\r\n   }}\r\n   style={{\r\n     marginHorizontal: 20,\r\n     backgroundColor: '#fff'    // força fundo branco\r\n   }}\r\n   // se quiseres mesmo garantir que todo o Surface fica branco:\r\n   theme={{ colors: { surface: '#fff' } }}\r\n >\r\n      <Dialog.Title>Criar Nova Turma</Dialog.Title>\r\n      <Dialog.Content>\r\n        <Text style={[styles.rotulo, { color: dynamicTextColor, marginBottom: 0 }]}>\r\n          Selecione o Ano:\r\n        </Text>\r\n        <RadioButton.Group onValueChange={setNewTurmaAno} value={newTurmaAno}>\r\n          {['10','11','12'].map(a => (\r\n            <View key={a} style={styles.grupoRadio}>\r\n              <RadioButton value={a} color=\"#47AD4D\"/>\r\n              <Text style={{ color: dynamicTextColor }}>{a}º Ano</Text>\r\n            </View>\r\n          ))}\r\n        </RadioButton.Group>\r\n\r\n        <Text style={[styles.rotulo, { color: dynamicTextColor, marginTop: 10 }]}>\r\n          Letra da Turma:\r\n        </Text>\r\n        <TextInput\r\n      mode=\"outlined\"\r\n      placeholder=\"Ex: A\"\r\n      value={newTurmaLetra}\r\n     onChangeText={t =>\r\n        setNewTurmaLetra(t.replace(/[^A-Za-z]/g, '').toUpperCase())\r\n      }\r\n      maxLength={1}                     // limita a 1 carácter\r\n      style={[styles.newDisciplinaInput, { backgroundColor: '#fff' }]}\r\n      theme={{\r\n        colors: {\r\n          text: dynamicTextColor,\r\n          primary: dynamicTextColor,\r\n          background: '#fff'            // força fundo branco\r\n        }\r\n      }}\r\n    />\r\n      </Dialog.Content>\r\n      <Dialog.Actions>\r\n        <Button onPress={() => {\r\n          setShowNewTurma(false);\r\n          setNewTurmaAno('');\r\n          setNewTurmaLetra('');\r\n        }} labelStyle={{ color: \"red\" }}>Cancelar\r\n        </Button>\r\n        <Button\r\n  onPress={handleCreateTurma}\r\n  loading={creatingTurma}\r\n  disabled={salvarDisabled}\r\n  // aplica opacidade reduzida quando disabled\r\n  style={{ opacity: salvarDisabled ? 0.5 : 1 }}\r\n  // ajusta a cor do texto conforme o estado\r\n  labelStyle={{ color: salvarDisabled ? '#999' : '#47AD4D' }}\r\n>\r\n  Salvar\r\n</Button>\r\n      </Dialog.Actions>\r\n   </Dialog>\r\n </Portal>\r\n    </>\r\n  );\r\n  \r\n  const showToast = (message, type) => {\r\n    if (isWeb && type === 'success') {\r\n      // no web, sucessos viram alerta nativo\r\n      window.alert(message);\r\n      return;\r\n    }\r\n    setToast({ visible: true, message, type });\r\n    setTimeout(() => setToast({ visible: false, message: '', type: '' }), 2000);\r\n  };\r\n\r\n  // Carrega configurações (background e tema)\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        let bg = null;\r\n        let mode = null;\r\n        if (isWeb) {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (err) {\r\n        console.error(\"Erro ao carregar configurações:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadSettings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cargo === 'professor') {\r\n      buscarDisciplinas();\r\n    }\r\n  }, [route.params?.email, cargo]);\r\n\r\n  // Busca as disciplinas do servidor via getDisciplinas.php\r\n  const buscarDisciplinas = async () => {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 8000);\r\n    try {\r\n      const resposta = await fetch(url_getDisciplinas, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        signal: controller.signal,\r\n      });\r\n      clearTimeout(timeoutId);\r\n      if (!resposta.ok) {\r\n        throw new Error(`Erro HTTP: ${resposta.status}`);\r\n      }\r\n      const dados = await resposta.json();\r\n      if (dados.success) {\r\n        setDisciplinasList(dados.disciplinas);\r\n      } else {\r\n        showToast(dados.message || 'Erro ao carregar disciplinas.', 'error');\r\n      }\r\n    } catch (erro) {\r\n      console.error('[ERROR] Erro ao buscar disciplinas:', erro);\r\n      if (erro.name === 'AbortError') {\r\n        showToast('Tempo de resposta excedido. Verifique sua conexão.', 'error');\r\n      } else {\r\n        showToast('Não foi possível carregar as disciplinas.', 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para criar o utilizador conforme o cargo\r\n  const criarUtilizador = async () => {\r\n    try {\r\n      if (!emailLocal || !cargo) {\r\n        showToast('Pedimos que preencha todos os campos obrigatórios.', 'error');\r\n        return;\r\n      }\r\n      if (cargo === 'aluno' && (!anoAluno || !turmaAluno)) {\r\n        showToast('Para poder criar um aluno pedimos que preencha o ano e turma do aluno.', 'error');\r\n        return;\r\n      }\r\n      if (cargo === 'professor' &&\r\n        (!disciplinaSelecionada || !anoProfessorSelecionado || Object.keys(turmasProfessor).length === 0)) {\r\n        showToast('Pedimos que selecione uma disciplina que o professor irá lecionar, e as turmas que ele leciona.', 'error');\r\n        return;\r\n      }\r\n      setCarregando(true);\r\n      const endpointMap = {\r\n        admin: 'CreateAdmin.php',\r\n        professor: 'CreateProfessor.php',\r\n        aluno: 'CreateAluno.php',\r\n        auxiliar: 'CreateAuxiliar.php'\r\n      };\r\n      const endpoint = endpointMap[cargo];\r\n\r\n      const fullEmail = `${emailLocal}@etps.com.pt`;\r\n      if (emailLocal.includes('@')) {\r\n        showToast('Não inclua o “@” – só escreva a parte antes do domínio.', 'error');\r\n        return;\r\n      }    \r\n      let payload = {};\r\n      if (cargo === 'professor') {\r\n        payload = {\r\n          email: fullEmail,\r\n          cargoUtilizador: cargo,\r\n          disciplina: disciplinaSelecionada,\r\n          ano: anoProfessorSelecionado,\r\n          turma: turmasProfessor[anoProfessorSelecionado] || []\r\n        };\r\n      } else if (cargo === 'aluno') {\r\n        payload = { email: fullEmail, cargoUtilizador: cargo, ano: anoAluno, turma: turmaAluno };\r\n      } else {\r\n        payload = { email: fullEmail, cargoUtilizador: cargo };\r\n      }\r\n      const resposta = await fetch(url + endpoint, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Origin': 'http://localhost:19006'\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      if (!resposta.ok) {\r\n        const txt = await resposta.text();\r\n        console.error('ERRO HTTP', resposta.status, txt);\r\n        throw new Error(`HTTP ${resposta.status}`);\r\n      }\r\n      const dados = await resposta.json();\r\n      if (dados.success) {\r\n        showToast('Utilizador criado com sucesso!', 'success');\r\n      } else {\r\n        showToast(dados.message || 'Ocorreu um erro ao criar o utilizador.', 'error');\r\n      }\r\n    } catch (erro) {\r\n      console.error('[ERROR]', erro);\r\n      showToast('Falha na comunicação com o servidor.', 'error');\r\n    } finally {\r\n      setCarregando(false);\r\n    }\r\n  };\r\n\r\n  // Alterna a seleção de turma para o professor\r\n  const alternarTurmaProfessor = (turma) => {\r\n    setTurmasProfessor(prev => {\r\n      const currentYear = anoProfessorSelecionado;\r\n      const currentTurmas = prev[currentYear] || [];\r\n      const newTurmas = currentTurmas.includes(turma)\r\n        ? currentTurmas.filter(t => t !== turma)\r\n        : [...currentTurmas, turma];\r\n      return { ...prev, [currentYear]: newTurmas };\r\n    });\r\n  };\r\n\r\n  // Função para criação inline de nova disciplina\r\n  const handleCreateNewDisciplina = async () => {\r\n    if (!newDisciplina.trim()) {\r\n      showToast('Informe o nome da nova disciplina', 'error');\r\n      return;\r\n    }\r\n    setCreatingDisciplina(true);\r\n    try {\r\n      const resposta = await fetch(`${config.baseUrl}/adminFiles/CreateDisciplina.php`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          nomeDisciplina: newDisciplina,\r\n          professorId: 0  // Valor padrão, ajuste conforme necessário\r\n        }),\r\n      });\r\n      const dados = await resposta.json();\r\n      if (dados.success) {\r\n        showToast('Disciplina criada com sucesso!', 'success');\r\n        const novaDisciplinaObj = { id: dados.disciplinaId, disciplina: newDisciplina };\r\n        setDisciplinasList(prev => [...prev, novaDisciplinaObj]);\r\n        setDisciplinaSelecionada(novaDisciplinaObj.id.toString());\r\n        setNewDisciplina('');\r\n        setShowNewDisciplinaInput(false);\r\n      } else {\r\n        showToast(dados.message || 'Erro ao criar disciplina.', 'error');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro ao criar disciplina:\", err);\r\n      showToast('Erro na comunicação com o servidor (criar disciplina)', 'error');\r\n    } finally {\r\n      setCreatingDisciplina(false);\r\n    }\r\n  };\r\n\r\n  const podeSalvarDisciplina = newDisciplina.trim().length > 0;\r\n  const salvarTurmaDisabled =\r\n    !newTurmaAno ||\r\n    !newTurmaLetra.trim() ||\r\n    turmasList.some(\r\n      t =>\r\n        t.ano.toString() === newTurmaAno &&\r\n        t.turma.toUpperCase() === newTurmaLetra.toUpperCase()\r\n    );\r\n\r\n  const renderProfessorFields = () => (\r\n    <>\r\n      {/* Seleção de Disciplina */}\r\n      <Text style={[styles.rotulo, { color: dynamicTextColor }]}>\r\n        Selecione a Disciplina:\r\n      </Text>\r\n      <TouchableOpacity\r\n        onPress={() => setShowNewDisciplinaInput(!showNewDisciplinaInput)}\r\n        style={styles.plusButton}\r\n      >\r\n        <Ionicons name=\"add-circle-outline\" size={28} color={dynamicTextColor} />\r\n        <Text style={{ color: dynamicTextColor, marginLeft: 5 }}>Nova Disciplina</Text>\r\n      </TouchableOpacity>\r\n      {showNewDisciplinaInput && (\r\n        <View style={styles.newDisciplinaContainer}>\r\n          <TextInput\r\n            mode=\"outlined\"\r\n            placeholder=\"Nome da nova disciplina\"\r\n            value={newDisciplina}\r\n            onChangeText={setNewDisciplina}\r\n            style={styles.newDisciplinaInput}\r\n            theme={{\r\n              colors: {\r\n                primary: dynamicTextColor,\r\n                text: dynamicTextColor,\r\n                background: inputBackground,\r\n              },\r\n            }}\r\n          />\r\n<Button\r\n  onPress={handleCreateNewDisciplina}\r\n  mode=\"contained\"\r\n  loading={creatingDisciplina}\r\n  disabled={!podeSalvarDisciplina}\r\n  style={[styles.newDisciplinaButton, { opacity: podeSalvarDisciplina ? 1 : 0.5 }]}\r\n  labelStyle={{ color: podeSalvarDisciplina ? '#FFFFFF' : '#999' }}\r\n>\r\n  Salvar\r\n</Button>\r\n        </View>\r\n      )}\r\n      {disciplinasList.length === 0 ? (\r\n        <View style={styles.indicadorContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n          <Button onPress={buscarDisciplinas} mode=\"outlined\" style={{ marginTop: 10 }} labelStyle={{ color: \"#47AD4D\" }}>\r\n            Tentar Novamente\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <ScrollView\r\n          style={styles.scrollViewDisciplinas}\r\n          contentContainerStyle={{ paddingVertical: 5 }}\r\n          nestedScrollEnabled={true}\r\n          scrollEnabled={true}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n        >\r\n          <RadioButton.Group onValueChange={setDisciplinaSelecionada} value={disciplinaSelecionada}>\r\n            {disciplinasList.map(d => (\r\n              <View key={d.id} style={styles.grupoRadio}>\r\n                <RadioButton value={d.id.toString()} color=\"#47AD4D\" />\r\n                <Text style={{ color: dynamicTextColor }}>{d.disciplina}</Text>\r\n              </View>\r\n            ))}\r\n          </RadioButton.Group>\r\n        </ScrollView>\r\n      )}\r\n  \r\n      {/* Seleção de Ano (dinâmico) */}\r\n      <Text style={[styles.rotulo, { color: dynamicTextColor, marginTop: 10 }]}>\r\n        Ano em que o professor leciona:\r\n      </Text>\r\n      <RadioButton.Group\r\n        onValueChange={setAnoProfessorSelecionado}\r\n        value={anoProfessorSelecionado}\r\n      >\r\n        {anosList.map(ano => (\r\n          <View key={ano} style={styles.grupoRadio}>\r\n            <RadioButton value={ano} color=\"#47AD4D\" />\r\n            <Text style={{ color: dynamicTextColor }}>{ano}º Ano</Text>\r\n          </View>\r\n        ))}\r\n      </RadioButton.Group>\r\n  \r\n      {/* Botão Nova Turma (abre o mesmo modal) */}\r\n      <TouchableOpacity\r\n        onPress={() => setShowNewTurma(true)}\r\n        style={styles.plusButton}\r\n      >\r\n        <Ionicons name=\"add-circle-outline\" size={24} color={dynamicTextColor} />\r\n        <Text style={{ color: dynamicTextColor, marginLeft: 5 }}>Nova Turma</Text>\r\n      </TouchableOpacity>\r\n  \r\n      {/* Modal de criar turma (reaproveitando o mesmo estado e lógica) */}\r\n      <Portal>\r\n        <Dialog\r\n          visible={showNewTurma}\r\n          onDismiss={() => {\r\n            setShowNewTurma(false);\r\n            setNewTurmaAno('');\r\n            setNewTurmaLetra('');\r\n          }}\r\n          style={{ marginHorizontal: 20, backgroundColor: '#fff' }}\r\n          theme={{ colors: { surface: '#fff' } }}\r\n        >\r\n          <Dialog.Title>Criar Nova Turma</Dialog.Title>\r\n          <Dialog.Content>\r\n            <Text style={[styles.rotulo, { color: dynamicTextColor, marginBottom: 0 }]}>\r\n              Selecione o Ano:\r\n            </Text>\r\n            <RadioButton.Group onValueChange={setNewTurmaAno} value={newTurmaAno}>\r\n              {anosList.map(a => (\r\n                <View key={a} style={styles.grupoRadio}>\r\n                  <RadioButton value={a} color=\"#47AD4D\" />\r\n                  <Text style={{ color: dynamicTextColor }}>{a}º Ano</Text>\r\n                </View>\r\n              ))}\r\n            </RadioButton.Group>\r\n  \r\n            <Text style={[styles.rotulo, { color: dynamicTextColor, marginTop: 10 }]}>\r\n              Letra da Turma:\r\n            </Text>\r\n            <TextInput\r\n              mode=\"outlined\"\r\n              placeholder=\"Ex: A\"\r\n              value={newTurmaLetra}\r\n              onChangeText={t => setNewTurmaLetra(t.replace(/[^A-Za-z]/g, '').toUpperCase())}\r\n              maxLength={1}\r\n              style={[styles.newDisciplinaInput, { backgroundColor: '#fff' }]}\r\n              theme={{\r\n                colors: {\r\n                  text: dynamicTextColor,\r\n                  primary: dynamicTextColor,\r\n                  background: '#fff',\r\n                },\r\n              }}\r\n            />\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button\r\n              onPress={() => {\r\n                setShowNewTurma(false);\r\n                setNewTurmaAno('');\r\n                setNewTurmaLetra('');\r\n              }}\r\n              labelStyle={{ color: 'red' }}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n            <Button\r\n              onPress={handleCreateTurma}\r\n              loading={creatingTurma}\r\n              disabled={salvarTurmaDisabled}\r\n              style={{ opacity: salvarTurmaDisabled ? 0.5 : 1 }}\r\n              labelStyle={{ color: salvarTurmaDisabled ? '#999' : '#47AD4D' }}\r\n            >\r\n              Salvar\r\n            </Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n  \r\n      {/* Seleção de Turmas (dinâmico) */}\r\n      {anoProfessorSelecionado !== '' && (\r\n        <View style={styles.containerTurmas}>\r\n          <Text style={[styles.rotulo, { color: dynamicTextColor }]}>\r\n            Selecionar Turmas:\r\n          </Text>\r\n          <ScrollView\r\n            style={styles.scrollViewTurmas}\r\n            contentContainerStyle={{ paddingVertical: 5 }}\r\n            nestedScrollEnabled={true}\r\n            scrollEnabled={true}\r\n          >\r\n            <View style={styles.grelhaTurmas}>\r\n              {(turmasByAno[anoProfessorSelecionado] || []).map(t => {\r\n                const selecionada =\r\n                  (turmasProfessor[anoProfessorSelecionado] || []).includes(t.turma);\r\n                return (\r\n                  <Pressable\r\n                    key={t.id}\r\n                    style={[styles.botaoTurma, selecionada && styles.botaoTurmaSelecionada]}\r\n                    onPress={() => alternarTurmaProfessor(t.turma)}\r\n                  >\r\n                    <Text\r\n                      style={\r\n                        selecionada\r\n                          ? styles.textoTurmaSelecionada\r\n                          : [styles.textoTurma, { color: dynamicTextColor }]\r\n                      }\r\n                    >\r\n                      {t.turma}\r\n                    </Text>\r\n                  </Pressable>\r\n                );\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n  \r\n          {/* Exibição das turmas já selecionadas */}\r\n          <View style={styles.turmasSelecionadas}>\r\n            <Text style={[styles.rotuloTurmas, { color: dynamicTextColor }]}>\r\n              Turmas Selecionadas:\r\n            </Text>\r\n            {Object.entries(turmasProfessor).map(([ano, turmas]) => (\r\n              <Text key={ano} style={[styles.textoTurmas, { color: dynamicTextColor }]}>\r\n                {ano}º: {Array.isArray(turmas) ? turmas.join(', ') : ''}\r\n              </Text>\r\n            ))}\r\n            {Object.keys(turmasProfessor).length === 0 && (\r\n              <Text style={[styles.textoTurmas, { color: dynamicTextColor }]}>\r\n                Nenhuma turma selecionada\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );   \r\n\r\n  const renderContentWeb = () => (\r\n    <View style={styles.webContainer}>\r\n      <View style={styles.leftColumn}>\r\n        <View style={{\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          marginBottom: 10\r\n        }}>\r\n          <Text style={[styles.rotulo, { color: dynamicTextColor, margin: 0 }]}>\r\n            Selecione o Cargo:\r\n          </Text>\r\n          <TouchableOpacity onPress={() => setInfoVisible(true)} style={{ padding: 4 }}>\r\n            <Image\r\n              source={require('../../assets/icons/info.png')}\r\n              style={{ width: 20, height: 20, tintColor: dynamicTextColor }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <RadioButton.Group onValueChange={setCargo} value={cargo}>\r\n          <View style={styles.grupoRadio}>\r\n            <RadioButton value=\"aluno\" color=\"#47AD4D\"/>\r\n            <Text style={{ color: dynamicTextColor }}>Aluno</Text>\r\n          </View>\r\n          <View style={styles.grupoRadio}>\r\n            <RadioButton value=\"professor\" color=\"#47AD4D\"/>\r\n            <Text style={{ color: dynamicTextColor }}>Professor</Text>\r\n          </View>\r\n          <View style={styles.grupoRadio}>\r\n            <RadioButton value=\"admin\" color=\"#47AD4D\"/>\r\n            <Text style={{ color: dynamicTextColor }}>Administrador</Text>\r\n          </View>\r\n          <View style={styles.grupoRadio}>\r\n            <RadioButton value=\"auxiliar\" color=\"#47AD4D\"/>\r\n            <Text style={{ color: dynamicTextColor }}>Auxiliar</Text>\r\n          </View>\r\n        </RadioButton.Group>\r\n        <TextInput\r\n          label={<Text style={{ color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }}>Nome de utilizador</Text>}\r\n          mode=\"outlined\"\r\n          value={emailLocal}\r\n          onChangeText={setEmailLocal}\r\n          keyboardType=\"email-address\"\r\n          style={[styles.campoInput, { backgroundColor: inputBackground }]}\r\n          right={<TextInput.Affix text=\"@etps.com.pt\" />}\r\n          theme={{\r\n            colors: {\r\n              text: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n              primary: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n              placeholder: userTheme === \"dark\" ? \"rgba(255,255,255,0.6)\" : \"rgba(0,0,0,0.6)\",\r\n              background: inputBackground,\r\n              onSurfaceVariant: userTheme === \"dark\" ? \"#FFF\" : \"#000\"\r\n            }\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={styles.rightColumn}>\r\n      {cargo === 'aluno' && renderAlunoFields()}\r\n        {cargo === 'professor' && renderProfessorFields()}\r\n        {(cargo === 'admin' || cargo === 'auxiliar') && (\r\n          <Text style={{ color: dynamicTextColor, marginTop: 20 }}>\r\n            Nenhum campo adicional necessário.\r\n          </Text>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderContentMobile = () => (\r\n    <View style={styles.mobileContainer}>\r\n      <View style={{\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 10\r\n      }}>\r\n        <Text style={[styles.rotulo, { color: dynamicTextColor, margin: 0 }]}>\r\n          Selecione o Cargo:\r\n        </Text>\r\n        <TouchableOpacity onPress={() => setInfoVisible(true)} style={{ padding: 4 }}>\r\n          <Image\r\n            source={require('../../assets/icons/info.png')}\r\n            style={{ width: 20, height: 20, tintColor: dynamicTextColor }}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <RadioButton.Group onValueChange={setCargo} value={cargo}>\r\n        <View style={styles.grupoRadio}>\r\n          <RadioButton value=\"aluno\" color=\"#47AD4D\"/>\r\n          <Text style={{ color: dynamicTextColor }}>Aluno</Text>\r\n        </View>\r\n        <View style={styles.grupoRadio}>\r\n          <RadioButton value=\"professor\" color=\"#47AD4D\"/>\r\n          <Text style={{ color: dynamicTextColor }}>Professor</Text>\r\n        </View>\r\n        <View style={styles.grupoRadio}>\r\n          <RadioButton value=\"admin\" color=\"#47AD4D\"/>\r\n          <Text style={{ color: dynamicTextColor }}>Administrador</Text>\r\n        </View>\r\n        <View style={styles.grupoRadio}>\r\n          <RadioButton value=\"auxiliar\" color=\"#47AD4D\"/>\r\n          <Text style={{ color: dynamicTextColor }}>Auxiliar</Text>\r\n        </View>\r\n      </RadioButton.Group>\r\n      <TextInput\r\n        label={<Text style={{ color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }}>Nome de utilizador</Text>}\r\n        mode=\"outlined\"\r\n        value={emailLocal}\r\n        onChangeText={t => setEmailLocal(t.replace(/@.*$/, ''))}\r\n        placeholder=\"ex: aluno\"\r\n        keyboardType=\"default\"\r\n        style={[styles.campoInput, { backgroundColor: inputBackground }]}\r\n        right={<TextInput.Affix text=\"@etps.com.pt\" />}\r\n        theme={{\r\n          colors: {\r\n            text: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n            primary: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n            placeholder: userTheme === \"dark\" ? \"rgba(255,255,255,0.6)\" : \"rgba(0,0,0,0.6)\",\r\n            background: inputBackground,\r\n            onSurfaceVariant: userTheme === \"dark\" ? \"#FFF\" : \"#000\"\r\n          }\r\n        }}\r\n      />\r\n      {cargo === 'aluno' && renderAlunoFields()}\r\n      {cargo === 'professor' && renderProfessorFields()}\r\n      {(cargo === 'admin' || cargo === 'auxiliar') && (\r\n        <Text style={{ color: dynamicTextColor, marginTop: 20 }}>\r\n          Nenhum campo adicional necessário.\r\n        </Text>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  const renderContent = () => isWeb ? renderContentWeb() : renderContentMobile();\r\n\r\n  const renderMobileLayout = () => (\r\n    <ScrollView   contentContainerStyle={styles.scrollContainer}\r\n      nestedScrollEnabled={true}\r\n      keyboardShouldPersistTaps=\"handled\"\r\n    >\r\n      {renderContent()}\r\n      <Button \r\n        mode=\"contained\" \r\n        onPress={criarUtilizador} \r\n        style={styles.botaoCriar} \r\n        labelStyle={{ color: '#fff' }}\r\n        loading={carregando}\r\n      >\r\n        Criar Utilizador\r\n      </Button>\r\n    </ScrollView>\r\n  );\r\n\r\n  const renderWebLayout = () => (\r\n    <>\r\n      {renderContent()}\r\n      <Button \r\n        mode=\"contained\" \r\n        onPress={criarUtilizador} \r\n        style={styles.botaoCriar} \r\n        labelStyle={{ color: '#fff' }}\r\n        loading={carregando}\r\n      >\r\n        Criar Utilizador\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const containerWidth = isWeb ? '80%' : '90%';\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={ backgroundUrl ? { uri: backgroundUrl } : require('../../assets/images/bg1.jpg') }\r\n      style={styles.bgImage}\r\n    >\r\n      {userTheme === \"dark\" && <View style={styles.darkOverlay} />}\r\n      <StatusBar \r\n        backgroundColor=\"transparent\" \r\n        translucent \r\n        barStyle={userTheme === \"dark\" ? 'light-content' : 'dark-content'} \r\n      />\r\n\r\n      {toast.visible && (\r\n        isWeb && toast.type !== 'success' ? (\r\n          <View style={styles.webErrorOverlay}>\r\n            <Text style={styles.webErrorText}>{toast.message}</Text>\r\n          </View>\r\n        ) : (\r\n          <View style={[\r\n            styles.toastContainer,\r\n            toast.type === 'success' ? styles.toastSuccess : styles.toastError\r\n          ]}>\r\n            <Text style={styles.toastText}>{toast.message}</Text>\r\n          </View>\r\n        )\r\n      )}\r\n\r\n      <View style={[styles.headerFixed, { backgroundColor: userTheme === \"dark\" ? \"#101218\" : \"#FFFFFF\" }]}>\r\n        <TouchableOpacity onPress={() => setMenuVisivel(true)} style={styles.botaoMenu}>\r\n          <Image\r\n            source={require('../../assets/icons/menu-burger.png')}\r\n            style={[styles.menuIcon, { tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\" }]}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setModalContaVisivel(true)} style={styles.botaoConta}>\r\n          <Image\r\n            source={require('../../assets/icons/user.png')}\r\n            style={[styles.userIcon, { tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\" }]}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[styles.fixedBox, { width: containerWidth, backgroundColor: boxBackground }]}>\r\n        {loading ? (\r\n            <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n        ) : (\r\n          isWeb ? renderWebLayout() : renderMobileLayout()\r\n        )}\r\n      </View>\r\n\r\n      {menuVisivel && (\r\n        <TouchableWithoutFeedback onPress={() => setMenuVisivel(false)}>\r\n          <View style={styles.overlay}>\r\n            <TouchableWithoutFeedback>\r\n              <View style={[styles.sideMenu, { backgroundColor: userTheme === \"dark\" ? \"#101218\" : \"#FFFFFF\" }]}>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setMenuVisivel(false);\r\n                    navigation.navigate(\"PutCalendar\", { email: emailLocal });\r\n                  }}\r\n                  style={styles.menuItem}\r\n                >\r\n                  <Text style={[styles.menuText, { color: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000000\" }]}>\r\n                    Carregar um Calendário\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setMenuVisivel(false);\r\n                    navigation.navigate(\"confirmacoesScreen\", { email: emailLocal });\r\n                  }}\r\n                  style={styles.menuItem}\r\n                >\r\n                  <Text style={[styles.menuText, { color: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000000\" }]}>\r\n                    Alunos Pendentes\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n      <Portal>\r\n      <Dialog\r\n        visible={infoVisible}\r\n        onDismiss={() => setInfoVisible(false)}\r\n        style={[\r\n          { backgroundColor: '#fff' },\r\n          isWeb && { width: 400, alignSelf: 'center' }\r\n        ]}\r\n        theme={{ colors: { surface: '#fff' } }}\r\n      >\r\n          <Dialog.Title>O que podes fazer aqui?</Dialog.Title>\r\n          <Dialog.Content>\r\n            <ScrollView style={isWeb ? { maxHeight: 200 } : { maxHeight: 200 }}>\r\n              <Paragraph>• É possível criar uma conta para um utilizador com cargo “Aluno”, “Professor”, “Administrador” ou “Auxiliar”.</Paragraph>\r\n              <Paragraph>• Se for para criar um “Aluno”, escolher ano (10º,11º,12º) e a turma.</Paragraph>\r\n              <Paragraph>• Se for para criar um “Professor”, selecionar disciplina, ano e uma ou mais turmas.</Paragraph>\r\n              <Paragraph>• Os administradores e auxiliares não têm campos adicionais, bastando assim adicionar o email.</Paragraph>\r\n              <Paragraph>• É possível criar um nova disciplina, bastando apenas informar o nome.</Paragraph>\r\n            </ScrollView>\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button labelStyle={{ color: \"#47AD4D\" }} onPress={() => setInfoVisible(false)}>OK</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n      <ModalConfig\r\n        visible={modalContaVisivel}\r\n        dynamicHeaderBackground={userTheme === \"dark\" ? \"#101218\" : \"#FFFFFF\"}\r\n        dynamicTextColor={userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\"}\r\n        onClose={() => setModalContaVisivel(false)}\r\n        navigation={navigation}\r\n        email={authEmail}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollViewDisciplinas: {\r\n    maxHeight: 120,\r\n    marginBottom: 10,\r\n  },\r\n  scrollViewTurmas: {\r\n    maxHeight: 100,\r\n    marginVertical: 5,\r\n  },\r\n  bgImage: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  indicadorContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginVertical: 10,\r\n  },\r\n  darkOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.3)\"\r\n  },\r\n  headerFixed: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingTop: StatusBar.currentHeight || 20,\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    position: 'absolute',\r\n    top: 0,\r\n    zIndex: 10,\r\n  },\r\n  botaoMenu: { flex: 1 },\r\n  menuIcon: {\r\n    width: Platform.OS === \"web\" ? 30 : 23,\r\n    height: Platform.OS === \"web\" ? 30 : 25,\r\n    marginLeft: 3,\r\n    marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n  },\r\n  plusButton: {\r\n    flexDirection: 'row', \r\n    alignItems: 'center',\r\n    marginVertical: 8,\r\n  },\r\n  newDisciplinaContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  newDisciplinaInput: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n    backgroundColor: '#fff',\r\n  },\r\n  newDisciplinaButton: {\r\n    backgroundColor: '#47AD4D',\r\n  },\r\n  botaoConta: {\r\n    flex: 1,\r\n    alignItems: 'flex-end',\r\n  },\r\n  userIcon: {\r\n    width: Platform.OS === \"web\" ? 30 : 25,\r\n    height: Platform.OS === \"web\" ? 30 : 25,\r\n    marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n  },\r\n  fixedBox: {\r\n    marginTop: 80,\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    maxHeight: '80%',\r\n    alignSelf: 'center'\r\n  },\r\n  scrollContainer: {\r\n    paddingBottom: 20,\r\n  },\r\n  webContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  mobileContainer: {\r\n    paddingBottom: 20,\r\n  },\r\n  leftColumn: {\r\n    flex: 1,\r\n    paddingRight: 15,\r\n  },\r\n  rightColumn: {\r\n    flex: 1,\r\n    paddingLeft: 15,\r\n  },\r\n  rotulo: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  grupoRadio: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  campoInput: {\r\n    marginBottom: 15,\r\n  },\r\n  botaoCriar: {\r\n    marginTop: 10,\r\n    backgroundColor: '#47AD4D',\r\n    alignSelf: 'center',\r\n    width: '90%',\r\n  },\r\n  loadingContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loadingText: {\r\n    fontSize: 18,\r\n    marginTop: 10,\r\n  },\r\n  grelhaTurmas: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 5,\r\n  },\r\n  botaoTurma: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    padding: 8,\r\n    width: 50,\r\n    alignItems: 'center',\r\n    marginVertical: 2,\r\n    marginRight: 5,\r\n  },\r\n  botaoTurmaSelecionada: {\r\n    backgroundColor: 'green',\r\n    borderColor: 'green',\r\n  },\r\n  textoTurma: {},\r\n  textoTurmaSelecionada: { color: '#fff' },\r\n  containerTurmas: {\r\n    marginVertical: 10,\r\n  },\r\n  rotuloTurmas: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  textoTurmas: {},\r\n  turmasSelecionadas: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  scrollViewFixed: {\r\n    maxHeight: 120,\r\n    marginBottom: 10,\r\n  },\r\n  toastContainer: {\r\n    position: 'absolute',\r\n    top: Platform.OS === 'web' ? 10 : 40,\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    zIndex: 20,\r\n  },\r\n  toastText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n  },\r\n  toastSuccess: {\r\n    backgroundColor: 'green',\r\n  },\r\n  toastError: {\r\n    backgroundColor: 'red',\r\n  },\r\n  webErrorOverlay: {\r\n    position: 'absolute',\r\n    top: '1%',\r\n    left: '10%',\r\n    right: '10%',\r\n    padding: 15,\r\n    backgroundColor: 'red',\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 20,\r\n  },\r\n  webErrorText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0, \r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0,0,0,0.4)',\r\n  },\r\n  sideMenu: {\r\n    position: 'absolute',\r\n    top: Platform.OS === 'web' ? 10 : 72,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: 260,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 30,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 3, height: 0 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n    elevation: 6,\r\n  },\r\n  menuItem: {\r\n    paddingVertical: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    marginBottom: 10,\r\n  },\r\n  menuText: {\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default CriarUtilizadorScreen;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Image,\r\n  ImageBackground,\r\n  Alert,\r\n  FlatList,\r\n  SafeAreaView,\r\n  KeyboardAvoidingView,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  Text,\r\n  Divider,\r\n} from 'react-native-paper';\r\nimport { useRoute, RouteProp, useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport config from '../../config/config_db';\r\nimport axios from 'axios';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport ModalConfig from '../../components/modalConfig';\r\n\r\ntype RootStackParamList = {\r\n  SuggestionsResponse: { email: string };\r\n  Aluno: undefined;\r\n};\r\ntype SuggestionsResponseRouteProp = RouteProp<\r\n  RootStackParamList,\r\n  'SuggestionsResponse'\r\n>;\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\ninterface Suggestion {\r\n  id: string;\r\n  email: string;\r\n  message: string;\r\n  date_sent: string;\r\n  // resposta já existente (não usada neste fetch)\r\n  response?: string;\r\n  responder?: string;\r\n  date_response?: string;\r\n}\r\n\r\nconst SuggestionsResponseScreen: React.FC = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const route = useRoute<SuggestionsResponseRouteProp>();\r\n  const { email: responderEmail } = route.params;\r\n\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<'light' | 'dark'>('light');\r\n\r\n  const [unanswered, setUnanswered] = useState<Suggestion[]>([]);\r\n  const [loadingList, setLoadingList] = useState<boolean>(true);\r\n  const [responses, setResponses] = useState<Record<string, string>>({});\r\n  const [saving, setSaving] = useState<boolean>(false);\r\n  const [modalContaVisivel, setModalContaVisivel] = useState<boolean>(false);\r\n\r\n  // carrega background e tema\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === 'web') {\r\n          bg = localStorage.getItem('backgroundUrl');\r\n          mode = localStorage.getItem('userTheme');\r\n        } else {\r\n          bg = await SecureStore.getItemAsync('backgroundUrl');\r\n          mode = await SecureStore.getItemAsync('userTheme');\r\n        }\r\n        if (bg && !bg.startsWith('http')) bg = `${config.baseUrl}/${bg}`;\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === 'dark' ? 'dark' : 'light');\r\n      } catch {}\r\n    })();\r\n  }, []);\r\n\r\n  // fetch sugestões sem resposta\r\n  const fetchUnanswered = async () => {\r\n    setLoadingList(true);\r\n    try {\r\n      const res = await axios.get(\r\n        `${config.baseUrl}/calendarioFiles/suggest/fetch_unanswered_suggestions.php`,\r\n        { params: { email: responderEmail } }\r\n      );\r\n      if (res.data.success) {\r\n        setUnanswered(res.data.data);\r\n      } else {\r\n        Alert.alert('Erro', res.data.message || 'Falha ao carregar sugestões');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert('Erro', 'Não foi possível comunicar com o servidor.');\r\n    } finally {\r\n      setLoadingList(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUnanswered();\r\n  }, []);\r\n\r\n  const confirmBack = () => {\r\n    if (Platform.OS === 'web') {\r\n      if (window.confirm('Tem a certeza que deseja sair?'))\r\n        navigation.navigate('Aluno');\r\n    } else {\r\n      Alert.alert(\r\n        'Confirmação',\r\n        'Tem a certeza que deseja sair?',\r\n        [\r\n          { text: 'Cancelar', style: 'cancel' },\r\n          { text: 'Sim', onPress: () => navigation.navigate('Aluno') },\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  // guarda todas as respostas preenchidas\r\n  const handleSave = async () => {\r\n    const payload = Object.entries(responses)\r\n      .filter(([, resp]) => resp.trim() !== '')\r\n      .map(([id, resp]) => ({ id, response: resp }));\r\n    if (payload.length === 0) {\r\n      Alert.alert('Atenção', 'Nenhuma resposta para guardar.');\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    try {\r\n      const res = await axios.post(\r\n        `${config.baseUrl}/calendarioFiles/suggest/submit_responses.php`,\r\n        { responder: responderEmail, responses: payload }\r\n      );\r\n      if (res.data.success) {\r\n        Alert.alert('Sucesso', 'Respostas guardadas com sucesso.');\r\n        setResponses({});\r\n        fetchUnanswered();\r\n      } else {\r\n        Alert.alert('Erro', res.data.message || 'Falha ao guardar respostas');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert('Erro', 'Não foi possível comunicar com o servidor.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item }: { item: Suggestion }) => (\r\n    <View style={styles.card}>\r\n      <Text style={styles.msgTitle}>Sugestão de {item.email}</Text>\r\n      <Text style={styles.msgDate}>{item.date_sent}</Text>\r\n      <Text style={styles.msgBody}>{item.message}</Text>\r\n      <TextInput\r\n        mode=\"outlined\"\r\n        label=\"Responder\"\r\n        placeholder=\"Escreve aqui a tua resposta...\"\r\n        value={responses[item.id] || ''}\r\n        onChangeText={text =>\r\n          setResponses(prev => ({ ...prev, [item.id]: text }))\r\n        }\r\n        multiline\r\n        style={styles.responseInput}\r\n      />\r\n      <Divider />\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require('../../assets/images/bg1.jpg')\r\n      }\r\n      style={styles.bgImage}\r\n      resizeMode=\"cover\"\r\n    >\r\n      <SafeAreaView style={styles.safe}>\r\n        {/* HEADER */}\r\n        <View\r\n          style={[\r\n            styles.header,\r\n            {\r\n              paddingTop:\r\n                Platform.OS === 'web'\r\n                  ? 40\r\n                  : StatusBar.currentHeight || 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity onPress={confirmBack} style={{ flex: 1 }}>\r\n            <Image\r\n              source={require('../../assets/icons/angle-left.png')}\r\n              style={[\r\n                styles.icon,\r\n                { tintColor: userTheme === 'dark' ? '#FFF' : '#000' },\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => setModalContaVisivel(true)}\r\n            style={{ flex: 1, alignItems: 'flex-end' }}\r\n          >\r\n            <Image\r\n              source={require('../../assets/icons/user.png')}\r\n              style={[\r\n                styles.icon,\r\n                { tintColor: userTheme === 'dark' ? '#FFF' : '#000' },\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* LISTA */}\r\n        {loadingList ? (\r\n          <ActivityIndicator style={{ marginTop: 50 }} />\r\n        ) : (\r\n          <FlatList\r\n            data={unanswered}\r\n            keyExtractor={i => i.id}\r\n            renderItem={renderItem}\r\n            contentContainerStyle={{ padding: 16, paddingTop: 100 }}\r\n            ListFooterComponent={\r\n              saving ? (\r\n                <ActivityIndicator style={{ margin: 20 }} />\r\n              ) : (\r\n                <Button\r\n                  mode=\"contained\"\r\n                  onPress={handleSave}\r\n                  style={styles.saveButton}\r\n                >\r\n                  Guardar Respostas\r\n                </Button>\r\n              )\r\n            }\r\n          />\r\n        )}\r\n\r\n        <ModalConfig\r\n          visible={modalContaVisivel}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setModalContaVisivel(false)}\r\n          navigation={navigation}\r\n          email={responderEmail}\r\n        />\r\n      </SafeAreaView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  bgImage: { flex: 1 },\r\n  safe: { flex: 1, backgroundColor: 'transparent' },\r\n  header: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    position: 'absolute',\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  icon: {\r\n    width: Platform.OS === 'web' ? 35 : 23,\r\n    height: Platform.OS === 'web' ? 35 : 25,\r\n    marginLeft: 3,\r\n    marginTop: Platform.OS === 'web' ? -15 : 3,\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    borderRadius: 6,\r\n    padding: 12,\r\n    marginBottom: 16,\r\n  },\r\n  msgTitle: { fontWeight: 'bold', marginBottom: 4 },\r\n  msgDate: { fontSize: 12, marginBottom: 8, color: '#666' },\r\n  msgBody: { marginBottom: 12 },\r\n  responseInput: { minHeight: 60, marginBottom: 8 },\r\n  saveButton: { margin: 16 },\r\n});\r\n\r\nexport default SuggestionsResponseScreen;","// src/utils/colors.ts\r\n\r\n// Define um tipo “Theme” (podes usar “string” se não quiseres TS):\r\nexport type ThemeMode = \"light\" | \"dark\";\r\n\r\n// Aqui está o “mapa” de cores para cada elemento. \r\n// Para cada modo (“light” e “dark”) definimos as cores de título, caixa, ícone, texto genérico, fundo de modal etc.\r\nconst palette = {\r\n  light: {\r\n    title: \"#000000\",         // cor do texto de título no modo claro\r\n    box: \"#FFFFFF\",           // cor de fundo de caixas no modo claro\r\n    icon: \"#000000\",          // cor dos ícones no modo claro\r\n    text: \"#333333\",          // cor de texto genérico no modo claro\r\n    background: \"#F2F2F2\",    // cor geral de background no modo claro\r\n    modalOverlay: \"rgba(0,0,0,0.1)\", // exemplo de overlay claro\r\n    // adiciona aqui outras propriedades que precises:\r\n    //   buttonBackground: \"#E0E0E0\",\r\n    //   buttonText: \"#000000\",\r\n    //   border: \"#CCCCCC\",\r\n    //   etc...\r\n  },\r\n  dark: {\r\n    title: \"#FFFFFF\",         // cor do texto de título no modo escuro\r\n    box: \"#222222\",           // cor de fundo de caixas no modo escuro\r\n    icon: \"#FFFFFF\",          // cor dos ícones no modo escuro\r\n    text: \"#EEEEEE\",          // cor de texto genérico no modo escuro\r\n    background: \"#000000\",    // cor geral de background no modo escuro\r\n    modalOverlay: \"rgba(255,255,255,0.1)\", // exemplo de overlay escuro\r\n    // outras propriedades específicas para dark:\r\n    //   buttonBackground: \"#333333\",\r\n    //   buttonText: \"#FFFFFF\",\r\n    //   border: \"#444444\",\r\n    //   etc...\r\n  },\r\n};\r\n\r\n// Para cada “elemento” que precises (título, caixa, ícone, texto, fundo, overlay…), exporta uma função que recebe o tema e devolve a cor correspondente:\r\nexport function titleColor(theme: ThemeMode): string {\r\n  return palette[theme].title;\r\n}\r\n\r\nexport function boxColor(theme: ThemeMode): string {\r\n  return palette[theme].box;\r\n}\r\n\r\nexport function iconColor(theme: ThemeMode): string {\r\n  return palette[theme].icon;\r\n}\r\n\r\nexport function textColor(theme: ThemeMode): string {\r\n  return palette[theme].text;\r\n}\r\n\r\nexport function backgroundColor(theme: ThemeMode): string {\r\n  return palette[theme].background;\r\n}\r\n\r\nexport function modalOverlayColor(theme: ThemeMode): string {\r\n  return palette[theme].modalOverlay;\r\n}\r\nexport function color(theme: ThemeMode): string {\r\n  return palette[theme].modalOverlay;\r\n}\r\n\r\n// Se precisares de mais “categorias”, cria mais funções, por ex:\r\n// export function buttonBackgroundColor(theme: ThemeMode): string {\r\n//   return palette[theme].buttonBackground;\r\n// }\r\n// export function buttonTextColor(theme: ThemeMode): string {\r\n//   return palette[theme].buttonText;\r\n// }\r\n// export function borderColor(theme: ThemeMode): string {\r\n//   return palette[theme].border;\r\n// }\r\n// …etc.\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { View, StyleSheet, Image, ImageBackground, Modal, StatusBar, SafeAreaView, ActivityIndicator, ScrollView, RefreshControl, Dimensions, Alert, Platform, TouchableOpacity } from \"react-native\";\r\nimport { Text, IconButton, useTheme, TextInput, Button } from \"react-native-paper\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport RNPickerSelect from \"react-native-picker-select\";\r\nimport { Calendar as BigCalendar } from \"react-native-big-calendar\";\r\nimport config from \"../../config/config_db\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\nimport { titleColor, boxColor, iconColor, textColor, backgroundColor, modalOverlayColor, color } from \"../../components/colors\";\r\n\r\nconst defaultColors = [\r\n  { value: \"#FF6347\", name: \"Tomate\" },\r\n  { value: \"#DC143C\", name: \"Carmesim\" },\r\n  { value: \"#FF4500\", name: \"Vermelho-Laranja\" },\r\n  { value: \"#8A2BE2\", name: \"Azul-Violeta\" },\r\n  { value: \"#5F9EA0\", name: \"Azul-Cadete\" },\r\n  { value: \"#2E8B57\", name: \"Verde-Mar\" },\r\n  { value: \"#FF8C00\", name: \"Laranja-Escuro\" },\r\n  { value: \"#9932CC\", name: \"Orquídea-Escura\" },\r\n  { value: \"#20B2AA\", name: \"Verde-Mar-Claro\" },\r\n  { value: \"#4682B4\", name: \"Azul-Aço\" },\r\n];\r\n\r\ninterface IMyEvent {\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  color?: string;\r\n  isTask?: boolean;\r\n  taskDetails?: any;\r\n  id?: number;\r\n  descricao?: string;\r\n}\r\n\r\nconst AlunoScreen = ({ navigation }) => {\r\n  const route = useRoute<{\r\n    key: string;\r\n    name: string;\r\n    params: {\r\n      fromLogin?: any;\r\n      email?: string;\r\n      theme?: \"light\" | \"dark\";\r\n      backgroundUrl?: string;\r\n    };\r\n  }>();\r\n\r\n  const url_searchEvents = `${config.baseUrl}/calendarioFiles/aluno/fetch_events.php`;\r\n  const url_fetchTasksData = `${config.baseUrl}/calendarioFiles/aluno/fetch_tasks.php`;\r\n  const url_saveUserEvents = `${config.baseUrl}/calendarioFiles/aluno/update_events_config.php`;\r\n  const url_saveUserTasks = `${config.baseUrl}/calendarioFiles/aluno/update_tasks_config.php`;\r\n  const { height } = Dimensions.get(\"window\");\r\n\r\n  const [formData, setFormData] = useState({ email: \"\", aluno_id: null });\r\n\r\n  const [bigCalendarEvents, setBigCalendarEvents] = useState<IMyEvent[]>([]);\r\n  const [tasks, setTasks] = useState<any[]>([]);\r\n\r\n  const [menuModalVisible, setMenuModalVisible] = useState(false);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n  const [dayModalVisible, setDayModalVisible] = useState(false);\r\n  const [selectedDay, setSelectedDay] = useState<Date | null>(null);\r\n\r\n  const [selectedTask, setSelectedTask] = useState<any>(null);\r\n  const [selectedEvent, setSelectedEvent] = useState<IMyEvent | null>(null);\r\n\r\n  const [notifications, setNotifications] = useState<any[]>([]);\r\n  const [taskColor, setTaskColor] = useState(\"#47AD4D\");\r\n  const [showColorModal, setShowColorModal] = useState(false);\r\n\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (route.params?.email) {\r\n      setFormData((prev) => ({ ...prev, email: route.params.email }));\r\n    }\r\n    const email = route.params?.email;\r\n    if (email) {\r\n      fetchTasks();\r\n      fetchEvents();\r\n    }\r\n  }, [route.params?.email]);\r\n\r\n  const email = route.params?.email;\r\n  const userTheme = route.params?.theme || \"light\";\r\n  const backgroundPath = route.params?.backgroundUrl || '';\r\n  const backgroundUrl = `${config.baseUrl}/${backgroundPath}`;\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    fetchEvents();\r\n    fetchTasks();\r\n    setTimeout(() => setRefreshing(false), 1000);\r\n  };\r\n\r\n  const handleQRCodeScan = async () => {\r\n    setMenuModalVisible(false); navigation.navigate(\"QRCodeScannerScreen\", { email });\r\n  };\r\n\r\n  // Buscar eventos no backend\r\n  const fetchEvents = useCallback(() => {\r\n    if (!email) return;\r\n    axios.post(url_searchEvents, { email })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          const newEvents: IMyEvent[] = response.data.map((event: any) => {\r\n            const [startDateStr, startTimeStr] = event.start_datetime.split(\" \");\r\n            const [endDateStr, endTimeStr] = event.end_datetime.split(\" \");\r\n            const [year, month, day] = startDateStr.split(\"-\");\r\n            const [startHour, startMinute] = startTimeStr.split(\":\");\r\n            const [endHour, endMinute] = endTimeStr.split(\":\");\r\n            const startDate = new Date(\r\n              parseInt(year),\r\n              parseInt(month) - 1,\r\n              parseInt(day),\r\n              parseInt(startHour),\r\n              parseInt(startMinute)\r\n            );\r\n            const endDate = new Date(\r\n              parseInt(year),\r\n              parseInt(month) - 1,\r\n              parseInt(day),\r\n              parseInt(endHour),\r\n              parseInt(endMinute)\r\n            );\r\n            return {\r\n              title: event.title || \"Evento\",\r\n              start: startDate,\r\n              end: endDate,\r\n              color: event.cores && event.cores.trim() ? event.cores : \"#47AD4D\",\r\n              id: event.id,\r\n              descricao: event.descricao || \"\",\r\n            };\r\n          });\r\n          setBigCalendarEvents(newEvents);\r\n        } else {\r\n          console.error(\"Formato inesperado dos eventos:\", response.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.error(\"Erro ao procurar eventos na base de dados.\");\r\n      });\r\n  }, [email]);\r\n\r\n  // Buscar tarefas\r\n  const fetchTasks = () => {\r\n    if (!email) return;\r\n    axios.post(url_fetchTasksData, { email }, { headers: { 'Content-Type': 'application/json' } })\r\n      .then((response) => {\r\n        if (response.data.success && Array.isArray(response.data.tasks)) {\r\n          setTasks(response.data.tasks);\r\n        } else {\r\n          setTasks([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao procurar as tarefas:\", error);\r\n      });\r\n  };\r\n\r\n  // Ao clicar na célula do calendário (modo month)\r\n  const handleCalendarCellPress = (date: Date) => {\r\n    setSelectedDay(date);\r\n    setDayModalVisible(true);\r\n  };\r\n\r\n  // Ao clicar no retângulo (evento/tarefa)\r\n  const handleCalendarEventPress = (event: any) => {\r\n    if (event.isTask) {\r\n      setSelectedTask(event.taskDetails);\r\n    } else {\r\n      setSelectedEvent(event);\r\n    }\r\n  };\r\n\r\n  // Mapear tarefas para eventos (ajustando a hora de início)\r\n  const taskEvents = tasks.map((task) => {\r\n    const taskTime = new Date(task.data_da_tarefa);\r\n    const startDate = new Date(taskTime.getTime() - 30 * 60000);\r\n    const endDate = taskTime;\r\n    return {\r\n      title: task.titulo || \"Tarefa\",\r\n      start: startDate,\r\n      end: endDate,\r\n      color: task.cor && task.cor.trim() ? task.cor : \"#47AD4D\",\r\n      isTask: true,\r\n      taskDetails: task,\r\n    };\r\n  });\r\n\r\n  // Combinar eventos e tarefas\r\n  const combinedEvents = [...bigCalendarEvents, ...taskEvents];\r\n\r\n  // Filtrar eventos do dia selecionado (para modal day)\r\n  const dayEvents = combinedEvents.filter((ev) => {\r\n    if (!selectedDay) return false;\r\n    return ev.start.toDateString() === selectedDay.toDateString();\r\n  });\r\n\r\n  // Função para converter data para o formato \"07 de Abril de 2025 às 19:12\"\r\n  const formatDate = (date: Date) => {\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const monthNames = [\r\n      \"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\",\r\n      \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    const hour = date.getHours().toString().padStart(2, \"0\");\r\n    const minute = date.getMinutes().toString().padStart(2, \"0\");\r\n    return `${day} de ${month} de ${year} às ${hour}:${minute}`;\r\n  };\r\n\r\n  // Atualizar configurações do evento\r\n  const updateEventConfig = () => {\r\n    if (!selectedEvent) return;\r\n    Alert.alert(\r\n      \"Confirmação\",\r\n      \"Ao guardar estas configurações vão mudar apenas para si!\",\r\n      [\r\n        { text: \"Cancelar\", style: \"cancel\" },\r\n        {\r\n          text: \"Guardar\",\r\n          onPress: () => {\r\n            const notification_times = notifications.map((notif) => {\r\n              let total = notif.timeValue;\r\n              if (notif.unit === \"hours\") total = notif.timeValue * 60;\r\n              if (notif.unit === \"days\") total = notif.timeValue * 1440;\r\n              if (notif.unit === \"weeks\") total = notif.timeValue * 10080;\r\n              return total;\r\n            });\r\n            const payload = {\r\n              event_id: selectedEvent.id,\r\n              email,\r\n              cor: taskColor,\r\n              notificacao_tipo: \"notificacao\",\r\n              notification_times,\r\n            };\r\n\r\n            axios.post(url_saveUserEvents, payload)\r\n              .then((response) => {\r\n                if (response.data.success) {\r\n                  Alert.alert(\"Sucesso\", response.data.message);\r\n                  fetchEvents();\r\n                  setSelectedEvent(null);\r\n                } else {\r\n                  Alert.alert(\"Erro\", response.data.message);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Erro ao atualizar configuração do evento:\", error);\r\n                Alert.alert(\"Erro\", \"Erro ao atualizar configuração do evento.\");\r\n              });\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  // Atualizar configurações da tarefa\r\n  const updateTaskConfig = () => {\r\n    if (!selectedTask) return;\r\n    Alert.alert(\r\n      \"Confirmação\",\r\n      \"Ao guardar estas configurações vão mudar apenas para si!\",\r\n      [\r\n        { text: \"Cancelar\", style: \"cancel\" },\r\n        {\r\n          text: \"Guardar\",\r\n          onPress: () => {\r\n            const notification_times = notifications.map((notif) => {\r\n              let total = notif.timeValue;\r\n              if (notif.unit === \"hours\") total = notif.timeValue * 60;\r\n              if (notif.unit === \"days\") total = notif.timeValue * 1440;\r\n              if (notif.unit === \"weeks\") total = notif.timeValue * 10080;\r\n              return total;\r\n            });\r\n            const payload = {\r\n              tarefa_id: selectedTask.tarefa_id,\r\n              email,\r\n              cor: taskColor,\r\n              notificacao_tipo: \"notificacao\",\r\n              notification_times,\r\n            };\r\n\r\n            axios.post(url_saveUserTasks, payload)\r\n              .then((response) => {\r\n                if (response.data.success) {\r\n                  Alert.alert(\"Sucesso\", response.data.message);\r\n                  fetchTasks();\r\n                  setSelectedTask(null);\r\n                } else {\r\n                  Alert.alert(\"Erro\", response.data.message || \"Ocorreu um erro. Tente novamente mais tarde.\");\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Erro ao atualizar configuração da tarefa:\", error);\r\n                Alert.alert(\"Erro\", \"Erro ao atualizar configuração da tarefa.\");\r\n              });\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  // Modal com calendário em modo \"day\"\r\n  const renderDayModal = () => (\r\n    <Modal\r\n      visible={dayModalVisible}\r\n      animationType=\"slide\"\r\n      transparent={false}\r\n      onRequestClose={() => setDayModalVisible(false)}\r\n    >\r\n      <SafeAreaView\r\n        style={[\r\n          styles.dayModalContainer,\r\n          { backgroundColor: backgroundColor(userTheme) }\r\n        ]}\r\n      >\r\n        <View style={styles.dayModalHeader}>\r\n          <Text style={[styles.dayModalTitle, { color: color(userTheme) }]}>\r\n            {selectedDay ? selectedDay.toDateString() : \"\"}\r\n          </Text>\r\n          <TouchableOpacity onPress={() => setDayModalVisible(false)} style={{ padding: 8 }}>\r\n            <Image\r\n              source={require('../../assets/icons/cross.png')}\r\n              style={[\r\n                Platform.OS === \"web\"\r\n                  ? { width: 20, height: 20 }\r\n                  : { width: 15, height: 15, marginTop: 3 },\r\n                { tintColor: color(userTheme) }\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n          <BigCalendar\r\n            date={selectedDay!}\r\n            events={dayEvents}\r\n            height={600}\r\n            mode=\"day\"\r\n            swipeEnabled={true}\r\n            showTime={true}\r\n            eventCellStyle={(event) => (event.color ? { backgroundColor: event.color } : {})}\r\n            onPressEvent={handleCalendarEventPress}\r\n            calendarContainerStyle={{\r\n              backgroundColor: backgroundColor(userTheme),\r\n            }}\r\n          />\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </Modal>\r\n  );  \r\n\r\n  // Modal de configurações (detalhes de evento/tarefa)\r\n  // Agora o header inclui o ícone de utilizador que abre o ModalConfig\r\n  const renderConfigModal = () => {\r\n    if (!(selectedTask || selectedEvent)) return null;\r\n\r\n    return (\r\n      <Modal visible={true} animationType=\"slide\">\r\n        {/* Header com ícone de voltar à esquerda e ícone de utilizador à direita */}\r\n        <View style={[styles.configHeader, { flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }]}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            // Fecha o modal de configurauração limpando os estados\r\n            setSelectedEvent(null);\r\n            setSelectedTask(null);\r\n            setShowColorModal(false);\r\n            // Se houver outros modais abertos, pode-se fechá-los aqui também\r\n          }}\r\n        >\r\n            <Image\r\n              source={require(\"../../assets/icons/angle-left.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                tintColor: iconColor(userTheme),\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n            <Image\r\n              source={require(\"../../assets/icons/user.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                tintColor: iconColor(userTheme),\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n    \r\n        {/* Conteúdo do modal com espaçamento para não ficar sob o header */}\r\n        <ScrollView\r\n          contentContainerStyle={[\r\n            styles.configModalContainer,\r\n            {\r\n              backgroundColor: backgroundColor(userTheme),\r\n              paddingTop: 80,\r\n              paddingHorizontal: 20,\r\n              paddingBottom: 20,\r\n            },\r\n          ]}\r\n        >\r\n          {/* Texto de aviso */}\r\n          <Text\r\n            style={[\r\n              styles.warningText,\r\n              {\r\n                textAlign: \"center\",\r\n                fontSize: 16,\r\n                fontWeight: \"bold\",\r\n                marginBottom: 20,\r\n                color: color(userTheme),\r\n              },\r\n            ]}\r\n          >\r\n            As configurações abaixo são apenas para si e não afetam o {selectedTask ? \"tarefa\" : \"evento\"} original.\r\n          </Text>\r\n    \r\n          {selectedTask ? (\r\n            <>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Título:</Text>\r\n                <Text style={styles.fieldValue}>\r\n                  {selectedTask.titulo || `Tarefa ${selectedTask.tarefa_id}`}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Criado por:</Text>\r\n                <Text style={styles.fieldValue}>{selectedTask.professor_email}</Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Data da Tarefa:</Text>\r\n                <Text style={styles.fieldValue}>{selectedTask.data_da_tarefa}</Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Descrição:</Text>\r\n                <Text style={styles.fieldValue}>\r\n                  {selectedTask.descricao || \"Não há descrição.\"}\r\n                </Text>\r\n              </View>\r\n    \r\n              {/* Box para campos editáveis */}\r\n              <View style={styles.editableBox}>\r\n                <View style={styles.fieldContainer}>\r\n                  <Text style={styles.fieldLabel}>Cor:</Text>\r\n                  <TouchableOpacity\r\n                    activeOpacity={0.7}\r\n                    style={[styles.selectedColorDisplay, { paddingVertical: 10 }]}\r\n                    onPress={() => setShowColorModal(true)}\r\n                  >\r\n                    <View style={[styles.colorCircle, { backgroundColor: taskColor, marginRight: 10 }]} />\r\n                    <Text style={{ fontSize: 16, color: color(userTheme) }}>\r\n                      Alterar Cor\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n    \r\n                <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Notificações:2</Text>\r\n                {notifications.map((notif, index) => (\r\n                  <View\r\n                    style={[ styles.notificationRow]}\r\n                    key={index}\r\n                  >\r\n                    {/* Tipo de alerta */}\r\n                    <View style={{ flex: 1, minWidth: 100, marginRight: 8 }}>\r\n                      <RNPickerSelect\r\n                        onValueChange={(value) => {\r\n                          if (value) {\r\n                            setNotifications((prev) => {\r\n                              const copy = [...prev];\r\n                              copy[index].alertType = value;\r\n                              return copy;\r\n                            });\r\n                          }\r\n                        }}\r\n                        items={[\r\n                          { label: \"Email\", value: \"email\" },\r\n                          { label: \"Notificação\", value: \"notification\" },\r\n                        ]}\r\n                        placeholder={{}}\r\n                        value={notif.alertType}\r\n                        useNativeAndroidPickerStyle={false}\r\n                        style={pickerSelectStyles}\r\n                      />\r\n                    </View>\r\n                      <TextInput\r\n                        style={{\r\n                          width: Platform.OS === \"web\" ? 60 :  \"20%\",\r\n                          height: \"auto\",\r\n                          textAlign: \"center\",\r\n                          paddingVertical: 8,\r\n                          fontSize: 16,\r\n                          color: color(userTheme),\r\n                          backgroundColor: backgroundColor(userTheme),\r\n                          borderRightWidth: 1,\r\n                          borderColor: \"#ccc\",\r\n                        }}\r\n                        keyboardType=\"numeric\"\r\n                        value={notif.timeValue !== null ? String(notif.timeValue) : \"\"}\r\n                        onChangeText={(text) => {\r\n                          if (text === \"\") {\r\n                            setNotifications((prev) => {\r\n                              const copy = [...prev];\r\n                              copy[index].timeValue = null;\r\n                              return copy;\r\n                            });\r\n                          } else {\r\n                            const num = parseInt(text, 10);\r\n                            if (!isNaN(num) && num >= 1 && num <= 60) {\r\n                              setNotifications((prev) => {\r\n                                const copy = [...prev];\r\n                                copy[index].timeValue = num;\r\n                                return copy;\r\n                              });\r\n                            }\r\n                          }\r\n                        }}\r\n                        onBlur={() => {\r\n                          setNotifications((prev) => {\r\n                            const copy = [...prev];\r\n                            if (copy[index].timeValue === null) {\r\n                              copy[index].timeValue = 1;\r\n                            }\r\n                            return copy;\r\n                          });\r\n                        }}\r\n                      />\r\n                      <View style={{ flexDirection: \"column\" }}>\r\n                        <TouchableOpacity onPress={() => incrementTime(index)} style={styles.stepButton}>\r\n                          <Text style={styles.stepButtonText}>▲</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={() => decrementTime(index)} style={styles.stepButton}>\r\n                          <Text style={styles.stepButtonText}>▼</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    {/* Unidade de tempo */}\r\n                    <View style={{ flex: 1, minWidth: 100, marginRight: 8 }}>\r\n                      <RNPickerSelect\r\n                        onValueChange={(value) => {\r\n                          if (value) {\r\n                            setNotifications((prev) => {\r\n                              const copy = [...prev];\r\n                              copy[index].unit = value;\r\n                              return copy;\r\n                            });\r\n                          }\r\n                        }}\r\n                        items={[\r\n                          { label: getUnitLabel(\"minutes\"), value: \"minutes\" },\r\n                          { label: getUnitLabel(\"hours\"), value: \"hours\" },\r\n                          { label: getUnitLabel(\"days\"), value: \"days\" },\r\n                          { label: getUnitLabel(\"weeks\"), value: \"weeks\" },\r\n                        ]}\r\n                        placeholder={{}}\r\n                        value={notif.unit}\r\n                        useNativeAndroidPickerStyle={false}\r\n                        style={pickerSelectStyles}\r\n                      />\r\n                    </View>\r\n                    {Platform.OS === \"web\" ? (\r\n                      <TouchableOpacity\r\n                        onPress={() =>\r\n                          setNotifications((prev) => prev.filter((_, i) => i !== index))\r\n                        }\r\n                        style={{\r\n                          padding: 8,\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../assets/icons/cross.png\")}\r\n                          style={{ width: 20, height: 20 }}\r\n                        />\r\n                      </TouchableOpacity>\r\n                    ) : (\r\n                      <IconButton\r\n                        icon=\"close\"\r\n                        size={20}\r\n                        onPress={() =>\r\n                          setNotifications((prev) => prev.filter((_, i) => i !== index))\r\n                        }\r\n                        iconColor={iconColor(userTheme)}\r\n                        style={{ marginLeft: -28 }}\r\n                      />\r\n                    )}\r\n                  </View>\r\n                ))}\r\n                <Button\r\n                  mode=\"outlined\"\r\n                  onPress={handleAddNotificationRow}\r\n                  style={[styles.addTimeButton, { borderColor: \"#47AD4D\" }]}\r\n                  labelStyle={{ color: \"#47AD4D\", fontWeight: \"bold\" }}\r\n                >\r\n                  + Adicionar notificação\r\n                </Button>\r\n              </View>\r\n              </View>\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={updateTaskConfig}\r\n                style={[styles.saveButton, { backgroundColor: \"#47AD4D\", marginTop: 20 }]}\r\n                labelStyle={{ color: \"#FFF\", fontWeight: \"bold\" }}\r\n              >\r\n                Salvar Configurações\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Título:</Text>\r\n                <Text style={styles.fieldValue}>{selectedEvent!.title}</Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Criado por:</Text>\r\n                <Text style={styles.fieldValue}>-</Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Data de Início:</Text>\r\n                <Text style={styles.fieldValue}>{formatDate(selectedEvent!.start)}</Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Data de Fim:</Text>\r\n                <Text style={styles.fieldValue}>{formatDate(selectedEvent!.end)}</Text>\r\n              </View>\r\n              <View style={styles.fieldContainer}>\r\n                <Text style={styles.fieldLabel}>Descrição:</Text>\r\n                <Text style={styles.fieldValue}>\r\n                  {selectedEvent!.descricao || \"Não há descrição.\"}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.editableBox}>\r\n                <View style={styles.fieldContainer}>\r\n                  <Text style={styles.fieldLabel}>Cor:</Text>\r\n                  <TouchableOpacity\r\n                    activeOpacity={0.7}\r\n                    style={[styles.selectedColorDisplay, { paddingVertical: 10 }]}\r\n                    onPress={() => setShowColorModal(true)}\r\n                  >\r\n                    <View style={[styles.colorCircle, { backgroundColor: taskColor, marginRight: 10 }]} />\r\n                    <Text style={{ fontSize: 16, color: color(userTheme) }}>\r\n                      Alterar Cor\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.fieldContainer}>\r\n  <Text style={styles.fieldLabel}>Notificações:1</Text>\r\n  {notifications.map((notif, index) => (\r\n    <View\r\n      style={[\r\n        styles.notificationRow,\r\n        // Em mobile permitimos quebra de linha para não sair do ecrã\r\n        Platform.OS !== \"web\" && { flexWrap: \"wrap\", alignItems: \"flex-start\" },\r\n      ]}\r\n      key={index}\r\n    >\r\n      {/* Tipo de alerta */}\r\n      <View style={{ flex: 1, minWidth: 100, marginRight: 8 }}>\r\n        <RNPickerSelect\r\n          onValueChange={(value) => {\r\n            if (value) {\r\n              setNotifications((prev) => {\r\n                const copy = [...prev];\r\n                copy[index].alertType = value;\r\n                return copy;\r\n              });\r\n            }\r\n          }}\r\n          items={[\r\n            { label: \"Email\", value: \"email\" },\r\n            { label: \"Notificação\", value: \"notification\" },\r\n          ]}\r\n          placeholder={{}}\r\n          value={notif.alertType}\r\n          useNativeAndroidPickerStyle={false}\r\n          style={pickerSelectStyles}\r\n        />\r\n      </View>\r\n\r\n      {/* Controlo de valor e botões ± */}\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          borderWidth: 1,\r\n          borderColor: \"#ccc\",\r\n          borderRadius: 4,\r\n          overflow: \"hidden\",\r\n          marginVertical: 8,\r\n        }}\r\n      >\r\n        <TextInput\r\n          style={{\r\n            width: Platform.OS === \"web\" ? 60 :  \"40%\",\r\n            textAlign: \"center\",\r\n            paddingVertical: 8,\r\n            fontSize: 16,\r\n            color: color(userTheme),\r\n            backgroundColor: color(userTheme),\r\n            borderRightWidth: 1,\r\n            borderColor: \"#ccc\",\r\n          }}\r\n          keyboardType=\"numeric\"\r\n          value={notif.timeValue !== null ? String(notif.timeValue) : \"\"}\r\n          onChangeText={(text) => {\r\n            if (text === \"\") {\r\n              setNotifications((prev) => {\r\n                const copy = [...prev];\r\n                copy[index].timeValue = null;\r\n                return copy;\r\n              });\r\n            } else {\r\n              const num = parseInt(text, 10);\r\n              if (!isNaN(num) && num >= 1 && num <= 60) {\r\n                setNotifications((prev) => {\r\n                  const copy = [...prev];\r\n                  copy[index].timeValue = num;\r\n                  return copy;\r\n                });\r\n              }\r\n            }\r\n          }}\r\n          onBlur={() => {\r\n            setNotifications((prev) => {\r\n              const copy = [...prev];\r\n              if (copy[index].timeValue === null) {\r\n                copy[index].timeValue = 1;\r\n              }\r\n              return copy;\r\n            });\r\n          }}\r\n        />\r\n        <View style={{ flexDirection: \"column\" }}>\r\n          <TouchableOpacity onPress={() => incrementTime(index)} style={styles.stepButton}>\r\n            <Text style={styles.stepButtonText}>▲</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => decrementTime(index)} style={styles.stepButton}>\r\n            <Text style={styles.stepButtonText}>▼</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Unidade de tempo */}\r\n      <View style={{ flex: 1, minWidth: 100, marginRight: 8 }}>\r\n        <RNPickerSelect\r\n          onValueChange={(value) => {\r\n            if (value) {\r\n              setNotifications((prev) => {\r\n                const copy = [...prev];\r\n                copy[index].unit = value;\r\n                return copy;\r\n              });\r\n            }\r\n          }}\r\n          items={[\r\n            { label: getUnitLabel(\"minutes\"), value: \"minutes\" },\r\n            { label: getUnitLabel(\"hours\"), value: \"hours\" },\r\n            { label: getUnitLabel(\"days\"), value: \"days\" },\r\n            { label: getUnitLabel(\"weeks\"), value: \"weeks\" },\r\n          ]}\r\n          placeholder={{}}\r\n          value={notif.unit}\r\n          useNativeAndroidPickerStyle={false}\r\n          style={pickerSelectStyles}\r\n        />\r\n      </View>\r\n\r\n      {/* Botão Remover */}\r\n      {Platform.OS === \"web\" ? (\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            setNotifications((prev) => prev.filter((_, i) => i !== index))\r\n          }\r\n          style={{ padding: 8 }}\r\n        >\r\n          <Image\r\n            source={require(\"../../assets/icons/cross.png\")}\r\n            style={{ width: 20, height: 20 }}\r\n          />\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <IconButton\r\n          icon=\"close\"\r\n          size={20}\r\n          onPress={() =>\r\n            setNotifications((prev) => prev.filter((_, i) => i !== index))\r\n          }\r\n          iconColor={iconColor(userTheme)}\r\n        />\r\n      )}\r\n    </View>\r\n  ))}\r\n  <Button\r\n    mode=\"outlined\"\r\n    onPress={handleAddNotificationRow}\r\n    style={[styles.addTimeButton, { borderColor: \"#47AD4D\" }]}\r\n    labelStyle={{ color: \"#47AD4D\", fontWeight: \"bold\" }}\r\n  >\r\n    + Adicionar notificação\r\n  </Button>\r\n</View>\r\n\r\n              </View>\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={updateEventConfig}\r\n                style={[styles.saveButton, { backgroundColor: \"#47AD4D\", marginTop: 20 }]}\r\n                labelStyle={{ color: \"#FFF\", fontWeight: \"bold\" }}\r\n              >\r\n                Salvar Configurações\r\n              </Button>\r\n            </>\r\n          )}\r\n        </ScrollView>\r\n      </Modal>\r\n    );    \r\n  };\r\n\r\n  // Funções auxiliares para incremento/decremento de tempo e labels\r\n  const incrementTime = (index: number) => {\r\n    setNotifications((prev) => {\r\n      const copy = [...prev];\r\n      if (copy[index].timeValue < 60) copy[index].timeValue += 1;\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const decrementTime = (index: number) => {\r\n    setNotifications((prev) => {\r\n      const copy = [...prev];\r\n      if (copy[index].timeValue > 1) copy[index].timeValue -= 1;\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const handleAddNotificationRow = () => {\r\n    setNotifications((prev) => [\r\n      ...prev,\r\n      { alertType: \"notification\", timeValue: 15, unit: \"minutes\" },\r\n    ]);\r\n  };\r\n\r\n  const getUnitLabel = (unit: string) => {\r\n    if (unit === \"minutes\") return `minutos`;\r\n    if (unit === \"hours\") return `horas`;\r\n    if (unit === \"days\") return `dias`;\r\n    if (unit === \"weeks\") return `semanas`;\r\n    return \"\";\r\n  };\r\n\r\n  // Helper para definir a cor do texto conforme o tema\r\n  const dynamicTextColor = () => textColor(userTheme);\r\n\r\n  /* if (settingsLoading) {\r\n    return (\r\n      <ImageBackground\r\n        source={ backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\") }\r\n        style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <View style={styles.loaderContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#6200ea\" />\r\n          <Text style={styles.loadingText}>\r\n            Estamos a processar o seu pedido de registo. Pedimos que aguarde...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }*/\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require(\"../../assets/images/bg1.jpg\")\r\n      }\r\n      style={styles.background}\r\n    >\r\n      {userTheme === \"dark\" && <View style={styles.overlay} />}\r\n      <StatusBar\r\n        backgroundColor=\"transparent\"\r\n        translucent\r\n        barStyle={userTheme === \"dark\" ? \"light-content\" : \"dark-content\"}\r\n      />\r\n      <SafeAreaView style={styles.safeContainer}>\r\n        <View style={[styles.header, { backgroundColor: backgroundColor(userTheme) }]}>\r\n          <TouchableOpacity onPress={() => setMenuModalVisible(true)} style={styles.menuIcon}>\r\n            <Image\r\n              source={require('../../assets/icons/menu-burger.png')}\r\n              style={[\r\n                Platform.OS === \"web\"\r\n                  ? { width: 35, height: 35, marginLeft: 3, marginTop: -15 }\r\n                  : { width: 23, height: 25, marginLeft: 3, marginTop: 3 },\r\n                { tintColor: iconColor(userTheme) }\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n          <View style={styles.headerButtons}>\r\n            <View style={{ position: \"relative\" }}>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"PersonalizarTarefa\", { email: formData.email, theme: userTheme, backgroundUrl: backgroundUrl, })}\r\n                style={styles.todoIcon}\r\n              >\r\n                <Image\r\n                  source={require('../../assets/icons/list-check.png')}\r\n                  style={[\r\n                    Platform.OS === \"web\"\r\n                      ? { width: 30, height: 30, marginRight: 20, marginTop: -3 }\r\n                      : { width: 25, height: 25, marginRight: 15, marginTop: 3 },\r\n                    { tintColor: iconColor(userTheme) }\r\n                  ]}\r\n                />\r\n              </TouchableOpacity>\r\n              {(tasks.length + bigCalendarEvents.length) > 0 && Platform.OS !== \"web\" && (\r\n                <View style={styles.badge}>\r\n                  <Text style={styles.badgeText}>\r\n                    {tasks.length + bigCalendarEvents.length}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n            <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={styles.accountIcon}>\r\n              <Image\r\n                source={require('../../assets/icons/user.png')}\r\n                style={[\r\n                  Platform.OS === \"web\"\r\n                    ? { width: 30, height: 30, marginTop: -5 }\r\n                    : { width: 25, height: 25, marginTop: 3 },\r\n                  { tintColor: iconColor(userTheme) }\r\n                ]}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Conteúdo principal – calendário em modo \"month\" */}\r\n        <ScrollView style={styles.container} refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n          <View style={styles.calendarBox}>\r\n            <BigCalendar\r\n              events={combinedEvents}\r\n              height={height * 0.84}\r\n              mode=\"month\"\r\n              swipeEnabled={true}\r\n              weekStartsOn={1}\r\n              showTime={false}\r\n              onPressCell={handleCalendarCellPress}\r\n              onPressEvent={handleCalendarEventPress}\r\n              calendarContainerStyle={{ backgroundColor: backgroundColor(userTheme), height: 350 }}\r\n              renderEvent={(event) => (\r\n                <View style={[styles.eventRectangle, { backgroundColor: event.color }]}>\r\n                  <Text style={styles.eventRectangleText} numberOfLines={1}>\r\n                    {event.title}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n            />\r\n          </View>\r\n        </ScrollView>\r\n        {renderDayModal()}\r\n        {renderConfigModal()}\r\n\r\n        <Modal\r\n          visible={menuModalVisible}\r\n          animationType=\"slide\"\r\n          transparent\r\n          onRequestClose={() => setMenuModalVisible(false)}\r\n        >\r\n          <TouchableOpacity style={styles.menuOverlay} activeOpacity={1} onPressOut={() => setMenuModalVisible(false)}>\r\n            <View style={[styles.menuContent, { backgroundColor: backgroundColor(userTheme) }]}>\r\n              <Text style={[styles.menuTitle, { color: dynamicTextColor() }]}>Menu</Text>\r\n              <TouchableOpacity onPress={() => {setMenuModalVisible(false); navigation.navigate(\"disciplinasAluno\", { email: formData.email })}} style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n                {Platform.OS !== \"web\" && (\r\n                  <IconButton icon=\"book-open\" size={24} iconColor={dynamicTextColor()} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor() }]}>Disciplinas</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => { setMenuModalVisible(false); navigation.navigate(\"entradasEsaidas\", { email: formData.email })}} style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n                {Platform.OS !== \"web\" && (\r\n                  <IconButton icon=\"calendar\" size={24} iconColor={dynamicTextColor()} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor() }]}>Entradas e saídas</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => { setMenuModalVisible(false); navigation.navigate(\"NotasScreen\", { email: formData.email })}} style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n                {Platform.OS !== \"web\" && (\r\n                  <IconButton icon=\"clipboard-list\" size={24} iconColor={dynamicTextColor()} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor() }]}>Notas</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => { setMenuModalVisible(false); navigation.navigate(\"HorariosScreen\", { email: formData.email }); }} style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n                {Platform.OS !== \"web\" && (\r\n                  <IconButton icon=\"clock\" size={24} iconColor={dynamicTextColor()} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor() }]}>Horários</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => {\r\n                  setMenuModalVisible(false);\r\n                  navigation.navigate(\"AlmocosScreen\", { email: formData.email });\r\n                }} style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n                {Platform.OS !== \"web\" && (\r\n                  <IconButton icon=\"silverware-fork-knife\" size={24} iconColor={dynamicTextColor()} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor() }]}>Almoços</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={handleQRCodeScan} style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\", marginTop: \"auto\" }]}>\r\n                {Platform.OS !== \"web\" && (\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <IconButton icon=\"qrcode\" size={24} iconColor={dynamicTextColor()} />\r\n                    <Text style={[styles.menuText, { color: dynamicTextColor() }]}>Scan QRCode</Text>\r\n                  </View>\r\n                )}\r\n              </TouchableOpacity>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </Modal>\r\n\r\n        <Modal visible={showColorModal} animationType=\"slide\" transparent>\r\n          <View style={styles.colorModalOverlay}>\r\n            <View style={styles.colorModalContainer}>\r\n              <Text style={[styles.modalTitle, { color: dynamicTextColor() }]}>Selecionar Cor</Text>\r\n              {!defaultColors.find((opt) => opt.value === taskColor) && (\r\n                <TouchableOpacity style={styles.colorOptionRow} onPress={() => { setTaskColor(taskColor); setShowColorModal(false); }}>\r\n                  <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                  <Text style={[styles.colorName, { color: dynamicTextColor() }]}>Cor Atual</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              {defaultColors.map((opt) => (\r\n                <TouchableOpacity key={opt.value} style={styles.colorOptionRow} onPress={() => { setTaskColor(opt.value); setShowColorModal(false); }}>\r\n                  <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                  <Text style={[styles.colorName, { color: dynamicTextColor() }]}>{opt.name}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n              <Button mode=\"contained\" onPress={() => setShowColorModal(false)} style={styles.modalCloseButton}>\r\n                Fechar\r\n              </Button>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={formData.email}\r\n        />\r\n      </SafeAreaView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst pickerSelectStyles = {\r\n  inputIOS: {\r\n    fontSize: 16,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 12,\r\n    color: \"black\",\r\n    paddingRight: 30,\r\n  },\r\n  inputAndroid: {\r\n    fontSize: 16,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 8,\r\n    color: \"black\",\r\n    paddingRight: 30,\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  configModalContainer: {\r\n    padding: 20,\r\n    minHeight: \"100%\",\r\n  },\r\n  configHeader: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    paddingTop: StatusBar.currentHeight || 20,\r\n    paddingHorizontal: 15,\r\n    paddingBottom: 10,\r\n    backgroundColor: \"white\",\r\n    elevation: 4,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    zIndex: 10,\r\n  },\r\n  warningText: {\r\n    marginVertical: 10,\r\n  },\r\n  fieldContainer: {\r\n    backgroundColor: \"#F9F9F9\",\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginVertical: 6,\r\n    elevation: 2,\r\n  },\r\n  fieldLabel: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 4,\r\n    color: \"#333\",\r\n  },\r\n  fieldValue: {\r\n    fontSize: 16,\r\n    color: \"#555\",\r\n  },\r\n  editableBox: {\r\n    backgroundColor: \"#EFEFEF\",\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginVertical: 6,\r\n    elevation: 1,\r\n  },\r\n  selectedColorDisplay: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  colorCircle: {\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n  },\r\n  notificationRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n  },\r\n  spinnerContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginHorizontal: 5,\r\n  },\r\n  spinnerInput: {\r\n    width: 40,\r\n    backgroundColor: \"#F0F0F0\",\r\n    textAlign: \"center\",\r\n    marginRight: 5,\r\n  },\r\n  spinnerButtons: {\r\n    flexDirection: \"column\",\r\n  },\r\n  stepButton: {\r\n    paddingHorizontal: 5,\r\n  },\r\n  stepButtonText: {\r\n    fontSize: 12,\r\n  },\r\n  addTimeButton: {\r\n    marginVertical: 10,\r\n  },\r\n  saveButton: {\r\n    marginVertical: 10,\r\n    borderRadius: 8,\r\n  },\r\n  colorModalOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  colorModalContainer: { width: \"80%\", backgroundColor: \"#FFF\", padding: 20, borderRadius: 10 },\r\n  modalTitle: { fontSize: 20, fontWeight: \"bold\", marginBottom: 15, textAlign: \"center\" },\r\n  colorOptionRow: { flexDirection: \"row\", alignItems: \"center\", paddingVertical: 8, borderBottomWidth: 1, borderBottomColor: \"#ccc\" },\r\n  colorName: { fontSize: 16, marginLeft: 10 },\r\n  modalCloseButton: { marginTop: 10, backgroundColor: \"#47AD4D\" },\r\n  background: {\r\n    flex: 1,\r\n  },\r\n  overlay: { ...StyleSheet.absoluteFillObject, backgroundColor: \"rgba(0,0,0,0.5)\" },\r\n  safeContainer: { flex: 1 },\r\n  loaderContainer: {\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    backgroundColor: \"white\",\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: \"center\",\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: \"#000\",\r\n    textAlign: \"center\",\r\n  },\r\n  header: { height: 70, flexDirection: \"row\", alignItems: \"center\", paddingHorizontal: 15, elevation: 4 },\r\n  menuIcon: { marginRight: 10, marginTop: 35 },\r\n  todoIcon: { marginRight: 0, marginTop: 35 },\r\n  accountIcon: { marginRight: 0, marginTop: 35 },\r\n  headerButtons: { flexDirection: \"row\", marginLeft: \"auto\" },\r\n  container: { flex: 1, marginTop: 6 },\r\n  calendarBox: {\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: 12,\r\n    padding: 10,\r\n    margin: 10,\r\n    elevation: 3,\r\n  },\r\n  badge: {\r\n    position: \"absolute\",\r\n    marginTop: 60,\r\n    top: 0,\r\n    right: 0,\r\n    width: 20,\r\n    height: 20,\r\n    backgroundColor: \"red\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  badgeText: { color: \"white\", fontSize: 12, fontWeight: \"bold\" },\r\n  eventRectangle: {\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    borderRadius: 3,\r\n    marginVertical: 1,\r\n    opacity: 0.9,\r\n  },\r\n  eventRectangleText: { fontSize: 10, color: \"#FFF\", fontWeight: \"bold\" },\r\n  dayModalContainer: { flex: 1 },\r\n  dayModalHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  dayModalTitle: { fontSize: 20, fontWeight: \"bold\" },\r\n  fullScreenModal: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContent: {\r\n    width: \"95%\",\r\n    height: \"90%\",\r\n    borderRadius: 15,\r\n    padding: 20,\r\n  },\r\n  calendarContainer: {\r\n    marginTop: 20,\r\n    height: 250,\r\n  },\r\n  bigCalendarContainer: {\r\n    height: 450,\r\n  },\r\n  selectedDatesScroll: {\r\n    marginTop: 20,\r\n  },\r\n  selectedDatesContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  selectedDateItem: {\r\n    backgroundColor: \"#47AD4D\",\r\n    padding: 8,\r\n    margin: 5,\r\n    borderRadius: 5,\r\n  },\r\n  selectedDateText: {\r\n    color: \"#FFF\",\r\n    fontSize: 16,\r\n  },\r\n  configHeaderTitle: { fontSize: 20, fontWeight: \"bold\" },\r\n  label: { fontSize: 16, marginTop: 10 },\r\n  input: { marginBottom: 10, backgroundColor: \"#F0F0F0\" },\r\n  menuOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  menuContent: {\r\n    width: \"65%\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    borderTopRightRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  menuTitle: { fontSize: 22, fontWeight: \"bold\", marginBottom: 30 },\r\n  menuLink: {\r\n    paddingVertical: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ddd\",\r\n  },\r\n  menuText: { fontSize: 18 },\r\n  backButton: { marginTop: 35 },\r\n});\r\n\r\nexport default AlunoScreen;","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  ImageBackground,\r\n  Modal,\r\n  StatusBar,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  RefreshControl,\r\n  Dimensions,\r\n  Platform,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Text, IconButton, useTheme, TextInput, Button } from \"react-native-paper\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { Calendar as BigCalendar } from \"react-native-big-calendar\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport config from \"../../config/config_db\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\n\r\ninterface IMyEvent {\r\n  id: string;\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  color?: string;\r\n  type?: \"task\" | \"event\";\r\n  professor_email?: string;\r\n  descricao?: string;\r\n  data_da_tarefa?: string;\r\n  turma_id?: number;\r\n  fileUri?: string;\r\n  fileName?: string;\r\n}\r\n\r\nconst defaultColors = [\r\n  { value: \"#FF6347\", name: \"Tomate\" },\r\n  { value: \"#DC143C\", name: \"Carmesim\" },\r\n  { value: \"#FF4500\", name: \"Vermelho-Laranja\" },\r\n  { value: \"#8A2BE2\", name: \"Azul-Violeta\" },\r\n  { value: \"#5F9EA0\", name: \"Azul-Cadete\" },\r\n  { value: \"#2E8B57\", name: \"Verde-Mar\" },\r\n  { value: \"#FF8C00\", name: \"Laranja-Escuro\" },\r\n  { value: \"#9932CC\", name: \"Orquídea-Escura\" },\r\n  { value: \"#20B2AA\", name: \"Verde-Mar-Claro\" },\r\n  { value: \"#4682B4\", name: \"Azul-Aço\" },\r\n];\r\n\r\nconst CustomIconButton = ({ icon, onPress, style, label, ...rest }: any) => {\r\n  if (Platform.OS === \"web\") {\r\n    return (\r\n      <TouchableOpacity onPress={onPress} style={style}>\r\n        <Text style={rest.iconColor ? { color: rest.iconColor } : {}}>\r\n          {label || icon}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n  return <IconButton icon={icon} onPress={onPress} style={style} {...rest} />;\r\n};\r\n\r\nconst ProfessorScreen = ({ navigation }: { navigation: any }) => {\r\n  const theme = useTheme();\r\n  const route = useRoute<{\r\n    key: string;\r\n    name: string;\r\n    params: { fromLogin: any; email?: string };\r\n  }>();\r\n  const { height } = Dimensions.get(\"window\");\r\n\r\n  const url_searchEvents = `${config.baseUrl}/calendarioFiles/professor/eventos/fetch_events.php`;\r\n  const url_fetchTasksData = `${config.baseUrl}/calendarioFiles/professor/tarefas/fetch_tasks.php`;\r\n  const url_deleteTask = `${config.baseUrl}/calendarioFiles/professor/tarefas/delete_task.php`;\r\n  const url_deleteEvent = `${config.baseUrl}/calendarioFiles/professor/eventos/delete_event.php`;\r\n  const url_updateTask = `${config.baseUrl}/calendarioFiles/professor/tarefas/update_task.php`;\r\n  const url_updateEvent = `${config.baseUrl}/calendarioFiles/professor/eventos/update_event.php`;\r\n  const url_fetchTurmas = `${config.baseUrl}/calendarioFiles/professor/fetch_turmas.php`;\r\n\r\n  const [formData, setFormData] = useState({ email: \"\", aluno_id: null });\r\n  const [userThemeLocal, setUserThemeLocal] = useState<\"light\" | \"dark\">(\"light\");\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [bigCalendarEvents, setBigCalendarEvents] = useState<IMyEvent[]>([]);\r\n  const [tasks, setTasks] = useState<any[]>([]);\r\n\r\n  const [menuModalVisible, setMenuModalVisible] = useState(false);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n  const [selectedDay, setSelectedDay] = useState<Date | null>(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [confirmationModalVisible, setConfirmationModalVisible] = useState(false);\r\n  const [updateConfirmModalVisible, setUpdateConfirmModalVisible] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState<IMyEvent | null>(null);\r\n  const [detailModalVisible, setDetailModalVisible] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [editedTitle, setEditedTitle] = useState(\"\");\r\n  const [editedDescricao, setEditedDescricao] = useState(\"\");\r\n  const [editedDataTarefa, setEditedDataTarefa] = useState<Date>(new Date());\r\n  const [editedStart, setEditedStart] = useState<Date>(new Date());\r\n  const [editedEnd, setEditedEnd] = useState<Date>(new Date());\r\n  const [taskColor, setTaskColor] = useState(\"#47AD4D\");\r\n  const [showColorModal, setShowColorModal] = useState(false);\r\n\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n  const [datePickerMode, setDatePickerMode] = useState<\"date\" | \"time\">(\"date\");\r\n  const [datePickerTarget, setDatePickerTarget] = useState<\"dataTarefa\" | \"start\" | \"end\" | null>(null);\r\n\r\n  const [turmas, setTurmas] = useState<{ id: number; turma: string; ano: number }[]>([]);\r\n  const [editedTurmaId, setEditedTurmaId] = useState<number | null>(null);\r\n  const [editedFile, setEditedFile] = useState<any>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [filePreviewModalVisible, setFilePreviewModalVisible] = useState(false);\r\n  const [previewFile, setPreviewFile] = useState<{ uri: string; name: string; type?: string } | null>(null);\r\n\r\n\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch {\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedItem) {\r\n      setEditedTitle(selectedItem.title);\r\n      setEditedDescricao(selectedItem.descricao || \"\");\r\n      if (selectedItem.type === \"task\" && selectedItem.data_da_tarefa) {\r\n        setEditedDataTarefa(new Date(selectedItem.data_da_tarefa.replace(\" \", \"T\")));\r\n      }\r\n      if (selectedItem.type === \"event\") {\r\n        setEditedStart(new Date(selectedItem.start));\r\n        setEditedEnd(new Date(selectedItem.end));\r\n      }\r\n      if (selectedItem.color) {\r\n        setTaskColor(selectedItem.color);\r\n      }\r\n      if (selectedItem.turma_id) {\r\n        setEditedTurmaId(selectedItem.turma_id);\r\n      }\r\n    }\r\n  }, [selectedItem]);\r\n\r\n  useEffect(() => {\r\n    if (route.params?.email) {\r\n      setFormData((prev) => ({ ...prev, email: route.params.email }));\r\n      fetchTasks(route.params.email);\r\n      fetchEvents(route.params.email);\r\n    }\r\n  }, [route.params?.email]);\r\n\r\n  useEffect(() => {\r\n    setUserThemeLocal(userTheme);\r\n  }, [userTheme]);\r\n\r\n  const fetchTurmas = useCallback(() => {\r\n    axios.post(url_fetchTurmas, { email: formData.email })\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          setTurmas(res.data.turmas);\r\n        }\r\n      })\r\n      .catch(err => console.log(\"\", err));\r\n  }, [url_fetchTurmas, formData.email]);  \r\n\r\n  useEffect(() => {\r\n    fetchTurmas();\r\n  }, [fetchTurmas]);\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    if (formData.email) {\r\n      fetchEvents(formData.email);\r\n      fetchTasks(formData.email);\r\n    }\r\n    setTimeout(() => setRefreshing(false), 1000);\r\n  };\r\n\r\n  const handleQRCodeScan = () => {\r\n    navigation.navigate(\"GenerateQRCodeScreen\", { email: formData.email });\r\n  };\r\n\r\n  const handleDeleteTask = () => {\r\n    if (!selectedItem || !selectedItem.id) return;\r\n    axios.post(url_deleteTask, {\r\n      tarefa_id: selectedItem.id,\r\n      email: formData.email,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setBigCalendarEvents((prev) =>\r\n            prev.filter((ev) => ev.id !== selectedItem.id)\r\n          );\r\n          setTasks((prev) =>\r\n            prev.filter((task) => task.id !== selectedItem.id)\r\n          );\r\n          setDetailModalVisible(false);\r\n          setSelectedItem(null);\r\n          Alert.alert(\"Tarefa apagada com sucesso.\");\r\n        } else {\r\n          Alert.alert(\"Erro\", response.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Alert.alert(\"Erro ao apagar a tarefa.\");\r\n      });\r\n  };\r\n\r\n  const handleDeleteEvent = () => {\r\n    if (!selectedItem || !selectedItem.id) return;\r\n    axios.post(url_deleteEvent, {\r\n      event_id: selectedItem.id,\r\n      email: formData.email,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setBigCalendarEvents((prev) =>\r\n            prev.filter((ev) => ev.id !== selectedItem.id)\r\n          );\r\n          setDetailModalVisible(false);\r\n          setSelectedItem(null);\r\n          Alert.alert(\"Evento apagado com sucesso.\");\r\n        } else {\r\n          Alert.alert(\"Erro\", response.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Alert.alert(\"Erro ao apagar o evento.\");\r\n      });\r\n  };\r\n\r\n  const handleDeleteItem = () => {\r\n    if (selectedItem?.type === \"task\") {\r\n      handleDeleteTask();\r\n    } else if (selectedItem?.type === \"event\") {\r\n      handleDeleteEvent();\r\n    }\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    setConfirmationModalVisible(true);\r\n  };\r\n\r\n  const onConfirmDelete = () => {\r\n    setConfirmationModalVisible(false);\r\n    handleDeleteItem();\r\n  };\r\n\r\n  const fetchEvents = useCallback((email: string) => {\r\n    if (!email) return;\r\n    axios.post(url_searchEvents, { email })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          const newEvents: IMyEvent[] = response.data.map((event: any) => {\r\n            const start = new Date(event.start_datetime.replace(\" \", \"T\"));\r\n            const end = new Date(event.end_datetime.replace(\" \", \"T\"));\r\n            return {\r\n              id: event.id || `${event.start_datetime}-${event.title}`,\r\n              title: event.title,\r\n              start,\r\n              end,\r\n              color: event.color || \"#47AD4D\",\r\n              type: \"event\",\r\n              descricao: event.descricao,\r\n              turma_id: event.turma_id,\r\n            };\r\n          });\r\n          setBigCalendarEvents(newEvents);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        \r\n      });\r\n  }, []);\r\n\r\n  const fetchTasks = (email: string) => {\r\n    if (!email) return;\r\n    axios.post(url_fetchTasksData, { email })\r\n      .then((response) => {\r\n        if (response.data.success && Array.isArray(response.data.tasks)) {\r\n          setTasks(response.data.tasks);\r\n        } else {\r\n          setTasks([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const handleCalendarCellPress = (date: Date) => {\r\n    setSelectedDay(date);\r\n  };\r\n\r\n  const handleCalendarEventPress = (event: IMyEvent) => {\r\n    setSelectedItem(event);\r\n    setIsEditing(false);\r\n    setDetailModalVisible(true);\r\n  };\r\n\r\n  const taskEvents = tasks.map((task): IMyEvent => {\r\n    const rawDate = new Date(task.data_da_tarefa.replace(\" \", \"T\"));\r\n    const minutes = rawDate.getMinutes();\r\n    let startDate: Date;\r\n    let endDate: Date;\r\n    if (minutes < 30) {\r\n      startDate = rawDate;\r\n      endDate = new Date(rawDate.getTime() + 30 * 60 * 1000);\r\n    } else {\r\n      startDate = new Date(rawDate.getTime() - 30 * 60 * 1000);\r\n      endDate = rawDate;\r\n    }\r\n    return {\r\n      id: task.id.toString(),\r\n      title: task.titulo,\r\n      start: startDate,\r\n      end: endDate,\r\n      color: task.cores,\r\n      type: \"task\",\r\n      descricao: task.descricao,\r\n      data_da_tarefa: task.data_da_tarefa,\r\n      turma_id: task.turma_id,\r\n    };\r\n  });\r\n\r\n  const combinedEvents = [...bigCalendarEvents, ...taskEvents];\r\n  const dayEvents = combinedEvents.filter((ev) => {\r\n    if (!selectedDay) return false;\r\n    return ev.start.toDateString() === selectedDay.toDateString();\r\n  });\r\n\r\n  const pickFile = async () => {\r\n    if (Platform.OS === 'web') {\r\n      fileInputRef.current?.click();\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const result = await DocumentPicker.getDocumentAsync({\r\n        copyToCacheDirectory: true,\r\n        multiple: false,\r\n        type: '*/*',\r\n      });\r\n  \r\n      if (!result.canceled && result.assets.length > 0) {\r\n        const asset = result.assets[0];\r\n        const { uri, name, mimeType } = asset;\r\n  \r\n        const fileObj = {\r\n          uri,\r\n          name,\r\n          type: mimeType ?? 'application/octet-stream',\r\n        };\r\n  \r\n        setEditedFile(fileObj);\r\n        setPreviewFile(fileObj);\r\n        setFilePreviewModalVisible(true);\r\n      }\r\n    } catch (err) {\r\n    }\r\n  }; \r\n\r\n  const handleEditPress = () => {\r\n    if (!isEditing) {\r\n      setIsEditing(true);\r\n    } else {\r\n      setUpdateConfirmModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (!selectedItem) return;\r\n  \r\n    const data = new FormData();\r\n  \r\n    if (selectedItem.type === \"task\") {\r\n      data.append(\"tarefa_id\", selectedItem.id);\r\n      data.append(\"email\", formData.email);\r\n      data.append(\"titulo\", editedTitle);\r\n      data.append(\"color\", taskColor);\r\n      data.append(\"descricao\", editedDescricao);\r\n      data.append(\"data_da_tarefa\", formatDateTime(editedDataTarefa));\r\n      data.append(\"turma_id\", String(editedTurmaId));\r\n    } else {\r\n      data.append(\"event_id\", selectedItem.id);\r\n      data.append(\"email\", formData.email);\r\n      data.append(\"title\", editedTitle);\r\n      data.append(\"descricao\", editedDescricao);\r\n      data.append(\"start_datetime\", formatDateTime(editedStart));\r\n      data.append(\"end_datetime\", formatDateTime(editedEnd));\r\n      data.append(\"turma_id\", String(editedTurmaId));\r\n      if (editedFile) {\r\n        data.append(\"file\", {\r\n          uri: editedFile.uri,\r\n          name: editedFile.name,\r\n          type: editedFile.type || \"application/octet-stream\",\r\n        } as any);\r\n      }\r\n    }\r\n  \r\n    const url = selectedItem.type === \"task\" ? url_updateTask : url_updateEvent;\r\n  \r\n    axios\r\n      .post(url, data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          Alert.alert(\r\n            selectedItem.type === \"task\" ? \"Tarefa atualizada.\" : \"Evento atualizado.\", \"Agora os alunos as alterações feitas agora por si. \"\r\n          );\r\n          setIsEditing(false);\r\n          setUpdateConfirmModalVisible(false);\r\n          if (selectedItem.type === \"task\") {\r\n            fetchTasks(formData.email);\r\n            fetchEvents(formData.email);\r\n          } else {\r\n            fetchEvents(formData.email);\r\n          }\r\n          setDetailModalVisible(false);\r\n        } else {\r\n          Alert.alert(\"Erro\", response.data.message);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        Alert.alert(\r\n          \"problemas\",\r\n          \"Ocorreu um erro enquanto o tentavamso conectar aos nossos servidores. Pedimos que tente novamente mais tarde.\"\r\n        );\r\n      });\r\n  };\r\n  \r\n  \r\n\r\n  const formatDateTime = (date: Date) => {\r\n    const pad = (n: number) => n < 10 ? \"0\" + n : n;\r\n    return (\r\n      date.getFullYear() +\r\n      \"-\" +\r\n      pad(date.getMonth() + 1) +\r\n      \"-\" +\r\n      pad(date.getDate()) +\r\n      \" \" +\r\n      pad(date.getHours()) +\r\n      \":\" +\r\n      pad(date.getMinutes())\r\n    );\r\n  };\r\n\r\n  const openDateTimePicker = (target: \"dataTarefa\" | \"start\" | \"end\", mode: \"date\" | \"time\") => {\r\n    setDatePickerTarget(target);\r\n    setDatePickerMode(mode);\r\n    setShowDatePicker(true);\r\n  };\r\n\r\n  const onDateTimeChange = (event: any, selected?: Date) => {\r\n  // se o utilizador cancelou\r\n  if (event.type === \"dismissed\" || !selected) {\r\n    setShowDatePicker(false);\r\n    setDatePickerMode(\"date\");\r\n    setDatePickerTarget(null);\r\n    return;\r\n  }\r\n\r\n  const picked = selected;\r\n  // qual campo estamos a editar?\r\n  switch (datePickerTarget) {\r\n    case \"dataTarefa\":\r\n      if (datePickerMode === \"date\") {\r\n        // guardamos a data mantendo a hora antiga\r\n        setEditedDataTarefa(prev => {\r\n          const d = new Date(picked);\r\n          d.setHours(prev.getHours(), prev.getMinutes());\r\n          return d;\r\n        });\r\n        // avança para escolher hora\r\n        setDatePickerMode(\"time\");\r\n        setShowDatePicker(true);\r\n      } else {\r\n        // hora\r\n        setEditedDataTarefa(prev => {\r\n          const d = new Date(prev);\r\n          d.setHours(picked.getHours(), picked.getMinutes());\r\n          return d;\r\n        });\r\n        setShowDatePicker(false);\r\n        setDatePickerMode(\"date\");\r\n        setDatePickerTarget(null);\r\n      }\r\n      break;\r\n\r\n    case \"start\":\r\n      if (datePickerMode === \"date\") {\r\n        setEditedStart(prev => {\r\n          const d = new Date(picked);\r\n          d.setHours(prev.getHours(), prev.getMinutes());\r\n          return d;\r\n        });\r\n        setDatePickerMode(\"time\");\r\n        setShowDatePicker(true);\r\n      } else {\r\n        setEditedStart(prev => {\r\n          const d = new Date(prev);\r\n          d.setHours(picked.getHours(), picked.getMinutes());\r\n          return d;\r\n        });\r\n        setShowDatePicker(false);\r\n        setDatePickerMode(\"date\");\r\n        setDatePickerTarget(null);\r\n      }\r\n      break;\r\n\r\n    case \"end\":\r\n      if (datePickerMode === \"date\") {\r\n        setEditedEnd(prev => {\r\n          const d = new Date(picked);\r\n          d.setHours(prev.getHours(), prev.getMinutes());\r\n          return d;\r\n        });\r\n        setDatePickerMode(\"time\");\r\n        setShowDatePicker(true);\r\n      } else {\r\n        setEditedEnd(prev => {\r\n          const d = new Date(prev);\r\n          d.setHours(picked.getHours(), picked.getMinutes());\r\n          return d;\r\n        });\r\n        setShowDatePicker(false);\r\n        setDatePickerMode(\"date\");\r\n        setDatePickerTarget(null);\r\n      }\r\n      break;\r\n\r\n    default:\r\n      setShowDatePicker(false);\r\n      setDatePickerMode(\"date\");\r\n      setDatePickerTarget(null);\r\n  }\r\n};\r\n\r\n  const renderConfirmationModal = () => (\r\n    <Modal visible={confirmationModalVisible} animationType=\"fade\" transparent>\r\n      <View style={styles.confirmationOverlay}>\r\n        <View style={styles.confirmationContainer}>\r\n          <Text style={styles.confirmationText}>\r\n            Tem a certeza que deseja apagar este {selectedItem?.type === \"task\" ? \"a tarefa\" : \"o evento\"}?\r\n          </Text>\r\n          <View style={styles.confirmationButtons}>\r\n            <Button mode=\"contained\" onPress={() => setConfirmationModalVisible(false)} style={styles.cancelButton}>\r\n              Cancelar\r\n            </Button>\r\n            <Button mode=\"contained\" onPress={onConfirmDelete} style={styles.confirmButton}>\r\n              Confirmar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n\r\n  const renderUpdateConfirmModal = () => (\r\n    <Modal visible={updateConfirmModalVisible} animationType=\"fade\" transparent>\r\n      <View style={styles.confirmationOverlay}>\r\n        <View style={styles.confirmationContainer}>\r\n          <Text style={styles.confirmationText}>\r\n            Tem a certeza que deseja guardar as alterações?\r\n          </Text>\r\n          <View style={styles.confirmationButtons}>\r\n            <Button mode=\"contained\" onPress={() => setUpdateConfirmModalVisible(false)} style={styles.cancelButton}>\r\n              Cancelar\r\n            </Button>\r\n            <Button mode=\"contained\" onPress={handleUpdate} style={styles.confirmButton}>\r\n              Confirmar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n\r\n  const renderDetailModal = () => {\r\n    if (!selectedItem) return null;\r\n  \r\n    const isWeb = Platform.OS === \"web\";\r\n    const modalBg = styles.modalBg;\r\n    const boxStyle = isWeb ? styles.webModalBox : styles.mobileModalBox;\r\n  \r\n    return (\r\n      <Modal visible={detailModalVisible} animationType=\"slide\" transparent>\r\n        <ImageBackground\r\n          source={backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../assets/images/bg1.jpg\")}\r\n          style={modalBg}\r\n        >\r\n          {/* Cabeçalho */}\r\n          <View style={styles.header}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setSelectedItem(null);\r\n                setDetailModalVisible(false);\r\n                setIsEditing(false);\r\n              }}\r\n              style={{ flex: 1 }}\r\n            >\r\n              <Image\r\n                source={require(\"../../assets/icons/angle-left.png\")}\r\n                style={[styles.backIcon, { tintColor: dynamicTextColor }]}\r\n              />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => setAccountModalVisible(true)}\r\n              style={{ flex: 1, alignItems: \"flex-end\" }}\r\n            >\r\n              <Image\r\n                source={require(\"../../assets/icons/user.png\")}\r\n                style={[styles.userIcon, { tintColor: dynamicTextColor }]}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n  \r\n          {/* Conteúdo */}\r\n          <View style={boxStyle}>\r\n            <ScrollView contentContainerStyle={styles.configModalContainer}>\r\n              <Text style={styles.warningText}>\r\n                {selectedItem.type === \"task\"\r\n                  ? isEditing\r\n                    ? \"Editar tarefa\"\r\n                    : \"Visualização da tarefa\"\r\n                  : isEditing\r\n                    ? \"Editar evento\"\r\n                    : \"Visualização do evento\"}\r\n              </Text>\r\n  \r\n              {!isEditing ? (\r\n                // **Resumo**\r\n                <View style={styles.summaryContainer}>\r\n                  <View style={styles.summaryRow}>\r\n                    <Text style={styles.summaryLabel}>Título:</Text>\r\n                    <Text style={styles.summaryValue}>{selectedItem.title}</Text>\r\n                  </View>\r\n                  {selectedItem.type === \"task\" ? (\r\n                    <>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Descrição:</Text>\r\n                        <Text style={styles.summaryValue}>{selectedItem.descricao || \"—\"}</Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Data/Hora:</Text>\r\n                        <Text style={styles.summaryValue}>{selectedItem.data_da_tarefa}</Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Turma/Ano:</Text>\r\n                        <Text style={styles.summaryValue}>\r\n                          {turmas.find(t => t.id === selectedItem.turma_id)\r\n                            ? `Turma ${turmas.find(t => t.id === selectedItem.turma_id)!.turma} (Ano ${turmas.find(t => t.id === selectedItem.turma_id)!.ano})`\r\n                            : \"—\"}\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Cor:</Text>\r\n                        <View style={[styles.colorCircle, { backgroundColor: selectedItem.color || \"#000\" }]} />\r\n                      </View>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Início:</Text>\r\n                        <Text style={styles.summaryValue}>\r\n                          {new Date(selectedItem.start).toLocaleString()}\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Fim:</Text>\r\n                        <Text style={styles.summaryValue}>\r\n                          {new Date(selectedItem.end).toLocaleString()}\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Descrição:</Text>\r\n                        <Text style={styles.summaryValue}>{selectedItem.descricao || \"—\"}</Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Turma/Ano:</Text>\r\n                        <Text style={styles.summaryValue}>\r\n                          {turmas.find(t => t.id === selectedItem.turma_id)\r\n                            ? `Turma ${turmas.find(t => t.id === selectedItem.turma_id)!.turma} (Ano ${turmas.find(t => t.id === selectedItem.turma_id)!.ano})`\r\n                            : \"—\"}\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.summaryRow}>\r\n                        <Text style={styles.summaryLabel}>Cor:</Text>\r\n                        <View style={[styles.colorCircle, { backgroundColor: selectedItem.color || \"#000\" }]} />\r\n                      </View>\r\n                    </>\r\n                  )}\r\n  \r\n                  <Button\r\n                    mode=\"outlined\"\r\n                    onPress={() => setIsEditing(true)}\r\n                    style={styles.editButton}\r\n                    labelStyle={{ color: \"#47AD4D\" }}\r\n                  >\r\n                    Editar\r\n                  </Button>\r\n                </View>\r\n              ) : (\r\n                // **Formulário de Edição**\r\n                <>\r\n                  {/* TÍTULO */}\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Título</Text>\r\n                  <TextInput\r\n                    mode=\"outlined\"\r\n                    value={editedTitle}\r\n                    onChangeText={setEditedTitle}\r\n                    style={styles.input}\r\n                  />\r\n  \r\n                  {selectedItem.type === \"task\" ? (\r\n                    <>\r\n                      {/* DATA + HORA DA TAREFA */}\r\n                      {isWeb ? (\r\n                        <>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Data</Text>\r\n                          <Text\r\n                            style={styles.webInput}\r\n                          >\r\n                            <input\r\n                              type=\"date\"\r\n                              value={editedDataTarefa.toISOString().slice(0,10)}\r\n                              onChange={e => {\r\n                                const [y,m,d] = e.target.value.split(\"-\");\r\n                                const dt = new Date(editedDataTarefa);\r\n                                dt.setFullYear(+y, +m-1, +d);\r\n                                setEditedDataTarefa(dt);\r\n                              }}\r\n                            />\r\n                          </Text>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Hora</Text>\r\n                          <Text\r\n                            style={styles.webInput}\r\n                          >\r\n                            <input\r\n                              type=\"time\"\r\n                              value={formatDateTime(editedDataTarefa).slice(11)}\r\n                              onChange={e => {\r\n                                const [h,min] = e.target.value.split(\":\");\r\n                                const dt = new Date(editedDataTarefa);\r\n                                dt.setHours(+h, +min);\r\n                                setEditedDataTarefa(dt);\r\n                              }}\r\n                            />\r\n                          </Text>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Data da Tarefa</Text>\r\n                          <TextInput\r\n                            mode=\"outlined\"\r\n                            value={formatDateTime(editedDataTarefa)}\r\n                            editable={false}\r\n                            right={\r\n                              <TextInput.Icon\r\n                                icon=\"calendar\"\r\n                                onPress={() => openDateTimePicker(\"dataTarefa\", \"date\")}\r\n                              />\r\n                            }\r\n                            style={styles.input}\r\n                          />\r\n                        </>\r\n                      )}\r\n  \r\n                      {/* DESCRIÇÃO */}\r\n                      <Text style={[styles.label, { color: dynamicTextColor }]}>Descrição</Text>\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        value={editedDescricao}\r\n                        onChangeText={setEditedDescricao}\r\n                        multiline\r\n                        style={[styles.input, { minHeight: 60 }]}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {/* INÍCIO / FIM do EVENTO */}\r\n                      {isWeb ? (\r\n                        <>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Data Início</Text>\r\n                          <Text style={styles.webInput}>\r\n                            <input\r\n                              type=\"date\"\r\n                              value={editedStart.toISOString().slice(0,10)}\r\n                              onChange={e => {\r\n                                const [y,m,d] = e.target.value.split(\"-\");\r\n                                const dt = new Date(editedStart);\r\n                                dt.setFullYear(+y, +m-1, +d);\r\n                                setEditedStart(dt);\r\n                              }}\r\n                            />\r\n                          </Text>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Hora Início</Text>\r\n                          <Text style={styles.webInput}>\r\n                            <input\r\n                              type=\"time\"\r\n                              value={formatDateTime(editedStart).slice(11)}\r\n                              onChange={e => {\r\n                                const [h,min] = e.target.value.split(\":\");\r\n                                const dt = new Date(editedStart);\r\n                                dt.setHours(+h, +min);\r\n                                setEditedStart(dt);\r\n                              }}\r\n                            />\r\n                          </Text>\r\n  \r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Data Fim</Text>\r\n                          <Text style={styles.webInput}>\r\n                            <input\r\n                              type=\"date\"\r\n                              value={editedEnd.toISOString().slice(0,10)}\r\n                              onChange={e => {\r\n                                const [y,m,d] = e.target.value.split(\"-\");\r\n                                const dt = new Date(editedEnd);\r\n                                dt.setFullYear(+y, +m-1, +d);\r\n                                setEditedEnd(dt);\r\n                              }}\r\n                            />\r\n                          </Text>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Hora Fim</Text>\r\n                          <Text style={styles.webInput}>\r\n                            <input\r\n                              type=\"time\"\r\n                              value={formatDateTime(editedEnd).slice(11)}\r\n                              onChange={e => {\r\n                                const [h,min] = e.target.value.split(\":\");\r\n                                const dt = new Date(editedEnd);\r\n                                dt.setHours(+h, +min);\r\n                                setEditedEnd(dt);\r\n                              }}\r\n                            />\r\n                          </Text>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Data de Início</Text>\r\n                          <TextInput\r\n                            mode=\"outlined\"\r\n                            value={formatDateTime(editedStart)}\r\n                            editable={false}\r\n                            right={\r\n                              <TextInput.Icon\r\n                                icon=\"calendar\"\r\n                                onPress={() => openDateTimePicker(\"start\", \"date\")}\r\n                              />\r\n                            }\r\n                            style={styles.input}\r\n                          />\r\n                          <Text style={[styles.label, { color: dynamicTextColor }]}>Data de Fim</Text>\r\n                          <TextInput\r\n                            mode=\"outlined\"\r\n                            value={formatDateTime(editedEnd)}\r\n                            editable={false}\r\n                            right={\r\n                              <TextInput.Icon\r\n                                icon=\"calendar\"\r\n                                onPress={() => openDateTimePicker(\"end\", \"date\")}\r\n                              />\r\n                            }\r\n                            style={styles.input}\r\n                          />\r\n                        </>\r\n                      )}\r\n                      {/* Descrição do evento */}\r\n                      <Text style={[styles.label, { color: dynamicTextColor }]}>Descrição</Text>\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        value={editedDescricao}\r\n                        onChangeText={setEditedDescricao}\r\n                        style={styles.input}\r\n                      />\r\n                    </>\r\n                  )}\r\n  \r\n                  {/* TURMA / ANO */}\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Turma / Ano</Text>\r\n                  <View style={[styles.inputContainer]}>\r\n                    <Picker\r\n                      selectedValue={editedTurmaId}\r\n                      onValueChange={val => setEditedTurmaId(val)}\r\n                    >\r\n                      {turmas.map(t => (\r\n                        <Picker.Item\r\n                          key={t.id}\r\n                          label={`Turma ${t.turma} (Ano ${t.ano})`}\r\n                          value={t.id}\r\n                        />\r\n                      ))}\r\n                    </Picker>\r\n                  </View>\r\n  \r\n                  {/* COR */}\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Cor</Text>\r\n                  <TouchableOpacity\r\n                    onPress={() => setShowColorModal(true)}\r\n                    style={styles.selectedColorDisplay}\r\n                  >\r\n                    <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                    <Text style={{ color: dynamicTextColor }}>Clique para alterar cor</Text>\r\n                  </TouchableOpacity>\r\n  \r\n                  {/* Botões */}\r\n                  <View style={styles.buttonsRow}>\r\n                    <Button\r\n                      mode=\"contained\"\r\n                      onPress={handleUpdate}\r\n                      style={styles.saveButtonSmall}\r\n                    >\r\n                      Salvar\r\n                    </Button>\r\n                    <Button\r\n                      mode=\"contained\"\r\n                      onPress={handleDeleteItem}\r\n                      style={styles.deleteButtonSmall}\r\n                    >\r\n                      Apagar\r\n                    </Button>\r\n                  </View>\r\n  \r\n                  <Button\r\n                    mode=\"text\"\r\n                    onPress={() => setIsEditing(false)}\r\n                    labelStyle={{ color: \"#47AD4D\" }}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </ScrollView>\r\n          </View>\r\n  \r\n          {/* DateTimePicker Mobile */}\r\n          {!isWeb && showDatePicker && (\r\n            <DateTimePicker\r\n              value={\r\n                datePickerTarget === \"dataTarefa\"\r\n                  ? editedDataTarefa\r\n                  : datePickerTarget === \"start\"\r\n                  ? editedStart\r\n                  : editedEnd\r\n              }\r\n              mode={datePickerMode}\r\n              is24Hour\r\n              display=\"default\"\r\n              onChange={onDateTimeChange}\r\n            />\r\n          )}\r\n        </ImageBackground>\r\n      </Modal>\r\n    );\r\n  };  \r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#e0dede\" : \"#000\";\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n        style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        {userTheme === \"dark\" && (\r\n          <View style={{ position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0, backgroundColor: \"rgba(0,0,0,0.5)\", zIndex: 1 }} />\r\n        )}\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <ActivityIndicator size=\"large\" color={dynamicTextColor} />\r\n          <Text style={{ fontSize: 18, marginTop: 10, color: dynamicTextColor }}>\r\n            A Carregar os registros...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  const dynamicHeaderBackground = userThemeLocal === \"dark\" ? \"#222\" : theme.colors.surface;\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.background}\r\n    >\r\n      {userThemeLocal === \"dark\" && <View style={styles.overlay} />}\r\n      <StatusBar\r\n        backgroundColor=\"transparent\"\r\n        translucent\r\n        barStyle={userThemeLocal === \"dark\" ? \"light-content\" : \"dark-content\"}\r\n      />\r\n      <SafeAreaView style={styles.safeContainer}>\r\n        <View\r\n          style={{\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            zIndex: 10,\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => setMenuModalVisible(true)}>\r\n            <Image\r\n              source={require(\"../../assets/icons/menu-burger.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                marginLeft: 3,\r\n                marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n\r\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate(\"PersonalizarTarefaProf\", { email: formData.email })}\r\n              style={{ marginRight: 20 }}\r\n            >\r\n              <Image\r\n                source={require(\"../../assets/icons/list-check.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 30 : 23,\r\n                  height: Platform.OS === \"web\" ? 30 : 25,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n              <Image\r\n                source={require(\"../../assets/icons/user.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 30 : 25,\r\n                  height: Platform.OS === \"web\" ? 30 : 25,\r\n                  marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        \r\n        <ScrollView style={styles.container} contentContainerStyle={{ paddingBottom: 100 }} refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n          <View style={styles.calendarBox}>\r\n            <BigCalendar\r\n              events={combinedEvents}\r\n              height={Platform.OS === \"web\" ? height * 0.80 : height * 0.75}\r\n              mode=\"month\"\r\n              swipeEnabled={true}\r\n              weekStartsOn={1}\r\n              showTime={false}\r\n              onPressCell={handleCalendarCellPress}\r\n              onPressEvent={handleCalendarEventPress}\r\n              eventCellStyle={(event) =>\r\n                event.color ? { backgroundColor: event.color } : {}\r\n              }\r\n            />\r\n          </View>\r\n          {selectedDay && (\r\n            <View style={{ padding: 10 }}>\r\n              <Text style={styles.dayHeader}>\r\n                Eventos e tarefas de {selectedDay.toLocaleDateString()}\r\n              </Text>\r\n              <ScrollView style={{ maxHeight: 200 }}>\r\n                {combinedEvents\r\n                  .filter(ev => ev.start.toDateString() === selectedDay.toDateString())\r\n                  .sort((a, b) => a.start.getTime() - b.start.getTime())\r\n                  .map(ev => (\r\n                    <TouchableOpacity\r\n                      key={ev.id}\r\n                      style={[styles.eventItem, { backgroundColor: ev.color }]}\r\n                      onPress={() => handleCalendarEventPress(ev)}\r\n                    >\r\n                      <Text style={styles.eventTitle}>{ev.title}</Text>\r\n                      <Text style={styles.eventTime}>\r\n                        {ev.start.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                        {' – '}\r\n                        {ev.end.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                {combinedEvents.filter(ev => ev.start.toDateString() === selectedDay.toDateString()).length === 0 &&\r\n                  <Text style={styles.noEventsText}>Nenhum evento ou tarefa neste dia.</Text>\r\n                }\r\n              </ScrollView>\r\n            </View>\r\n          )}<TouchableOpacity\r\n          onPress={() =>\r\n            navigation.navigate(\r\n              Platform.OS === \"web\"\r\n                ? \"AddEventsScreenWeb\"\r\n                : \"addEventListener\",\r\n              { email: formData.email }\r\n            )\r\n          }\r\n          style={[\r\n            styles.plusButtonContainer,\r\n            { backgroundColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\" },\r\n          ]}\r\n        >\r\n          <Image\r\n            source={require(\"../../assets/icons/plus.png\")}\r\n            style={[\r\n              styles.plusIcon,\r\n              { tintColor: userTheme === \"dark\" ? \"#000\" : \"#FFF\" },\r\n            ]}\r\n          />\r\n        </TouchableOpacity>        \r\n        </ScrollView>\r\n        {renderDetailModal()}\r\n        \r\n        <Modal\r\n          visible={menuModalVisible}\r\n          animationType=\"slide\"\r\n          transparent\r\n          onRequestClose={() => setMenuModalVisible(false)}\r\n        >\r\n          <TouchableOpacity\r\n            style={styles.menuOverlay}\r\n            activeOpacity={1}\r\n            onPressOut={() => setMenuModalVisible(false)}\r\n          >\r\n            <View style={[styles.menuContent, { backgroundColor: dynamicHeaderBackground }]}>\r\n              <Text style={[styles.menuTitle, { color: dynamicTextColor }]}>Menu</Text>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"alunosDoProfScreen\", { email: formData.email })}\r\n                style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}\r\n              >\r\n                {Platform.OS !== \"web\" && (\r\n                  <CustomIconButton icon=\"book-open\" label=\"Disciplinas\" size={24} iconColor={dynamicTextColor} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor }]}>Alunos que dou aulas</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"AdicionarNotas\", { email: formData.email })}\r\n                style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}\r\n              >\r\n                {Platform.OS !== \"web\" && (\r\n                  <CustomIconButton icon=\"book-open\" label=\"Disciplinas\" size={24} iconColor={dynamicTextColor} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor }]}>Atribuir notas</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"almocoProfScreen\", { email: formData.email })}\r\n                style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\" }]}\r\n              >\r\n                {Platform.OS !== \"web\" && (\r\n                  <CustomIconButton icon=\"calendar-clock\" label=\"Eventos\" size={24} iconColor={dynamicTextColor} />\r\n                )}\r\n                <Text style={[styles.menuText, { color: dynamicTextColor }]}>Marcar almoço</Text>\r\n              </TouchableOpacity>\r\n              {Platform.OS !== \"web\" && (\r\n                <TouchableOpacity\r\n                  onPress={handleQRCodeScan}\r\n                  style={[styles.menuLink, { flexDirection: \"row\", alignItems: \"center\", marginTop: \"auto\" }]}\r\n                >\r\n                  <CustomIconButton icon=\"qrcode\" label=\"QrCode\" size={24} iconColor={dynamicTextColor} />\r\n                  <Text style={[styles.menuText, { color: dynamicTextColor }]}>QrCode</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </TouchableOpacity>\r\n        </Modal>\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={formData.email}\r\n        />\r\n        <Modal visible={showColorModal} animationType=\"slide\" transparent>\r\n          <View style={styles.colorModalOverlay}>\r\n            <View style={styles.colorModalContainer}>\r\n              <Text style={[styles.modalTitle, { color: dynamicTextColor }]}>Selecionar Cor</Text>\r\n              {!defaultColors.find((opt) => opt.value === taskColor) && (\r\n                <TouchableOpacity\r\n                  style={styles.colorOptionRow}\r\n                  onPress={() => {\r\n                    setTaskColor(taskColor);\r\n                    setShowColorModal(false);\r\n                  }}\r\n                >\r\n                  <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                  <Text style={[styles.colorName, { color: dynamicTextColor }]}>Cor Atual</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              {defaultColors.map((opt) => (\r\n                <TouchableOpacity\r\n                  key={opt.value}\r\n                  style={styles.colorOptionRow}\r\n                  onPress={() => {\r\n                    setTaskColor(opt.value);\r\n                    setShowColorModal(false);\r\n                  }}\r\n                >\r\n                  <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                  <Text style={[styles.colorName, { color: dynamicTextColor }]}>{opt.name}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n              <Button mode=\"contained\" onPress={() => setShowColorModal(false)} style={styles.modalCloseButton}>\r\n                Fechar\r\n              </Button>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n \r\n        <Modal visible={filePreviewModalVisible} transparent animationType=\"slide\">\r\n          <View style={styles.previewOverlay}>\r\n            <View style={styles.previewContainer}>\r\n              {previewFile?.uri.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\r\n                <Image source={{ uri: previewFile.uri }} style={styles.previewImage} resizeMode=\"contain\" />\r\n              ) : (\r\n                <Text style={styles.previewText}>{previewFile?.name}</Text>\r\n              )}\r\n              <View style={styles.previewButtons}>\r\n                <Button mode=\"outlined\" onPress={() => {\r\n                  setEditedFile(null);\r\n                  setPreviewFile(null);\r\n                  setFilePreviewModalVisible(false);\r\n                }}>\r\n                  Cancelar\r\n                </Button>\r\n                <Button mode=\"contained\" onPress={() => {\r\n                  setFilePreviewModalVisible(false);\r\n                }}>\r\n                  Escolher\r\n                </Button>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </SafeAreaView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modalBg: { flex: 1 },\r\nmobileModalBox: {\r\n  flex: 1,\r\n  marginTop: Platform.OS === \"web\" ? 90 : 70,\r\n  backgroundColor: \"white\",\r\n  borderTopLeftRadius: 16,\r\n  borderTopRightRadius: 16,\r\n  marginBottom: 190,\r\n  padding: 20,\r\n},\r\nwebModalBox: {\r\n  marginTop: 120,\r\n  width: \"90%\",\r\n  maxWidth: 700,\r\n  maxHeight: \"85%\",\r\n  backgroundColor: \"white\",\r\n  borderRadius: 16,\r\n  padding: 40,\r\n  alignSelf: \"center\",\r\n},\r\nconfigModalContainer: {\r\n  padding: 30,\r\n  paddingBottom: 50,\r\n},\r\neditButton: { alignSelf: \"flex-end\", marginTop: 10, borderColor: \"#47AD4D\", borderWidth: 1 },\r\nbuttonsRow: { flexDirection: \"row\", justifyContent: \"space-between\", marginVertical: 16 },\r\nsaveButtonSmall: { flex: 1, marginRight: 8, backgroundColor: \"#47AD4D\" },\r\ndeleteButtonSmall: { flex: 1, marginLeft: 8, backgroundColor: \"#FF5733\" },\r\nlabel: { marginBottom: 8, fontSize: 18 },\r\ninput: { marginBottom: 20, height: 50 },\r\n  summaryContainer: {\r\n    backgroundColor: \"#F9F9F9\",\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 24,\r\n  },\r\n  summaryRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 12,\r\n  },\r\n  summaryLabel: {\r\n    flex: 1,\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n    color: \"##000\",\r\n  },\r\n  summaryValue: {\r\n    flex: 2,\r\n    fontSize: 16,\r\n    color: \"#000\",\r\n    textAlign: \"right\",\r\n  },\r\n  dayHeader: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    marginBottom: 8,\r\n    color: '#333',\r\n  },\r\n  eventItem: {\r\n    padding: 10,\r\n    borderRadius: 6,\r\n    marginBottom: 6,\r\n  },\r\n  eventTitle: {\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  eventTime: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n  },\r\n  noEventsText: {\r\n    fontStyle: 'italic',\r\n    color: '#666',\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    top: Platform.OS === \"web\" ? 20 : 10,\r\n    right: 10,\r\n    padding: 10,\r\n    zIndex: 10,\r\n  },\r\n  closeIcon: { width: 24, height: 24 },\r\n  colorModalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  webInput: { marginBottom:12, padding:8, borderWidth:1, borderRadius:4 },\r\n  colorModalContainer: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#FFF\",\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  colorOptionRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 8,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ccc\",\r\n  },\r\n  colorCircle: { width: 24, height: 24, borderRadius: 12, marginRight: 10 },\r\n  colorName: { fontSize: 16, marginLeft: 10 },\r\n  modalCloseButton: { marginTop: 10, backgroundColor: \"#47AD4D\" },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: -60,\r\n    left: \"52.5%\",\r\n    transform: [{ translateX: -50 }],\r\n    borderRadius: 20,\r\n    backgroundColor: \"#47AD4D\",\r\n    width: 30,\r\n    height: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  selectedDatesScroll: { maxHeight: 550, marginTop: 10 },\r\n  selectedDateItem: { width: \"48%\", marginBottom: 5, alignItems: \"center\" },\r\n  selectedDatesContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 150,\r\n    paddingHorizontal: 10,\r\n  },\r\n  selectedDateText: {\r\n    fontSize: 14,\r\n    color: \"black\",\r\n    width: \"48%\",\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    borderRadius: 5,\r\n    marginBottom: 5,\r\n  },\r\n  fullScreenModal: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContent: { width: \"95%\", height: \"90%\", borderRadius: 15, padding: 20 },\r\n  backButton: { position: \"absolute\", top: 30, left: 20, zIndex: 10 },\r\n  loaderContainer: {\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    backgroundColor: \"white\",\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: \"center\",\r\n  },\r\n  loadingText: { marginTop: 16, fontSize: 16, color: \"#000\", textAlign: \"center\" },\r\n  background: { flex: 1 },\r\n  overlay: { ...StyleSheet.absoluteFillObject, backgroundColor: \"rgba(0,0,0,0.5)\" },\r\n  safeContainer: { flex: 1 },\r\n  header: { width:\"100%\", flexDirection:\"row\", justifyContent:\"space-between\", paddingTop: Platform.OS=== \"web\" ? 40 : (StatusBar.currentHeight||20), paddingHorizontal:10, paddingBottom:10, backgroundColor:\"white\", position:\"absolute\", top:0, zIndex:10},\r\n  menuIcon: { marginRight: 10, marginTop: 35 },\r\n  plusButtonContainer: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    alignSelf: \"center\",\r\n    width: 45,\r\n    height: 45,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    elevation: 5,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    shadowOffset: { width: 0, height: 2 },\r\n  },\r\n  plusIcon: { width: 25, height: 25 },\r\n  todoIcon: { marginRight: 0, marginTop: 35 },\r\n  headerButtons: { flexDirection: \"row\", marginLeft: \"auto\" },\r\n  accontIcon: { marginRight: 0, marginTop: 35 },\r\n  container: { flex: 1, marginTop: Platform.OS === \"web\" ? 50 : StatusBar.currentHeight + 40 || 70 },\r\n  calendarBox: { backgroundColor: \"#FFF\", borderRadius: 12, padding: 10, margin: 10, elevation: 3 },\r\n  menuOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"flex-start\" },\r\n  menuContent: {\r\n    width: \"65%\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    borderTopRightRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  menuTitle: { fontSize: 22, fontWeight: \"bold\", marginBottom: 30 },\r\n  menuLink: { paddingVertical: 15, borderBottomWidth: 1, borderBottomColor: \"#ddd\" },\r\n  menuText: { fontSize: 18 },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  loaderOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(255,255,255,0.7)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  dayModalContainer: { flex: 1, backgroundColor: \"#fff\" },\r\n  dayModalHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    height: 55,\r\n  },\r\n  dayModalTitle: { fontSize: 20, fontWeight: \"bold\" },\r\n  badge: {\r\n    marginTop: 60,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    width: 20,\r\n    height: 20,\r\n    backgroundColor: \"red\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  badgeOnListCheck: {\r\n    position: \"absolute\",\r\n    bottom: -11,\r\n    right: -12,\r\n    backgroundColor: \"red\",\r\n    width: 18,\r\n    height: 18,\r\n    borderRadius: 9,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  badgeText: { color: \"#fff\", fontSize: 10, fontWeight: \"bold\" },\r\n  configHeader: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 20 },\r\n  configHeaderTitle: { fontSize: 20, fontWeight: \"bold\", marginLeft: 10 },\r\n  backIcon: { width: Platform.OS === \"web\" ? 35 : 25, height: Platform.OS === \"web\" ? 35 : 25, tintColor:\"#000\" },\r\n  userIcon: { width: Platform.OS === \"web\" ? 35 : 25, height: Platform.OS === \"web\" ? 35 : 25, tintColor: \"#000\" },\r\n  nonEditableInput: { backgroundColor: \"#ddd\" },\r\n  warningText: { fontSize: 14, marginBottom: 10 },\r\n  selectedColorDisplay: { flexDirection: \"row\", alignItems: \"center\", marginTop: 5, marginBottom: 15 },\r\n  saveButton: { marginVertical: 10 },\r\n  inputContainer: {\r\n    backgroundColor: \"#F0F0F0\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    paddingVertical: 6,    \r\n    paddingHorizontal: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n    minHeight: 40,       \r\n  },\r\n  colorSelector: { flexDirection: \"row\", alignItems: \"center\", backgroundColor: \"#F0F0F0\", padding: 10, borderRadius: 5, marginBottom: 15 },\r\n  saveButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    padding: 13,\r\n    borderRadius: 5,\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: \"red\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  deleteButtonText: { color: \"white\", fontWeight: \"bold\" },\r\n  confirmationOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  confirmationContainer: { width: \"80%\", backgroundColor: \"#FFF\", padding: 20, borderRadius: 10, alignItems: \"center\" },\r\n  confirmationText: { fontSize: 18, marginBottom: 20, textAlign: \"center\" },\r\n  confirmationButtons: { flexDirection: \"row\", justifyContent: \"space-between\", width: \"100%\" },\r\n  cancelButton: { backgroundColor: \"#ccc\", marginRight: 10 },\r\n  confirmButton: { backgroundColor: \"#47AD4D\" },\r\n  previewOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  previewContainer: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n    borderRadius: 8,\r\n    alignItems: \"center\",\r\n  },\r\n  previewImage: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: 15,\r\n  },\r\n  previewText: {\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n  previewButtons: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },  \r\n});\r\n\r\nexport default ProfessorScreen;","import config from \"../../config/config_db\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  StatusBar,\r\n  ImageBackground,\r\n  ActivityIndicator,\r\n  Platform,\r\n  Image,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  HelperText,\r\n  TextInput,\r\n  Button,\r\n  Portal,\r\n  Dialog,\r\n  Paragraph,\r\n} from \"react-native-paper\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RootStackParamList } from \"../../types\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\nconst LoginScreen = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n\r\n  const loginUrl = `${config.baseUrl}/loginFiles/checkEmail.php`;\r\n  const sendCodeUrl = `${config.baseUrl}/loginFiles/sendVerificationCode.php`;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [deviceType] = useState(Platform.OS);\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Estado para o modal de informação\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n\r\n  const togglePasswordVisibility = () =>\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n\r\n  const displayError = (msg: string) => {\r\n    setErrorMessage(msg);\r\n    setMessage(\"\");\r\n    if (Platform.OS === \"android\") {\r\n      ToastAndroid.show(msg, ToastAndroid.LONG);\r\n    } else {\r\n      alert(msg);\r\n    }\r\n  };\r\n\r\n  const wallpaperImage = require(\"../../assets/images/bg1.jpg\");\r\n  const infoIcon = require(\"../../assets/icons/info.png\");\r\n\r\n  const handleLogin = async () => {\r\n    setErrorMessage(\"\");\r\n    setMessage(\"\");\r\n\r\n    if (!email) {\r\n      displayError(\"Por favor, pedimos que preencha pelo menos o seu email.\");\r\n      return;\r\n    }\r\n    if (!email.endsWith(\"@etps.com.pt\")) {\r\n      displayError(\"Pedimos que insira o seu email da escola.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (!password) {\r\n        const response = await axios.post(\r\n          sendCodeUrl,\r\n          { email },\r\n          { headers: { \"Content-Type\": \"application/json\" } }\r\n        );\r\n        const data = response.data;\r\n        if (data.success) {\r\n          navigation.navigate(\"VerificationScreen\", { email });\r\n        } else {\r\n          displayError(\r\n            data.message ||\r\n              \"Não conseguimos enviar o código de verificação. O que pode indicar que já tenha uma palavra-passe.\"\r\n          );\r\n        }\r\n      } else {\r\n        const response = await axios.post(\r\n          loginUrl,\r\n          { email, password, deviceType },\r\n          { headers: { \"Content-Type\": \"application/json\" } }\r\n        );\r\n        const data = response.data;\r\n        if (data.success) {\r\n          if (Platform.OS === \"web\") {\r\n            localStorage.setItem(\"userToken\", data.token);\r\n            localStorage.setItem(\"email\", data.email);\r\n            localStorage.setItem(\"userRole\", data.cargoUtilizador);\r\n          } else {\r\n            await SecureStore.setItemAsync(\"userToken\", data.token);\r\n            await SecureStore.setItemAsync(\"email\", data.email);\r\n            await SecureStore.setItemAsync(\"userRole\", data.cargoUtilizador);\r\n          }\r\n\r\n          switch (data.cargoUtilizador) {\r\n            case \"aluno\":\r\n              navigation.navigate(\"Aluno\", { email: data.email });\r\n              break;\r\n            case \"professor\":\r\n              navigation.navigate(\"Professor\", { email: data.email });\r\n              break;\r\n            case \"admin\":\r\n              navigation.navigate(\"Administrador\", { email: data.email });\r\n              break;\r\n            case \"auxiliar\":\r\n              navigation.navigate(\"auxiliarScreen\", { email: data.email });\r\n              break;\r\n          }\r\n        } else if (data.estado === \"pendente\") {\r\n          displayError(\r\n            \"Esta conta está pendente, para a ativar insira o código que enviamos para o seu email.\"\r\n          );\r\n        } else {\r\n          displayError(\r\n            data.message ||\r\n              \"Verifique se a palavra-passe está correta ou tente criar uma conta.\"\r\n          );\r\n        }\r\n      }\r\n    } catch {\r\n      displayError(\r\n        \"Houve um problema da nossa parte, pedimos que tente novamente mais tarde.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1500);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground source={wallpaperImage} style={styles.background}>\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={wallpaperImage} style={styles.background}>\r\n      <StatusBar\r\n        barStyle=\"dark-content\"\r\n        backgroundColor=\"transparent\"\r\n        translucent\r\n      />\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={[styles.box, { backgroundColor: \"#FFFFFF\" }]}>\r\n          {/* Cabeçalho com título + ícone info */}\r\n          <View style={styles.headerRow}>\r\n            <Text variant=\"headlineMedium\" style={styles.title}>\r\n              Iniciar sessão\r\n            </Text>\r\n            <TouchableOpacity onPress={() => setInfoVisible(true)}>\r\n              <Image source={infoIcon} style={styles.infoIcon} />\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <TextInput\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            placeholderTextColor=\"rgba(0,0,0,0.6)\"\r\n            theme={{\r\n              colors: {\r\n                primary: \"#47AD4D\",\r\n                background: \"#fff\",\r\n                text: \"#000\",\r\n              },\r\n            }}\r\n          />\r\n          <TextInput\r\n            label=\"Palavra-passe\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry={!isPasswordVisible}\r\n            mode=\"outlined\"\r\n            style={[styles.input, { marginTop: 10 }]}\r\n            placeholderTextColor=\"rgba(0,0,0,0.6)\"\r\n            theme={{\r\n              colors: {\r\n                primary: \"#47AD4D\",\r\n                background: \"#fff\",\r\n                text: \"#000\",\r\n              },\r\n            }}\r\n            right={\r\n                <TextInput.Icon\r\n                  icon={() => (\r\n                    <TouchableOpacity onPress={togglePasswordVisibility}>\r\n                      <Image\r\n                        source={\r\n                          isPasswordVisible\r\n                            ? require(\"../../assets/icons/eye-off.png\")\r\n                            : require(\"../../assets/icons/eye.png\")\r\n                        }\r\n                        style={styles.iconStyle}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                />\r\n            }\r\n          />\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleLogin}\r\n            style={styles.loginButton}\r\n            labelStyle={{ color: \"#fff\" }}\r\n          >\r\n            Iniciar sessão\r\n          </Button>\r\n          {errorMessage ? (\r\n            <HelperText type=\"error\" visible style={{ color: \"#B00020\" }}>\r\n              {errorMessage}\r\n            </HelperText>\r\n          ) : null}\r\n          {message ? (\r\n            <HelperText type=\"info\" visible style={{ color: \"#B00020\" }}>\r\n              {message}\r\n            </HelperText>\r\n          ) : null}\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={() => navigation.navigate(\"ForgetPasswordScreen\")}\r\n            labelStyle={{ color: \"#47AD4D\" }}\r\n            style={styles.link}\r\n          >\r\n            Esqueci-me da palavra-passe\r\n          </Button>\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => navigation.navigate(\"SignIn\")}\r\n            style={styles.signInButton}\r\n            labelStyle={{ color: \"#47AD4D\" }}\r\n          >\r\n            Criar uma conta\r\n          </Button>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n\r\n      {/* Modal de Informação */}\r\n      <Portal>\r\n        <Dialog\r\n          visible={infoVisible}\r\n          onDismiss={() => setInfoVisible(false)}\r\n          style={[\r\n            { backgroundColor: '#fff' },\r\n            Platform.OS === \"web\" ? styles.webDialog : undefined\r\n          ]}\r\n        >\r\n          <Dialog.Title>O que podes fazer aqui?</Dialog.Title>\r\n          <Dialog.Content>\r\n            <ScrollView\r\n              style={Platform.OS === \"web\" ? styles.webScroll : undefined}\r\n            >\r\n              <Paragraph>Aqui podes:</Paragraph>\r\n              <Paragraph>\r\n                • Iniciar sessão utilizando o teu email da escola\r\n                (@etps.com.pt) e a palavra‑passe que está associada.\r\n              </Paragraph>\r\n              <Paragraph>\r\n                • Recuperar a palavra‑passe em “Esqueci‑me da palavra‑passe”.\r\n              </Paragraph>\r\n              <Paragraph>\r\n                • Criar uma nova conta em “Criar uma conta”.\r\n              </Paragraph>\r\n            </ScrollView>\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setInfoVisible(false)} labelStyle={{ color: \"#47AD4D\" }}>OK</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    padding: 16,\r\n  },\r\n  box: {\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    alignItems: \"center\",\r\n  },\r\n  headerRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    marginBottom: 16,\r\n  },\r\n  title: { fontWeight: \"bold\", color: \"#000\" },\r\n  infoIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    resizeMode: \"contain\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n  },\r\n  loginButton: {\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  signInButton: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    borderColor: \"#47AD4D\",\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  loaderContainer: {\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconStyle: {\r\n    width: 24,\r\n    height: 24,\r\n    resizeMode: \"contain\",\r\n  },\r\n  webDialog: {\r\n    marginHorizontal: 20,\r\n  },\r\n  webScroll: {\r\n    maxHeight: 200,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;","import config from \"../../config/config_db\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ImageBackground, KeyboardAvoidingView, View, StyleSheet, ActivityIndicator, Image, Platform} from \"react-native\";\r\nimport { Text, TextInput, Button, HelperText } from \"react-native-paper\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport type { NavigationProp } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../../types\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\nconst UserDetailsPassword = () => {\r\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>(); \r\n  const route = useRoute<{ key: string; name: string; params: { email?: string; initialMessage?: string } }>();\r\n  const { email, initialMessage = \"\" } = route.params;\r\n\r\n  const url_password = `${config.baseUrl}/signInFiles/saveUserPassword.php`;\r\n\r\n  const [newPassword, setNewPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (initialMessage) {\r\n      setSuccess(initialMessage);\r\n      setTimeout(() => setSuccess(null), 2000);\r\n    }\r\n  }, [initialMessage]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!newPassword || !confirmPassword) {\r\n      setError(\"Por favor, pedimos que preencha todos os campos.\");\r\n      return;\r\n    }\r\n  \r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"As Palavra-passe não coincidem.\");\r\n      return;\r\n    }\r\n  \r\n    if (newPassword.length < 6) {\r\n      setError(\"A Palavra-passe deve ter pelo menos 6 caracteres.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    try {\r\n      const response = await fetch(url_password, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password: newPassword }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        const msg = data.message || \"A palavra‑passe foi associada à sua conta com sucesso!\";\r\n        if (Platform.OS !== \"web\") {\r\n          ToastAndroid.show(msg, ToastAndroid.LONG);\r\n          navigation.navigate(\"SelectTurma\", { email, initialMessage: \"\" });\r\n        }else {\r\n          window.alert(msg);\r\n          navigation.navigate(\"SelectTurma\", {email, initialMessage: msg });\r\n        }\r\n      } else {\r\n        setError(data.message || \"Ocorreu um erro enquanto tentavamos guardar a palavra-passe. Pedimos que tente novamente mais tarde.\");\r\n        if (Platform.OS !== \"web\") {\r\n          ToastAndroid.show(data.message || \"Erro ao guardar a palavra-passe.\", ToastAndroid.LONG);\r\n        } else {\r\n          window.alert(data.message || \"Erro ao guardar a palavra-passe.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError(\"Não foi possível conectar-se ao servidor. Tente novamente mais tarde.\");\r\n      if (Platform.OS !== \"web\") {\r\n        ToastAndroid.show(\"Não foi possível conectar-se ao servidor.\", ToastAndroid.LONG);\r\n      } else {\r\n        window.alert(\"Não foi possível conectar-se ao servidor.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n    if (loading) {\r\n      return (\r\n        <ImageBackground\r\n          source={require('../../assets/images/bg1.jpg')}\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n        </ImageBackground>\r\n      );\r\n    }\r\n  \r\n  return (\r\n    <ImageBackground source={require('../../assets/images/bg1.jpg')} style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      {success && (\r\n        <View style={styles.toastContainer}>\r\n          <View style={styles.toastBox}>\r\n            <Text style={styles.toastText}>{success}</Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n      <View style={styles.box}>\r\n        <Text variant=\"headlineMedium\" style={styles.title}>\r\n          Pedimos que defina uma Palavra-passe\r\n        </Text>\r\n        {error && <HelperText type=\"error\">{error}</HelperText>}\r\n        <TextInput\r\n          label=\"Palavra-passe\"\r\n          secureTextEntry={!isPasswordVisible}\r\n          style={styles.input}\r\n          value={newPassword}\r\n          onChangeText={setNewPassword}\r\n          mode=\"outlined\"\r\n          outlineColor=\"#47AD4D\"\r\n          activeOutlineColor=\"#47AD4D\"\r\n          right={\r\n            <TextInput.Icon\r\n              icon={() => (\r\n                <Image\r\n                  source={\r\n                    isPasswordVisible\r\n                      ? require(\"../../assets/icons/eye-off.png\")\r\n                      : require(\"../../assets/icons/eye.png\")\r\n                  }\r\n                  style={{ width: 24, height: 24 }}\r\n                />\r\n              )}\r\n              onPress={() => setIsPasswordVisible(!isPasswordVisible)}\r\n            />\r\n          }\r\n        />\r\n        <TextInput\r\n          label=\"Confirmar a palavra-passe\"\r\n          secureTextEntry={!isConfirmPasswordVisible}\r\n          style={styles.input}\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n          mode=\"outlined\"\r\n          outlineColor=\"#47AD4D\"\r\n          activeOutlineColor=\"#47AD4D\"\r\n          right={\r\n          <TextInput.Icon\r\n            icon={() => (\r\n              <Image\r\n                source={\r\n                  isConfirmPasswordVisible\r\n                    ? require(\"../../assets/icons/eye-off.png\")\r\n                    : require(\"../../assets/icons/eye.png\")\r\n                }\r\n                style={{ width: 24, height: 24 }}\r\n              />\r\n            )}\r\n            onPress={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)}\r\n          />\r\n          }\r\n        />\r\n        <Button mode=\"contained\" onPress={handleSubmit} style={styles.saveButton}>\r\n          Guardar Palavra-passe\r\n        </Button>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    padding: 16,\r\n  },\r\n  box: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    marginBottom: 16,\r\n    backgroundColor: \"white\",\r\n  },\r\n  saveButton: {\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  toastContainer: {\r\n    position: \"absolute\",\r\n    top: 16,\r\n    left: 16,\r\n    right: 16,\r\n    alignItems: \"center\",\r\n    zIndex: 10,\r\n  },\r\n  toastBox: {\r\n    backgroundColor: \"#47AD4D\",\r\n    borderRadius: 24,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    elevation: 5,                \r\n    shadowColor: \"#000\",         \r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n  },\r\n  toastText: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default UserDetailsPassword;","import config from \"../../config/config_db\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  StatusBar,\r\n  ImageBackground,\r\n  ActivityIndicator,\r\n  Platform,\r\n  Image,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  HelperText,\r\n  TextInput,\r\n  Button,\r\n  Portal,\r\n  Dialog,\r\n  Paragraph,\r\n} from \"react-native-paper\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RootStackParamList } from \"../../types\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\nconst SignInScreen = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n\r\n  const url_sendEmail = `${config.baseUrl}/signInFiles/sendEmail.php`;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n\r\n  const handleSignIn = async () => {\r\n    setErrorMessage(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    if (!email) {\r\n      setErrorMessage(\"Pedimos que coloque o seu email no campo.\");\r\n      return;\r\n    } else if (!email.includes(\"@etps.com.pt\")) {\r\n      setErrorMessage(\"Pedimos insira o seu email da escola.\");\r\n      return;\r\n    } else if (email.length < 6) {\r\n      setErrorMessage(\r\n        \"Para a sua segurança pedimos, insira um email com mais de 6 caracteres.\"\r\n      );\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        url_sendEmail,\r\n        { email },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      const data = response.data;\r\n      if (data.success) {\r\n        const msg = \"Enviamos um código de 6 digitos para o seu email, por isso, para ativar a conta insira-o no campo abaixo!\";\r\n        if (Platform.OS === \"android\") {\r\n          ToastAndroid.show(msg, ToastAndroid.LONG);\r\n        } else if (Platform.OS === \"web\") {\r\n          setSuccessMessage(msg);\r\n          setTimeout(() => setSuccessMessage(\"\"), 5000);\r\n        }\r\n        navigation.navigate(\"VerifyCode\", { email, initialMessage: msg });\r\n      } else {\r\n        setErrorMessage( data.message || \"Ocorreu um erro da nossa parte, pedimos que tente criar uma conta novamente mais tarde.\");\r\n        if (data.message === \"O email já existe.\") {\r\n          setErrorMessage( \"O seu email já existe na nossa base de dados! Por isso pedimos que inicie sessão.\");\r\n            if (Platform.OS === \"android\") {\r\n            ToastAndroid.show(\r\n              \"O seu email já existe na nossa base de dados! Por isso pedimos que inicie sessão.\",\r\n              ToastAndroid.LONG\r\n            );\r\n            } else if (Platform.OS === \"web\") {\r\n            setErrorMessage(\"O seu email já existe na nossa base de dados! Por isso pedimos que inicie sessão.\");\r\n            setTimeout(() => setErrorMessage(\"\"), 5000);\r\n            }\r\n          navigation.navigate(\"Login\");\r\n        }\r\n      }\r\n    } catch {\r\n      setErrorMessage(\r\n        \"Ocorreu um problem nos nossos servidores enquanto tentavamos criar uma conta para si. Pedimos que tente novamente mais tarde.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require(\"../../assets/images/bg1.jpg\")}\r\n        style={styles.bg}\r\n      >\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.bg}\r\n    >\r\n      <StatusBar\r\n        barStyle=\"dark-content\"\r\n        backgroundColor=\"transparent\"\r\n        translucent\r\n      />\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={styles.box}>\r\n          {/* Ícone de informação */}\r\n            <TouchableOpacity onPress={() => setInfoVisible(true)}>\r\n              <Image source={require(\"../../assets/icons/info.png\")} style={styles.infoIcon} />\r\n            </TouchableOpacity>\r\n\r\n          <Text variant=\"headlineMedium\" style={styles.title}>\r\n            Criar uma conta\r\n          </Text>\r\n\r\n          {errorMessage ? (\r\n            <HelperText type=\"error\" visible style={styles.errorText}>\r\n              {errorMessage}\r\n            </HelperText>\r\n          ) : null}\r\n          {successMessage ? (\r\n            <HelperText type=\"info\" visible style={styles.successText}>\r\n              {successMessage}\r\n            </HelperText>\r\n          ) : null}\r\n\r\n          <TextInput\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            outlineColor=\"#47AD4D\"\r\n            activeOutlineColor=\"#47AD4D\"\r\n          />\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleSignIn}\r\n            style={styles.registrarButton}\r\n            labelStyle={{ color: \"#fff\" }}\r\n          >\r\n            Enviar email\r\n          </Button>\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={() => navigation.navigate(\"Login\")}\r\n            style={styles.link}\r\n            labelStyle={{ color: \"#47AD4D\" }}\r\n          >\r\n            Já tem conta? Iniciar sessão\r\n          </Button>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n\r\n      {/* Dialog de informações */}\r\n      <Portal>\r\n        <Dialog\r\n          visible={infoVisible}\r\n          onDismiss={() => setInfoVisible(false)}\r\n          style={Platform.OS === \"web\" ? styles.webDialog : undefined}\r\n        >\r\n          <Dialog.Title>O que pode fazer aqui?</Dialog.Title>\r\n          <Dialog.Content>\r\n            <ScrollView\r\n              style={Platform.OS === \"web\" ? styles.webScroll : undefined}\r\n            >\r\n              <Paragraph>Aqui pode:</Paragraph>\r\n              <Paragraph>\r\n                • Criar uma conta de aluno que ficará pendente de aprovação de um administrador.\r\n              </Paragraph>\r\n              <Paragraph>\r\n                • Ter uma conta com o seu email da escola, colocando a sua palavra-passe e colocando a sua turma, tendo em conta que ficará automáticamente como 10º e a turma que escolher.\r\n              </Paragraph>\r\n            </ScrollView>\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setInfoVisible(false)}>OK</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  bg: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  box: {\r\n    position: \"relative\",\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    backgroundColor: \"white\",\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: \"center\"\r\n  },\r\n  infoIcon: {\r\n    position: \"absolute\",\r\n    top: -10,\r\n    right: -175,\r\n    width: 24,\r\n    height: 24\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#333\"\r\n  },\r\n  input: {\r\n    backgroundColor: \"#fff\",\r\n    width: \"100%\",\r\n    marginBottom: 10\r\n  },\r\n  registrarButton: {\r\n    width: \"100%\",\r\n    marginBottom: 8,\r\n    backgroundColor: \"#47AD4D\"\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    marginTop: 8\r\n  },\r\n  successText: {\r\n    color: \"green\"\r\n  },\r\n  errorText: {\r\n    color: \"red\"\r\n  },\r\n  webDialog: {\r\n    left: \"35%\",\r\n    width: \"80%\",\r\n    maxWidth: 400\r\n  },\r\n  webScroll: {\r\n    maxHeight: 200\r\n  }\r\n});\r\n\r\nexport default SignInScreen;","import config from \"../../config/config_db\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, KeyboardAvoidingView, ImageBackground, ActivityIndicator,TouchableOpacity, Platform} from \"react-native\";\r\nimport { Text, TextInput, Button, HelperText } from \"react-native-paper\";\r\nimport { RouteProp, useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RootStackParamList } from \"../../types\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\nconst VerifyCodeScreen = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const route = useRoute<RouteProp<RootStackParamList, 'VerifyCode'>>();\r\n  const { email, initialMessage = \"\" } = route.params;\r\n  \r\n\r\n  const url_validateCode = `${config.baseUrl}/signInFiles/validateCode.php`;\r\n  const url_sendEmail = `${config.baseUrl}/signInFiles/sendEmail.php`;\r\n\r\n  const [formData, setFormData] = useState({ email: \"\", code: \"\" });\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [successMessage, setSuccessMessage] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [resendCooldown, setResendCooldown] = useState<number>(0);    \r\n\r\n  useEffect(() => {\r\n    if (initialMessage) {\r\n      setSuccessMessage(initialMessage);\r\n      setTimeout(() => setSuccessMessage(\"\"), 2000);\r\n    }\r\n  }, [initialMessage]);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n    if (resendCooldown > 0) {\r\n      timer = setInterval(() => {\r\n        setResendCooldown(prev => {\r\n          if (prev <= 1) {\r\n            clearInterval(timer);\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [resendCooldown]);\r\n\r\n  const handleChange = (name: string, value: string) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleCodeSubmit = async () => {\r\n    if (!formData.code) {\r\n      setErrorMessage(\"Pedimos-lhe que insira o código que foi mandado para o seu email.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url_validateCode, { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify({ email: email, code: formData.code }),});\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        const msg = \"O código que inseriu foi verificado com sucesso, pedimos que coloque uma palavra‑passe!\";\r\n        if (Platform.OS !== \"web\") {\r\n          ToastAndroid.show(msg, ToastAndroid.LONG);\r\n          navigation.navigate(\"PutPassword\", { email: email, initialMessage: \"\" });\r\n        } else {\r\n          navigation.navigate(\"PutPassword\", { email: email, initialMessage: msg });\r\n        }\r\n      } else {\r\n        setErrorMessage( result.message || \"Ocorreu um erro da nossa parte ao tentar validar o código que você introduziu, pedimos que tente novamente mais tarde.\");\r\n      }\r\n    } catch {\r\n      setErrorMessage(\"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResendCode = async () => {\r\n    if (resendCooldown > 0) return;\r\n    setResendCooldown(60);\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url_sendEmail, { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify({ email: formData.email }), });\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        const msg = result.message || `Código enviado novamente para ${formData.email} com sucesso.`;\r\n        setSuccessMessage(msg);\r\n        if (Platform.OS !== \"web\") {\r\n          ToastAndroid.show(msg, ToastAndroid.LONG);\r\n        }\r\n        setTimeout(() => {\r\n          setSuccessMessage(\"\");\r\n        }, 5000);\r\n      } else {\r\n        setErrorMessage(result.message || \"Ocorreu um erro da nossa parte ao tentar enviar o código para o seu email. Pedimos que tente novamente mais tarde.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require('../../assets/images/bg1.jpg')}\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={require('../../assets/images/bg1.jpg')} style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        {successMessage !== \"\" && (\r\n          <View style={styles.toastContainer}>\r\n            <View style={styles.toastBox}>\r\n              <Text style={styles.toastText}>{successMessage}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n        <View style={styles.box}>\r\n          <Text variant=\"headlineMedium\" style={styles.title}>\r\n            Insira o código\r\n          </Text>\r\n          {errorMessage ? (\r\n            <View style={{ alignItems: \"center\" }}>\r\n              <HelperText \r\n                type=\"error\" \r\n                visible={!!errorMessage} \r\n                style={styles.errorText}\r\n              >\r\n                {errorMessage}\r\n              </HelperText>\r\n            </View>\r\n          ) : null}\r\n          <TextInput\r\n            label=\"Código\"\r\n            value={formData.code}\r\n            onChangeText={(text) => handleChange(\"code\", text)}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"number-pad\"\r\n            outlineColor=\"#47AD4D\"\r\n            activeOutlineColor=\"#47AD4D\"\r\n          />\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleCodeSubmit}\r\n            style={styles.verifyButton}\r\n            labelStyle={{ color: \"#fff\" }}\r\n          >\r\n            Verificar Código\r\n          </Button>\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={handleResendCode}\r\n            disabled={resendCooldown > 0}\r\n            style={styles.link}\r\n            labelStyle={{ color: \"#47AD4D\" }}\r\n          >\r\n            {resendCooldown > 0 ? `Reenviar o código (${resendCooldown} segundos)` : \"Reenviar o código\"}\r\n          </Button>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    padding: 16,\r\n  },\r\n  box: {\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    backgroundColor: \"white\",\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#333\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    marginBottom: 16,\r\n    backgroundColor: \"white\",\r\n  },\r\n  verifyButton: {\r\n    width: \"100%\",\r\n    marginBottom: 16,\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n  },\r\n  toastContainer: {\r\n    position: \"absolute\",\r\n    top: 16,\r\n    left: 16,\r\n    right: 16,\r\n    alignItems: \"center\",\r\n    zIndex: 10,\r\n  },\r\n  toastBox: {\r\n    backgroundColor: \"#47AD4D\",\r\n    borderRadius: 24,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    elevation: 5,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n  },\r\n  toastText: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default VerifyCodeScreen;","import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      overlay: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n})","// background.tsx\r\nimport React, { ReactNode } from \"react\";\r\nimport { ImageBackground, View } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\n\r\ninterface BackgroundProps {\r\n  source: { uri: string };\r\n  children: ReactNode;\r\n}\r\n\r\nexport function Background({ source, children }: BackgroundProps) {\r\n  return (\r\n    <ImageBackground source={source} style={styles.background}>\r\n      <View style={styles.overlay}>{children}</View>\r\n    </ImageBackground>\r\n  );\r\n}","import React from \"react\";\r\nimport { View, Text, Switch, StyleSheet } from \"react-native\";\r\n\r\ninterface ThemeToggleProps {\r\n  onToggle: () => void;\r\n  currentTheme: string;\r\n}\r\n\r\nconst ThemeToggle: React.FC<ThemeToggleProps> = ({ onToggle, currentTheme }) => {\r\n  // Se o tema for light, usamos cores escuras e vice-versa.\r\n  const dynamicTextColor = currentTheme === \"light\" ? \"#000\" : \"#FFF\";\r\n  const dynamicSwitchThumbColor = currentTheme === \"light\" ? \"#CCC\" : \"#CCC\";\r\n  const dynamicSwitchTrackColor = currentTheme === \"light\"\r\n    ? { false: \"#000\", true: \"#000\" }\r\n    : { false: \"#FFF\", true: \"#FFF\" };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={[styles.label, { color: dynamicTextColor }]}>\r\n        Mudar entre modo escuro e claro\r\n      </Text>\r\n      <Switch\r\n        value={currentTheme === \"dark\"}\r\n        onValueChange={onToggle}\r\n        thumbColor={dynamicSwitchThumbColor}\r\n        trackColor={dynamicSwitchTrackColor}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ThemeToggle;","import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n    overlay: {\r\n        flex: 1,\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      modal: {\r\n        backgroundColor: \"#fff\",\r\n        width: \"90%\",\r\n        borderRadius: 10,\r\n        padding: 20,\r\n        alignItems: \"center\",\r\n      },\r\n      title: {\r\n        fontSize: 22,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10,\r\n      },\r\n      subtitle: {\r\n        fontSize: 16,\r\n        marginVertical: 10,\r\n      },\r\n      thumbnailsContainer: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      thumbnailWrapper: {\r\n        marginHorizontal: 5,\r\n        borderRadius: 5,\r\n        borderWidth: 2,\r\n        borderColor: \"transparent\",\r\n      },\r\n      selectedWrapper: {\r\n        borderColor: \"#007bff\",\r\n      },\r\n      thumbnail: {\r\n        width: 60,\r\n        height: 100,\r\n        resizeMode: \"cover\",\r\n      },\r\n      previewContainer: {\r\n        alignItems: \"center\",\r\n        marginVertical: 10,\r\n      },\r\n      previewText: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 5,\r\n      },\r\n      previewImage: {\r\n        width: 200,\r\n        height: 350,\r\n        resizeMode: \"cover\",\r\n        borderRadius: 10,\r\n      },\r\n      buttonRow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n        marginTop: 20,\r\n      },\r\n})","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Modal,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Button, Text, useTheme } from \"react-native-paper\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst IMAGES = [\r\n  { id: \"1\", uri: require(\"../../assets/images/bg1.jpg\") },\r\n  { id: \"2\", uri: require(\"../../assets/images/bg2.jpg\") },\r\n  { id: \"3\", uri: require(\"../../assets/images/bg3.jpg\") },\r\n  { id: \"4\", uri: require(\"../../assets/images/bg4.jpg\") },\r\n  { id: \"5\", uri: require(\"../../assets/images/bg5.jpg\") },\r\n];\r\n\r\ninterface BackgroundPickerProps {\r\n  visible: boolean;\r\n  email: string;\r\n  onClose: () => void;\r\n  onSave: (imageUri: string) => void;\r\n}\r\n\r\nexport const BackgroundPicker: React.FC<BackgroundPickerProps> = ({\r\n  visible,\r\n  onClose,\r\n  onSave,\r\n}) => {\r\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\r\n  const { colors } = useTheme();\r\n\r\n  const pickImageFromGallery = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [9, 16],\r\n      quality: 1,\r\n    });\r\n    if (!result.canceled && result.assets && result.assets.length > 0) {\r\n      setSelectedImage(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedImage) {\r\n      onSave(selectedImage);\r\n    }\r\n    const message = \"Para ver o novo background, atualize a página!\";\r\n    if (Platform.OS === \"android\") {\r\n      const ToastAndroid = require(\"react-native\").ToastAndroid;\r\n      ToastAndroid.show(message, ToastAndroid.SHORT);\r\n    } else {\r\n      alert(message);\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\" transparent>\r\n      <View style={[styles.overlay, { backgroundColor: colors.backdrop }]}>\r\n        <View style={[styles.modal, { backgroundColor: colors.surface }]}>\r\n          <Text style={[styles.title, { color: colors.onSurface }]}>\r\n            Escolha um Background\r\n          </Text>\r\n\r\n          {selectedImage && (\r\n            <View style={styles.previewContainer}>\r\n              <Text style={[styles.previewText, { color: colors.onSurface }]}>\r\n                Pré-visualização:\r\n              </Text>\r\n              <Image\r\n                source={{ uri: selectedImage }}\r\n                style={styles.previewImage}\r\n              />\r\n            </View>\r\n          )}\r\n\r\n          <Text style={[styles.subtitle, { color: colors.onSurface }]}>\r\n            Selecione uma opção:\r\n          </Text>\r\n\r\n          <FlatList\r\n            data={IMAGES}\r\n            horizontal\r\n            keyExtractor={(item) => item.id}\r\n            renderItem={({ item }) => {\r\n              const assetSource = Image.resolveAssetSource(item.uri).uri;\r\n              return (\r\n                <TouchableOpacity\r\n                  onPress={() => setSelectedImage(assetSource)}\r\n                  style={[\r\n                    styles.thumbnailWrapper,\r\n                    selectedImage === assetSource && styles.selectedWrapper,\r\n                  ]}\r\n                >\r\n                  <Image source={item.uri} style={styles.thumbnail} />\r\n                </TouchableOpacity>\r\n              );\r\n            }}\r\n            contentContainerStyle={styles.thumbnailsContainer}\r\n          />\r\n\r\n          <View style={styles.buttonRow}>\r\n            <Button\r\n              mode=\"outlined\"\r\n              onPress={onClose}\r\n              labelStyle={{ color: colors.primary }}\r\n              style={{ borderColor: colors.primary }}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={pickImageFromGallery}\r\n              style={{ backgroundColor: colors.primary }}\r\n            >\r\n              Upload\r\n            </Button>\r\n\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={handleSave}\r\n              disabled={!selectedImage}\r\n              style={{\r\n                backgroundColor: selectedImage\r\n                  ? colors.primary\r\n                  : colors.onSurfaceDisabled,\r\n              }}\r\n            >\r\n              Salvar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n","// ThemeScreen.tsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Platform,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n  Modal,\r\n  Image,\r\n} from \"react-native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport * as FileSystem from \"expo-file-system\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport { Background } from \"../../../components/background\";\r\nimport ThemeToggle from \"../../../components/themeToggle\";\r\nimport { BackgroundPicker } from \"../../../components/backgroundPicker\";\r\nimport config from \"../../../config/config_db\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\n// Funções utilitárias para armazenamento\r\nconst storeItem = async (key: string, value: string) => {\r\n  if (Platform.OS === \"web\") {\r\n    localStorage.setItem(key, value);\r\n  } else {\r\n    await SecureStore.setItemAsync(key, value);\r\n  }\r\n};\r\n\r\n// Imagens padrões com mapeamento: caminho e fonte\r\nconst defaultImages = [\r\n  { path: \"bg1.jpg\", source: require(\"../../../assets/images/bg1.jpg\") },\r\n  { path: \"bg2.jpg\", source: require(\"../../../assets/images/bg2.jpg\") },\r\n  { path: \"bg3.jpg\", source: require(\"../../../assets/images/bg3.jpg\") },\r\n  { path: \"bg4.jpg\", source: require(\"../../../assets/images/bg4.jpg\") },\r\n  { path: \"bg5.jpg\", source: require(\"../../../assets/images/bg5.jpg\") },\r\n];\r\n\r\nconst ThemeScreen = () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const { email } = route.params as { email: string };\r\n\r\n  const [currentTheme, setCurrentTheme] = useState<\"light\" | \"dark\">(\"light\");\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  // URLs dos endpoints do backend\r\n  const changeBgUrl = `${config.baseUrl}/backgroundFiles/changeBackground.php`;\r\n  const getPersonalizationUrl = `${config.baseUrl}/backgroundFiles/getThemeAndBackground.php`;\r\n\r\n  // Busca personalização do backend\r\n  const fetchPersonalization = async () => {\r\n    try {\r\n      const response = await fetch(getPersonalizationUrl, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const json = await response.json();\r\n      if (json.success) {\r\n        const newTheme = json.tema_user === \"dark\" ? \"dark\" : \"light\";\r\n        setCurrentTheme(newTheme);\r\n        setBackgroundUrl(json.background_user);\r\n        await storeItem(\"userTheme\", newTheme);\r\n        await storeItem(\"backgroundUrl\", json.background_user);\r\n      } else {\r\n        console.log(\"Erro ao buscar personalização:\", json.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Erro ao buscar personalização:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPersonalization();\r\n  }, []);\r\n\r\n  // Converte imagem para base64 se necessário (apenas mobile)\r\n  const getImageAsBase64 = async (uri: string): Promise<string> => {\r\n    try {\r\n      const base64 = await FileSystem.readAsStringAsync(uri, { encoding: FileSystem.EncodingType.Base64 });\r\n      return `data:image/jpeg;base64,${base64}`;\r\n    } catch (error) {\r\n      console.error(\"Erro ao converter imagem para base64:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Atualiza a personalização no backend\r\n  const updatePersonalization = async (theme: \"light\" | \"dark\", background: string | null) => {\r\n    try {\r\n      let backgroundToSend = background || \"\";\r\n      if (Platform.OS !== \"web\" && background && background.startsWith(\"file:\")) {\r\n        backgroundToSend = await getImageAsBase64(background);\r\n      }\r\n      const response = await fetch(changeBgUrl, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email,\r\n          background_user: backgroundToSend,\r\n          tema_user: theme,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      console.log(\"Resposta de atualização:\", json);\r\n      if (json.success) {\r\n        setCurrentTheme(json.tema_user === \"dark\" ? \"dark\" : \"light\");\r\n        setBackgroundUrl(json.background_user);\r\n        await storeItem(\"userTheme\", json.tema_user);\r\n        await storeItem(\"backgroundUrl\", json.background_user);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao atualizar personalização:\", error);\r\n    }\r\n  };\r\n\r\n  const changeTheme = async (newTheme: \"light\" | \"dark\") => {\r\n    setCurrentTheme(newTheme);\r\n    await storeItem(\"userTheme\", newTheme);\r\n    updatePersonalization(newTheme, backgroundUrl);\r\n  };\r\n\r\n  const changeBackground = async (imageUri: string) => {\r\n    setBackgroundUrl(imageUri);\r\n    await storeItem(\"backgroundUrl\", imageUri);\r\n    updatePersonalization(currentTheme, imageUri);\r\n  };\r\n\r\n  const handleThemeToggle = () => {\r\n    const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\r\n    changeTheme(newTheme);\r\n  };\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        if (typeof reader.result === \"string\") {\r\n          setPreviewImage(reader.result);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const openFilePicker = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleSaveBackground = async () => {\r\n    if (previewImage) {\r\n      let finalImage = previewImage;\r\n      if (Platform.OS !== \"web\" && previewImage.startsWith(\"file:\")) {\r\n        try {\r\n          finalImage = await getImageAsBase64(previewImage);\r\n        } catch (error) {\r\n          console.error(\"Erro ao converter imagem para base64:\", error);\r\n        }\r\n      }\r\n      changeBackground(finalImage);\r\n      setModalVisible(false);\r\n      setPreviewImage(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelPreview = () => {\r\n    setPreviewImage(null);\r\n  };\r\n\r\n  // Exibe tela de loading enquanto carrega os dados\r\n  if (loading) {\r\n    let loadingBackground;\r\n    if (backgroundUrl) {\r\n      if (backgroundUrl.startsWith(\"data:\") || backgroundUrl.startsWith(\"http\")) {\r\n        loadingBackground = { uri: backgroundUrl };\r\n      } else {\r\n        const defaultBg = defaultImages.find(img => `assets/images/${img.path}` === backgroundUrl);\r\n        loadingBackground = defaultBg ? defaultBg.source : { uri: `${config.baseUrl}/${backgroundUrl}` };\r\n      }\r\n    } else {\r\n      loadingBackground = require(\"../../../assets/images/bg1.jpg\");\r\n    }\r\n    return (\r\n      <Background source={loadingBackground}>\r\n        <View style={styles.loadingWrapper}>\r\n          <View\r\n            style={[\r\n              styles.loadingContainer,\r\n              currentTheme === \"dark\" ? styles.loadingDark : styles.loadingLight,\r\n            ]}\r\n          >\r\n            <ActivityIndicator\r\n              size=\"large\"\r\n              color={currentTheme === \"dark\" ? \"#fff\" : \"#000\"}\r\n            />\r\n          </View>\r\n        </View>\r\n      </Background>\r\n    );\r\n  }\r\n\r\n\r\n  const resolvedBackground = (() => {\r\n    if (!backgroundUrl) return require(\"../../../assets/images/bg1.jpg\");\r\n    if (backgroundUrl.startsWith(\"data:\") || backgroundUrl.startsWith(\"http\")) {\r\n      return { uri: backgroundUrl };\r\n    }\r\n    const defaultMapping: { [key: string]: any } = {\r\n      \"assets/images/bg1.jpg\": require(\"../../../assets/images/bg1.jpg\"),\r\n      \"assets/images/bg2.jpg\": require(\"../../../assets/images/bg2.jpg\"),\r\n      \"assets/images/bg3.jpg\": require(\"../../../assets/images/bg3.jpg\"),\r\n      \"assets/images/bg4.jpg\": require(\"../../../assets/images/bg4.jpg\"),\r\n      \"assets/images/bg5.jpg\": require(\"../../../assets/images/bg5.jpg\"),\r\n    };\r\n    if (defaultMapping[backgroundUrl]) {\r\n      return defaultMapping[backgroundUrl];\r\n    }\r\n    return { uri: `${config.baseUrl}/${backgroundUrl}` };\r\n  })();\r\n\r\n  // Cores dinâmicas conforme o tema\r\n  const dynamicOverlayColor = currentTheme === \"dark\" ? \"rgba(0, 0, 0, 0.5)\" : \"transparent\";\r\n  const dynamicCardBackground = currentTheme === \"dark\" ? \"rgba(0, 0, 0, 0.5)\" : \"#f0f0f0\";\r\n  const dynamicTextColor = currentTheme === \"dark\" ? \"#fff\" : \"#000\";\r\n\r\n  // Estilos para o botão e seu texto de acordo com o tema\r\n  const buttonStyle = [\r\n    styles.button,\r\n    { backgroundColor: currentTheme === \"dark\" ? \"#333\" : \"#ccc\" },\r\n  ];\r\n  const buttonTextStyle = [\r\n    styles.buttonText,\r\n    { color: currentTheme === \"dark\" ? \"#fff\" : \"#000\" },\r\n  ];\r\n\r\n  // Modal para escolha do background (tratamento diferenciado para web vs mobile)\r\n  const renderBackgroundModal = () => {\r\n    if (Platform.OS === \"web\") {\r\n      return (\r\n        <Modal\r\n          visible={modalVisible}\r\n          transparent\r\n          animationType=\"fade\"\r\n          onRequestClose={() => {\r\n            setModalVisible(false);\r\n            setPreviewImage(null);\r\n          }}\r\n        >\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              {!previewImage ? (\r\n                <>\r\n                  <Text style={[styles.modalTitle, { color: dynamicTextColor }]}>\r\n                    Escolha um background\r\n                  </Text>\r\n                  <View style={styles.defaultImagesContainer}>\r\n                    {defaultImages.map((img, index) => (\r\n                      <TouchableOpacity\r\n                        key={index}\r\n                        onPress={() => setPreviewImage(`assets/images/${img.path}`)}\r\n                      >\r\n                        <Image source={img.source} style={styles.defaultImage} />\r\n                      </TouchableOpacity>\r\n                    ))}\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={buttonStyle}\r\n                    onPress={openFilePicker}\r\n                  >\r\n                    <Text style={buttonTextStyle}>Selecionar do Computador</Text>\r\n                  </TouchableOpacity>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileChange}\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  <TouchableOpacity\r\n                    style={styles.closeButton}\r\n                    onPress={() => setModalVisible(false)}\r\n                  >\r\n                    <Text style={{ color: dynamicTextColor }}>Fechar</Text>\r\n                  </TouchableOpacity>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Text style={[styles.modalTitle, { color: dynamicTextColor }]}>\r\n                    Preview do Background\r\n                  </Text>\r\n                  {previewImage.startsWith(\"assets/\") ? (\r\n                    <Image\r\n                      source={\r\n                        defaultImages.find(img => `assets/images/${img.path}` === previewImage)?.source\r\n                      }\r\n                      style={styles.previewImage}\r\n                    />\r\n                  ) : (\r\n                    <Image source={{ uri: previewImage }} style={styles.previewImage} />\r\n                  )}\r\n                  <View style={styles.previewButtonsContainer}>\r\n                    <TouchableOpacity\r\n                      style={buttonStyle}\r\n                      onPress={handleSaveBackground}\r\n                    >\r\n                      <Text style={buttonTextStyle}>Salvar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.cancelButton} onPress={handleCancelPreview}>\r\n                      <Text style={styles.cancelButtonText}>Cancelar</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      return (\r\n        <BackgroundPicker\r\n          visible={modalVisible}\r\n          email={email}\r\n          onClose={() => setModalVisible(false)}\r\n          onSave={(imageUri: string) => {\r\n            changeBackground(imageUri);\r\n            setModalVisible(false);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background source={resolvedBackground}>\r\n      {currentTheme === \"dark\" && (\r\n        <View\r\n          style={[styles.darkOverlay, { backgroundColor: dynamicOverlayColor }]}\r\n          pointerEvents=\"none\"\r\n        />\r\n      )}\r\n<View\r\n          style={{\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            zIndex: 10,\r\n            backgroundColor: currentTheme === \"dark\" ? \"rgba(0, 0, 0, 0.5)\" : \"rgba(255, 255, 255, 0.5)\",\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/angle-left.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                marginLeft: 3,\r\n                marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                tintColor: currentTheme === \"dark\" ? \"#fff\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/user.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 30 : 25,\r\n                height: Platform.OS === \"web\" ? 30 : 25,\r\n                marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                tintColor: currentTheme === \"dark\" ? \"#fff\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      <View style={styles.container}>\r\n        <View style={[styles.box, { backgroundColor: dynamicCardBackground }]}>\r\n          <Text style={[styles.title, { color: dynamicTextColor }]}>Personalize</Text>\r\n          <ThemeToggle onToggle={handleThemeToggle} currentTheme={currentTheme} />\r\n          <TouchableOpacity\r\n            style={buttonStyle}\r\n            onPress={() => {\r\n              setModalVisible(true);\r\n              setPreviewImage(null);\r\n            }}\r\n          >\r\n            <Text style={buttonTextStyle}>Mudar Background</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {renderBackgroundModal()}\r\n      <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={email}\r\n        />\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  darkOverlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n  backButton: {\r\n    position: \"absolute\",\r\n    top: 50,\r\n    left: 20,\r\n    zIndex: 10,\r\n    padding: 8,\r\n    borderRadius: 20,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 16,\r\n  },\r\n  box: {\r\n    padding: 20,\r\n    borderRadius: 15,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  loadingWrapper: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loadingContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  loadingDark: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  loadingLight: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContent: {\r\n    width: \"90%\",\r\n    maxWidth: 500,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n  },\r\n  defaultImagesContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 16,\r\n  },\r\n  defaultImage: {\r\n    width: 80,\r\n    height: 80,\r\n    margin: 5,\r\n    borderRadius: 10,\r\n  },\r\n  closeButton: {\r\n    marginTop: 10,\r\n  },\r\n  previewImage: {\r\n    width: 300,\r\n    height: 200,\r\n    resizeMode: \"cover\",\r\n    borderRadius: 10,\r\n    marginBottom: 16,\r\n  },\r\n  previewButtonsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    alignItems: \"center\",\r\n    marginLeft: 5,\r\n    backgroundColor: \"#ff0000\",\r\n  },\r\n  cancelButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ThemeScreen;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n  ImageBackground,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Image\r\n} from \"react-native\";\r\nimport { Text, List, useTheme } from \"react-native-paper\";\r\nimport { useRoute, RouteProp, useNavigation } from \"@react-navigation/native\";\r\nimport config from \"../../../config/config_db\";\r\nimport axios from \"axios\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\ntype RootStackParamList = {\r\n  ProximosEventos: { email: string };\r\n};\r\n\r\ntype PersonalDataScreenRouteProp = RouteProp<RootStackParamList, \"ProximosEventos\">;\r\n\r\nconst PersonalDataScreen = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n  const route = useRoute<PersonalDataScreenRouteProp>();\r\n  const { email } = route.params;\r\n\r\n  const url = `${config.baseUrl}/calendarioFiles/personalData/fetch_user_data.php`;\r\n\r\n  const [userData, setUserData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get(url, { params: { email } });\r\n        if (response.data?.success) {\r\n          // Aqui userData.professorData.disciplina já é o NOME da disciplina\r\n          setUserData(response.data.user);\r\n        } else {\r\n          console.log(\"Erro ao procurar dados do utilizador:\", response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro na requisição:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n        console.log(\"Erro ao carregar configurações.\", error);\r\n      }\r\n    };\r\n    loadSettings();\r\n  }, []);\r\n\r\n  const getLeftIcon = (iconName: string) => {\r\n    if (Platform.OS === \"web\") return undefined;\r\n    return (props: any) => <List.Icon {...props} icon={iconName} color=\"#47AD4D\" />;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../../assets/images/bg1.jpg\")\r\n        }\r\n        style={styles.flexCenter}\r\n      >\r\n        {userTheme === \"dark\" && <View style={styles.darkOverlay} />}\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require(\"../../../assets/images/bg1.jpg\")\r\n      }\r\n      style={styles.flexCenter}\r\n    >\r\n      {userTheme === \"dark\" && <View style={styles.darkOverlay} pointerEvents=\"none\" />}\r\n\r\n      {/* Header */}\r\n      <View style={styles.headerContainer}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/angle-left.png\")}\r\n            style={[\r\n              styles.icon,\r\n              {\r\n                tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n              }\r\n            ]}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => setAccountModalVisible(true)}\r\n          style={{ flex: 1, alignItems: \"flex-end\" }}\r\n        >\r\n          <Image\r\n            source={require(\"../../../assets/icons/user.png\")}\r\n            style={[\r\n              styles.icon,\r\n              {\r\n                tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n                width: Platform.OS === \"web\" ? 30 : 25,\r\n                height: Platform.OS === \"web\" ? 30 : 25,\r\n              }\r\n            ]}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.box}>\r\n        <List.Section>\r\n          {/* Email, Cargo, Data de Criação */}\r\n          <List.Item\r\n            title=\"Email\"\r\n            description={userData.email || \"-\"}\r\n            left={getLeftIcon(\"email\")}\r\n          />\r\n          <List.Item\r\n            title=\"Cargo\"\r\n            description={\r\n              userData.cargoUtilizador\r\n                ? userData.cargoUtilizador.charAt(0).toUpperCase() +\r\n                  userData.cargoUtilizador.slice(1)\r\n                : \"-\"\r\n            }\r\n            left={getLeftIcon(\"account\")}\r\n          />\r\n          <List.Item\r\n            title=\"Data de Criação\"\r\n            description={userData.data_criacao || \"-\"}\r\n            left={getLeftIcon(\"calendar\")}\r\n          />\r\n\r\n          {/* Se for aluno, mostra turma e ano */}\r\n          {userData.cargoUtilizador.toLowerCase() === \"aluno\" &&\r\n            userData.alunoData && (\r\n              <>\r\n                <List.Item\r\n                  title=\"Turma\"\r\n                  description={userData.alunoData.turma}\r\n                  left={getLeftIcon(\"school\")}\r\n                />\r\n                <List.Item\r\n                  title=\"Ano\"\r\n                  description={String(userData.alunoData.ano)}\r\n                  left={getLeftIcon(\"calendar\")}\r\n                />\r\n              </>\r\n            )}\r\n\r\n          {/* Se for professor, mostra NOME da disciplina e turmas */}\r\n          {userData.cargoUtilizador.toLowerCase() === \"professor\" &&\r\n            userData.professorData && (\r\n              <>\r\n                <List.Item\r\n                  title=\"Disciplina\"\r\n                  description={userData.professorData.disciplina || \"-\"}\r\n                  left={getLeftIcon(\"book\")}\r\n                />\r\n                <List.Subheader style={styles.subheader}>\r\n                  Turmas\r\n                </List.Subheader>\r\n                {userData.professorData.turmas.map(\r\n                  (turma: any, idx: number) => (\r\n                    <List.Item\r\n                      key={idx}\r\n                      title={`Turma: ${turma.turma}`}\r\n                      description={`Ano: ${turma.ano}`}\r\n                      left={getLeftIcon(\"school\")}\r\n                    />\r\n                  )\r\n                )}\r\n              </>\r\n            )}\r\n        </List.Section>\r\n      </View>\r\n\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  flexCenter: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  darkOverlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  headerContainer: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  icon: {\r\n    marginLeft: 3,\r\n    marginTop: 3,\r\n  },\r\n  box: {\r\n    backgroundColor: \"#FFF\",\r\n    margin: 20,\r\n    borderRadius: 15,\r\n    padding: 20,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n  },\r\n  subheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default PersonalDataScreen;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Image,\r\n  ImageBackground,\r\n  Alert,\r\n  FlatList,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  Snackbar,\r\n  Text,\r\n  List,\r\n  Divider,\r\n} from \"react-native-paper\";\r\nimport {\r\n  useRoute,\r\n  RouteProp,\r\n  useNavigation,\r\n} from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport config from \"../../../config/config_db\";\r\nimport axios from \"axios\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\ntype RootStackParamList = {\r\n  ProximosEventos: { email: string };\r\n  Aluno: undefined;\r\n};\r\ntype SugestAnythingScreenRouteProp = RouteProp<\r\n  RootStackParamList,\r\n  \"ProximosEventos\"\r\n>;\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\ninterface Suggestion {\r\n  id: string;\r\n  email: string;\r\n  message: string;\r\n  date_sent: string;\r\n  response?: string;\r\n  responder?: string;\r\n  date_response?: string;\r\n}\r\n\r\nconst SugestAnythingScreen: React.FC = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const route = useRoute<SugestAnythingScreenRouteProp>();\r\n  const { email } = route.params;\r\n\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(\"light\");\r\n\r\n  // estado do novo envio\r\n  const [suggestion, setSuggestion] = useState<string>(\"\");\r\n  const [loadingSubmit, setLoadingSubmit] = useState<boolean>(false);\r\n  const [snackbarMsg, setSnackbarMsg] = useState<string>(\"\");\r\n  const [snackbarVisible, setSnackbarVisible] = useState<boolean>(false);\r\n  // lista de sugestões já enviadas\r\n  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\r\n  const [loadingList, setLoadingList] = useState<boolean>(true);\r\n\r\n  const [accountModalVisible, setAccountModalVisible] = useState<boolean>(false);\r\n\r\n  // carregar background e tema\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) bg = `${config.baseUrl}/${bg}`;\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch {}\r\n    })();\r\n  }, []);\r\n\r\n  // busca sugestões do utilizador\r\n  const fetchSuggestions = async () => {\r\n    setLoadingList(true);\r\n    try {\r\n      const res = await axios.get(\r\n        `${config.baseUrl}/calendarioFiles/suggest/fetchUserSuggestion.php`,\r\n        { params: { email } }\r\n      );\r\n      if (res.data.success) {\r\n        setSuggestions(res.data.data);\r\n      } else {\r\n        Alert.alert(\"Erro\", res.data.message || \"Falha ao carregar sugestões\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert(\"Erro\", \"Não foi possível comunicar com o servidor.\");\r\n    } finally {\r\n      setLoadingList(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSuggestions();\r\n  }, []);\r\n\r\n  const confirmBack = () => {\r\n    if (Platform.OS === \"web\") {\r\n      if (window.confirm(\"Tem a certeza que deseja sair?\"))\r\n        navigation.navigate(\"Aluno\");\r\n    } else {\r\n      Alert.alert(\r\n        \"Confirmação\",\r\n        \"Tem a certeza que deseja sair?\",\r\n        [\r\n          { text: \"Cancelar\", style: \"cancel\" },\r\n          { text: \"Sim\", onPress: () => navigation.navigate(\"Aluno\") },\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!suggestion.trim()) {\r\n      setSnackbarMsg(\"Por favor, escreve alguma sugestão antes de enviar.\");\r\n      setSnackbarVisible(true);\r\n      return;\r\n    }\r\n    setLoadingSubmit(true);\r\n    try {\r\n      const res = await axios.post(\r\n        `${config.baseUrl}/calendarioFiles/suggest/submit_suggestion.php`,\r\n        { email, suggestion }\r\n      );\r\n      if (res.data.success) {\r\n        setSnackbarMsg(\"Sugestão enviada com sucesso!\");\r\n        setSuggestion(\"\");\r\n        await fetchSuggestions(); // refresca lista\r\n      } else {\r\n        setSnackbarMsg(res.data.message || \"Falha ao enviar.\");\r\n      }\r\n    } catch {\r\n      setSnackbarMsg(\"Falha ao enviar. Tenta de novo mais tarde.\");\r\n    } finally {\r\n      setLoadingSubmit(false);\r\n      setSnackbarVisible(true);\r\n    }\r\n  };\r\n\r\n  const renderSuggestion = ({ item }: { item: Suggestion }) => (\r\n    <View>\r\n      <List.Item\r\n        title={item.message}\r\n        description={() => (\r\n          <>\r\n            <Text>Enviado: {item.date_sent}</Text>\r\n            {item.response ? (\r\n              <Text>\r\n                Resposta ({item.responder} em {item.date_response}):{\" \"}\r\n                {item.response}\r\n              </Text>\r\n            ) : (\r\n              <Text style={{ fontStyle: \"italic\" }}>Sem resposta ainda</Text>\r\n            )}\r\n          </>\r\n        )}\r\n        left={props => <List.Icon {...props} icon=\"message-text-outline\" />}\r\n      />\r\n      <Divider />\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require(\"../../../assets/images/bg1.jpg\")\r\n      }\r\n      style={styles.background}\r\n      resizeMode=\"cover\"\r\n    >\r\n      <View style={styles.fullScreenContainer}>\r\n        {/* HEADER */}\r\n        <View\r\n          style={[\r\n            styles.header,\r\n            {\r\n              paddingTop:\r\n                Platform.OS === \"web\"\r\n                  ? 40\r\n                  : StatusBar.currentHeight || 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity onPress={confirmBack} style={{ flex: 1 }}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/angle-left.png\")}\r\n              style={[\r\n                styles.icon,\r\n                { tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\" },\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => setAccountModalVisible(true)}\r\n            style={{ flex: 1, alignItems: \"flex-end\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/icons/user.png\")}\r\n              style={[\r\n                styles.icon,\r\n                { tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\" },\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* FORMULÁRIO */}\r\n        <KeyboardAvoidingView\r\n          style={styles.container}\r\n          behavior={Platform.OS === \"ios\" ? \"padding\" : undefined}\r\n        >\r\n          <StatusBar\r\n            barStyle={theme.dark ? \"light-content\" : \"dark-content\"}\r\n            backgroundColor=\"transparent\"\r\n            translucent\r\n          />\r\n\r\n          <View style={styles.inner}>\r\n            <Text style={styles.label}>\r\n              Envia-nos uma sugestão de melhoria (email: {email})\r\n            </Text>\r\n            <TextInput\r\n              mode=\"outlined\"\r\n              label=\"A tua sugestão\"\r\n              placeholder=\"Ex.: Melhorar o layout do calendário...\"\r\n              value={suggestion}\r\n              onChangeText={setSuggestion}\r\n              multiline\r\n              numberOfLines={4}\r\n              style={styles.input}\r\n            />\r\n            {loadingSubmit ? (\r\n              <ActivityIndicator\r\n                animating\r\n                size=\"large\"\r\n                style={styles.loader}\r\n              />\r\n            ) : (\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={handleSubmit}\r\n                style={styles.button}\r\n              >\r\n                Enviar Sugestão\r\n              </Button>\r\n            )}\r\n          </View>\r\n\r\n          <Snackbar\r\n            visible={snackbarVisible}\r\n            onDismiss={() => setSnackbarVisible(false)}\r\n            duration={3000}\r\n          >\r\n            {snackbarMsg}\r\n          </Snackbar>\r\n\r\n          {/* LISTA DE SUGESTÕES */}\r\n          {loadingList ? (\r\n            <ActivityIndicator style={{ marginTop: 20 }} />\r\n          ) : (\r\n            <FlatList\r\n              data={suggestions}\r\n              keyExtractor={i => i.id}\r\n              renderItem={renderSuggestion}\r\n              style={styles.list}\r\n              contentContainerStyle={{ paddingBottom: 80 }}\r\n            />\r\n          )}\r\n        </KeyboardAvoidingView>\r\n\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={email}\r\n        />\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: { flex: 1 },\r\n  fullScreenContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  header: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  icon: {\r\n    width: Platform.OS === \"web\" ? 35 : 23,\r\n    height: Platform.OS === \"web\" ? 35 : 25,\r\n    marginLeft: 3,\r\n    marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 16,\r\n    paddingTop: 80,\r\n  },\r\n  inner: {\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    marginBottom: 8,\r\n  },\r\n  input: {\r\n    minHeight: 100,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  loader: {\r\n    marginVertical: 16,\r\n  },\r\n  list: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default SugestAnythingScreen;","import React, { useState, useEffect, useRef, useCallback, memo } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ImageBackground,\r\n  Platform\r\n} from \"react-native\";\r\nimport { useRoute, RouteProp, useNavigation } from \"@react-navigation/native\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport axios from \"axios\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport config from \"../../../config/config_db\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  PasswordAndSecurity: { email: string };\r\n};\r\n\r\ntype PasswordSecurityScreenRouteProp = RouteProp<\r\n  RootStackParamList,\r\n  \"PasswordAndSecurity\"\r\n>;\r\n\r\n// Componente de input de senha, memorizado para evitar re-renderizações desnecessárias.\r\ninterface PasswordInputProps {\r\n  value: string;\r\n  onChangeText: (text: string) => void;\r\n  placeholder: string;\r\n  secure: boolean;\r\n  toggleSecure: () => void;\r\n  userTheme: \"dark\" | \"light\";\r\n}\r\n\r\nconst PasswordInput = memo(\r\n  ({\r\n    value,\r\n    onChangeText,\r\n    placeholder,\r\n    secure,\r\n    toggleSecure,\r\n    userTheme,\r\n  }: PasswordInputProps) => {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.inputContainer,\r\n          { borderColor: userTheme === \"dark\" ? \"#fff\" : \"#000\" },\r\n        ]}\r\n      >\r\n        <TextInput\r\n          style={[\r\n            styles.textInput,\r\n            { color: userTheme === \"dark\" ? \"#fff\" : \"#000\" },\r\n          ]}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={userTheme === \"dark\" ? \"#aaa\" : \"#555\"}\r\n          secureTextEntry={secure}\r\n          value={value}\r\n          onChangeText={onChangeText}\r\n          blurOnSubmit={false}\r\n        />\r\n        <TouchableOpacity onPress={toggleSecure}>\r\n          <Ionicons\r\n            name={secure ? \"eye-off\" : \"eye\"}\r\n            size={20}\r\n            color={userTheme === \"dark\" ? \"#fff\" : \"#000\"}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n);\r\n\r\nPasswordInput.displayName = \"PasswordInput\";\r\n\r\n// Componente para exibir o timer, isolado para que só ele seja atualizado a cada segundo.\r\ninterface TimerTextProps {\r\n  timer: number;\r\n  userTheme: \"dark\" | \"light\";\r\n}\r\n\r\nconst TimerText = memo(({ timer, userTheme }: TimerTextProps) => (\r\n  <Text\r\n    style={[\r\n      styles.info,\r\n      userTheme === \"light\" ? { color: \"#000\" } : { color: \"#fff\" },\r\n    ]}\r\n  >\r\n    Insira a nova palavra-passe. Para garantirmos a sua segurança, dentro de um 1 minuto a sessão será encerrada (Ainda têm: {timer} segundos):\r\n  </Text>\r\n));\r\n\r\nTimerText.displayName = \"TimerText\";\r\n\r\nconst PasswordSecurityScreen = () => {\r\n  const route = useRoute<PasswordSecurityScreenRouteProp>();\r\n  const { email } = route.params;\r\n  const navigation = useNavigation();\r\n\r\n  const url_verifyPassword = `${config.baseUrl}/calendarioFiles/passwordAndSecurity/verify_password.php`;\r\n  const url_updatePassword = `${config.baseUrl}/calendarioFiles/passwordAndSecurity/update_password.php`;\r\n\r\n  // Estados para configurações do cliente\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"dark\" | \"light\">(\"light\");\r\n  const [settingsLoading, setSettingsLoading] = useState(true);\r\n\r\n  // Estados do fluxo da tela\r\n  const [step, setStep] = useState<\"verify\" | \"update\">(\"verify\");\r\n  const [currentPasswordInput, setCurrentPasswordInput] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Estados para mostrar/esconder senha\r\n  const [currentPasswordSecure, setCurrentPasswordSecure] = useState(true);\r\n  const [newPasswordSecure, setNewPasswordSecure] = useState(true);\r\n  const [confirmPasswordSecure, setConfirmPasswordSecure] = useState(true);\r\n\r\n  // Timer para a etapa \"update\" (em segundos)\r\n  const [timer, setTimer] = useState(60);\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Carregar configurações do cliente usando SecureStore\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        const bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n        setBackgroundUrl(bg);\r\n\r\n        const mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch{\r\n        console.log(\"Erro ao carregar configurações.\");\r\n      } finally {\r\n        setSettingsLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);\r\n\r\n  // Iniciar o timer quando a etapa for \"update\"\r\n  useEffect(() => {\r\n    if (step === \"update\") {\r\n      setTimer(60);\r\n      timerRef.current = setInterval(() => {\r\n        setTimer((prev) => prev - 1);\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [step]);\r\n\r\n  // Monitorar o timer para avisos e expiração\r\n  useEffect(() => {\r\n    if (step === \"update\") {\r\n      if (timer === 10) {\r\n        if (Platform.OS === \"web\") {\r\n          alert(\"A sessão expira em 10 segundos! Por favor, insira a nova palavra-passe ou cancele.\");\r\n        } else {\r\n          ToastAndroid.show(\r\n            \"A sessão expira em 10 segundos! Por favor, insira a nova palavra-passe ou cancele.\",\r\n            ToastAndroid.LONG\r\n          );\r\n        }\r\n      }\r\n      if (timer <= 0) {\r\n        if (Platform.OS === \"web\") {\r\n          alert(\"Sessão expirada. Por favor, verifique a palavra-passe atual novamente.\");\r\n        } else {\r\n          ToastAndroid.show(\r\n            \"Sessão expirada. Por favor, verifique a palavra-passe atual novamente.\",\r\n            ToastAndroid.LONG\r\n          );\r\n        }\r\n        setStep(\"verify\");\r\n        setCurrentPasswordInput(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n      }\r\n    }\r\n  }, [timer, step]);\r\n\r\n  // Funções para alternar a visibilidade da senha, memoizadas para não serem recriadas a cada renderização\r\n  const toggleCurrentPasswordSecure = useCallback(() => {\r\n    setCurrentPasswordSecure((prev) => !prev);\r\n  }, []);\r\n  const toggleNewPasswordSecure = useCallback(() => {\r\n    setNewPasswordSecure((prev) => !prev);\r\n  }, []);\r\n  const toggleConfirmPasswordSecure = useCallback(() => {\r\n    setConfirmPasswordSecure((prev) => !prev);\r\n  }, []);\r\n\r\n  // Função para verificar a palavra-passe atual\r\n  const verifyPassword = async () => {\r\n    if (!currentPasswordInput) {\r\n      if (Platform.OS === \"web\") {\r\n        alert(\"Por favor, insira a palavra-passe atual!\");\r\n      } else {\r\n        ToastAndroid.show(\r\n          \"Por favor, insira a palavra-passe atual!\",\r\n          ToastAndroid.LONG\r\n        );\r\n      }\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(url_verifyPassword, {\r\n        email,\r\n        password: currentPasswordInput,\r\n      });\r\n      if (response.data.success) {\r\n        setCurrentPasswordInput(\"\");\r\n        setStep(\"update\");\r\n      } else {\r\n        if (Platform.OS === \"web\") {\r\n          alert(response.data.message);\r\n        } else {\r\n          ToastAndroid.show(response.data.message, ToastAndroid.LONG);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (Platform.OS === \"web\") {\r\n        alert(\"Ocorreu um erro ao verificar a palavra-passe.\");\r\n      } else {\r\n        ToastAndroid.show(\r\n          \"Ocorreu um erro ao verificar a palavra-passe.\",\r\n          ToastAndroid.LONG\r\n        );\r\n      }\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para atualizar a palavra-passe\r\n  const updatePassword = async () => {\r\n    if (!newPassword || !confirmPassword) {\r\n      if (Platform.OS === \"web\") {\r\n        alert(\"Preencha todos os campos!\");\r\n      } else {\r\n        ToastAndroid.show(\"Preencha todos os campos!\", ToastAndroid.LONG);\r\n      }\r\n      return;\r\n    }\r\n    if (newPassword !== confirmPassword) {\r\n      if (Platform.OS === \"web\") {\r\n        alert(\"A nova palavra-passe e a confirmação não coincidem.\");\r\n      } else {\r\n        ToastAndroid.show(\r\n          \"A nova palavra-passe e a confirmação não coincidem.\",\r\n          ToastAndroid.LONG\r\n        );\r\n      }\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(url_updatePassword, {\r\n        email,\r\n        newPassword,\r\n      });\r\n      if (response.data.success === true) {\r\n        if (Platform.OS === \"web\") {\r\n          alert(\"A sua palavra-passe foi atualizada com sucesso.\");\r\n        } else {\r\n          ToastAndroid.show(\r\n            \"A sua palavra-passe foi atualizada com sucesso.\",\r\n            ToastAndroid.LONG\r\n          );\r\n        }\r\n        setStep(\"verify\");\r\n        setCurrentPasswordInput(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n      } else {\r\n        if (Platform.OS === \"web\") {\r\n          alert(response.data.message);\r\n        } else {\r\n          ToastAndroid.show(response.data.message, ToastAndroid.LONG);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (Platform.OS === \"web\") {\r\n        alert(\"Ocorreu um erro ao atualizar a palavra-passe. Pedimos que tente novamente mais tarde.\");\r\n      } else {\r\n        ToastAndroid.show(\r\n          \"Ocorreu um erro ao atualizar a palavra-passe. Pedimos que tente novamente mais tarde.\",\r\n          ToastAndroid.LONG\r\n        );\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    setStep(\"verify\");\r\n    setCurrentPasswordInput(\"\");\r\n    setNewPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        // Se for web, usamos localStorage; se não, usamos SecureStore\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        // Se o background existir e não começar com \"http\", concatenamos com o baseUrl\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n        console.log(\"Erro ao carregar configurações.\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);  \r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#e0dede\" : \"#000\";\r\n  if (loading) { \r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../../assets/images/bg1.jpg\")\r\n        }\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userTheme === \"dark\" && (\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              zIndex: 1,\r\n            }}\r\n          />\r\n        )}\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <ActivityIndicator size=\"large\" color={dynamicTextColor} />\r\n          <Text style={{ fontSize: 18, marginTop: 10, color: dynamicTextColor }}>\r\n            Carregando registros...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n  \r\n  \r\n\r\n  // Estilos condicionais conforme o tema\r\n  const boxStyle = [\r\n    styles.box,\r\n    userTheme === \"light\"\r\n      ? { backgroundColor: \"#f0f0f0\" }\r\n      : { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\r\n  ];\r\n  const titleStyle = [\r\n    styles.title,\r\n    userTheme === \"light\" ? { color: \"#000\" } : { color: \"#fff\" },\r\n  ];\r\n  const buttonStyle = [\r\n    styles.button,\r\n    { backgroundColor: userTheme === \"dark\" ? \"#333\" : \"#ccc\" },\r\n  ];\r\n  const cancelButtonStyle = [\r\n    styles.button,\r\n    { backgroundColor: userTheme === \"dark\" ? \"#630101\" : \"#f29d9d\" },\r\n  ];\r\n  const backIconColor = userTheme === \"light\" ? \"#000\" : \"#fff\";\r\n\r\n  return (\r\n    <ImageBackground\r\n    source={{ uri: backgroundUrl ? backgroundUrl : \"../../../assets/images/bg1.png\" }}\r\n    style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n  >\r\n      {userTheme === \"dark\" && (\r\n        <View style={styles.darkOverlay} pointerEvents=\"none\" />\r\n      )}\r\n\r\n      <TouchableOpacity\r\n        style={styles.backButton}\r\n        onPress={() => navigation.goBack()}\r\n      >\r\n        <Ionicons name=\"arrow-back\" size={24} color={backIconColor} />\r\n      </TouchableOpacity>\r\n\r\n      <View style={boxStyle}>\r\n        <Text style={titleStyle}>Palavra-passe e Segurança</Text>\r\n        {step === \"verify\" && (\r\n          <>\r\n            <Text\r\n              style={[\r\n                styles.info,\r\n                userTheme === \"light\" ? { color: \"#000\" } : { color: \"#fff\" },\r\n              ]}\r\n            >\r\n              Para garantir a sua segurança, insira a palavra-passe atual:\r\n            </Text>\r\n            <PasswordInput\r\n              value={currentPasswordInput}\r\n              onChangeText={setCurrentPasswordInput}\r\n              placeholder=\"Palavra-passe atual\"\r\n              secure={currentPasswordSecure}\r\n              toggleSecure={toggleCurrentPasswordSecure}\r\n              userTheme={userTheme}\r\n            />\r\n            <TouchableOpacity style={buttonStyle} onPress={verifyPassword}>\r\n              <Text\r\n                style={[\r\n                  styles.buttonText,\r\n                  userTheme === \"light\" ? { color: \"#000\" } : { color: \"#fff\" },\r\n                ]}\r\n              >\r\n                Verificar\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n\r\n        {step === \"update\" && (\r\n          <>\r\n            <TimerText timer={timer} userTheme={userTheme} />\r\n            <PasswordInput\r\n              value={newPassword}\r\n              onChangeText={setNewPassword}\r\n              placeholder=\"Nova palavra-passe\"\r\n              secure={newPasswordSecure}\r\n              toggleSecure={toggleNewPasswordSecure}\r\n              userTheme={userTheme}\r\n            />\r\n            <PasswordInput\r\n              value={confirmPassword}\r\n              onChangeText={setConfirmPassword}\r\n              placeholder=\"Confirme a nova palavra-passe\"\r\n              secure={confirmPasswordSecure}\r\n              toggleSecure={toggleConfirmPasswordSecure}\r\n              userTheme={userTheme}\r\n            />\r\n            <TouchableOpacity style={buttonStyle} onPress={updatePassword}>\r\n              <Text\r\n                style={[\r\n                  styles.buttonText,\r\n                  userTheme === \"light\" ? { color: \"#000\" } : { color: \"#fff\" },\r\n                ]}\r\n              >\r\n                Atualizar\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={cancelButtonStyle} onPress={cancelUpdate}>\r\n              <Text\r\n                style={[\r\n                  styles.buttonText,\r\n                  userTheme === \"light\" ? { color: \"#000\" } : { color: \"#fff\" },\r\n                ]}\r\n              >\r\n                Cancelar\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  darkOverlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  backButton: {\r\n    position: \"absolute\",\r\n    top: 50,\r\n    left: 20,\r\n    zIndex: 10,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n    padding: 8,\r\n    borderRadius: 20,\r\n  },\r\n  box: {\r\n    padding: 20,\r\n    borderRadius: 15,\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  info: {\r\n    fontSize: 16,\r\n    marginBottom: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    height: 45,\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    marginBottom: 16,\r\n  },\r\n  textInput: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n  },\r\n  button: {\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  loadingWrapper: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  // Caixa de loading menor\r\n  loadingContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    // Pode definir uma largura fixa se preferir, por exemplo: width: 150\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  // Estilos para temas\r\n  loadingDark: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  loadingLight: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  }\r\n});\r\n\r\nexport default PasswordSecurityScreen;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  ImageBackground,\r\n  Image,\r\n  Modal,\r\n  TextInput,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  FlatList,\r\n  Dimensions,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport { PieChart, LineChart } from \"react-native-chart-kit\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport { captureRef } from \"react-native-view-shot\";\r\nimport * as Print from \"expo-print\";\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nimport config from \"../../../config/config_db\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\n// ------------------------------\r\n// Tipos de Dados\r\n// ------------------------------\r\ninterface INota {\r\n  nota_id?: number;\r\n  disciplina_nome: string;\r\n  data_lancamento: string;\r\n  professor_email: string;\r\n  nota: string;\r\n  modulo?: string;\r\n}\r\n\r\ninterface IGroupedData {\r\n  name: string;\r\n  population: number;\r\n  color: string;\r\n  legendFontColor: string;\r\n  legendFontSize: number;\r\n  notes: INota[];\r\n}\r\n\r\ntype RootStackParamList = {\r\n  Notas: { email: string };\r\n};\r\n\r\ntype NotasScreenRouteProp = RouteProp<RootStackParamList, \"Notas\">;\r\n\r\n// Largura da tela para os gráficos\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\n\r\n// ------------------------------\r\n// Configuração dos Gráficos\r\n// ------------------------------\r\nconst chartConfig = (theme: any) => ({\r\n  backgroundGradientFrom: \"#fff\",\r\n  backgroundGradientFromOpacity: 0,\r\n  backgroundGradientTo: \"#fff\",\r\n  backgroundGradientToOpacity: 0.5,\r\n  color: (opacity = 1) =>\r\n    opacity === 1 ? \"#47AD4D\" : theme.colors.primary,\r\n  strokeWidth: 2,\r\n  barPercentage: 0.5,\r\n  useShadowColorFromDataset: false,\r\n});\r\n\r\n// ------------------------------\r\n// Funções Auxiliares – Cores, Hash e Estatísticas Gerais\r\n// ------------------------------\r\nconst getRandomColor = () => {\r\n  const letters = \"0123456789ABCDEF\";\r\n  let color = \"#\";\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\nconst hashCode = (str: string) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  return hash;\r\n};\r\n\r\nconst getDisciplineColor = (discipline: string, themeMode: \"light\" | \"dark\") => {\r\n  const hash = hashCode(discipline);\r\n  const hue = Math.abs(hash) % 360;\r\n  const saturation = themeMode === \"dark\" ? 90 : 50;\r\n  const lightness = themeMode === \"dark\" ? 50 : 70;\r\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n};\r\n\r\nconst groupNotesByDiscipline = (notes: INota[]) =>\r\n  notes.reduce((acc, nota) => {\r\n    const key = nota.disciplina_nome;\r\n    if (!acc[key]) acc[key] = [];\r\n    acc[key].push(nota);\r\n    return acc;\r\n  }, {} as Record<string, INota[]>);\r\n\r\nconst groupNotesByYear = (notes: INota[]) =>\r\n  notes.reduce((acc, nota) => {\r\n    const year = new Date(nota.data_lancamento).getFullYear();\r\n    if (!acc[year]) acc[year] = [];\r\n    acc[year].push(nota);\r\n    return acc;\r\n  }, {} as Record<number, INota[]>);\r\n\r\nconst calculateStats = (notes: INota[]) => {\r\n  const values = notes.map(n => parseFloat(n.nota));\r\n  const sum = values.reduce((a, b) => a + b, 0);\r\n  const avg = values.length ? sum / values.length : 0;\r\n  const min = Math.min(...values);\r\n  const max = Math.max(...values);\r\n  return { avg, min, max };\r\n};\r\n\r\nconst calculateMode = (notes: INota[]) => {\r\n  const freq: Record<string, number> = {};\r\n  let mode = \"\";\r\n  let maxCount = 0;\r\n  notes.forEach(n => {\r\n    const valor = n.nota;\r\n    freq[valor] = (freq[valor] || 0) + 1;\r\n    if (freq[valor] > maxCount) {\r\n      maxCount = freq[valor];\r\n      mode = valor;\r\n    }\r\n  });\r\n  return mode;\r\n};\r\n\r\n// Calcula o \"standout\" geral entre todas as notas – a nota com o maior desvio positivo e a com o maior desvio negativo, em relação à média geral.\r\nconst calculateGlobalStandout = (notes: INota[]) => {\r\n  if (notes.length === 0) return { positive: null, negative: null };\r\n  const { avg } = calculateStats(notes);\r\n  let globalPositive: INota | null = null;\r\n  let globalNegative: INota | null = null;\r\n  let maxPosDiff = 0;\r\n  let maxNegDiff = 0;\r\n  notes.forEach(n => {\r\n    const valor = parseFloat(n.nota);\r\n    const diff = valor - avg;\r\n    if (diff > maxPosDiff) {\r\n      maxPosDiff = diff;\r\n      globalPositive = n;\r\n    }\r\n    if (diff < maxNegDiff) {\r\n      maxNegDiff = diff;\r\n      globalNegative = n;\r\n    }\r\n  });\r\n  return { positive: globalPositive, negative: globalNegative };\r\n};\r\n\r\n// Estatísticas avançadas por disciplina – utiliza todas as notas da consulta PHP para a média global e por disciplina.\r\nconst computeAdvancedStatistics = (allNotas: INota[], filteredNotas: INota[]) => {\r\n  const disciplineGroupsAll = groupNotesByDiscipline(allNotas);\r\n  const disciplineGroupsFiltered = groupNotesByDiscipline(filteredNotas);\r\n  const disciplineStats: {\r\n    [discipline: string]: {\r\n      overallAvg: number;\r\n      filteredAvg: number;\r\n      percentageChange: number;\r\n      highestFiltered: number;\r\n      lowestFiltered: number;\r\n      notesOrdered?: INota[];\r\n    };\r\n  } = {};\r\n\r\n  for (const discipline in disciplineGroupsFiltered) {\r\n    // Aqui a média global é calculada com todas as notas da disciplina (allNotas)\r\n    const overallStats = calculateStats(disciplineGroupsAll[discipline] || []);\r\n    // A média da disciplina filtrada é calculada com os dados filtrados (p.ex.: por período ou outra opção)\r\n    const filteredStats = calculateStats(disciplineGroupsFiltered[discipline] || []);\r\n    const percentageChange = overallStats.avg > 0\r\n      ? ((filteredStats.avg - overallStats.avg) / overallStats.avg) * 100\r\n      : 0;\r\n    const notesOrdered = [...(disciplineGroupsFiltered[discipline] || [])].sort(\r\n      (a, b) =>\r\n        new Date(a.data_lancamento).getTime() -\r\n        new Date(b.data_lancamento).getTime()\r\n    );\r\n    disciplineStats[discipline] = {\r\n      overallAvg: overallStats.avg,\r\n      filteredAvg: filteredStats.avg,\r\n      percentageChange,\r\n      highestFiltered: filteredStats.max,\r\n      lowestFiltered: filteredStats.min,\r\n      notesOrdered,\r\n    };\r\n  }\r\n\r\n  let highestIncrease: { discipline: string; percentageChange: number } | null = null;\r\n  let highestDecline: { discipline: string; percentageChange: number } | null = null;\r\n  for (const discipline in disciplineStats) {\r\n    const stat = disciplineStats[discipline];\r\n    if (stat.percentageChange >= 0) {\r\n      if (!highestIncrease || stat.percentageChange > highestIncrease.percentageChange) {\r\n        highestIncrease = { discipline, percentageChange: stat.percentageChange };\r\n      }\r\n    } else {\r\n      if (!highestDecline || stat.percentageChange < highestDecline.percentageChange) {\r\n        highestDecline = { discipline, percentageChange: stat.percentageChange };\r\n      }\r\n    }\r\n  }\r\n\r\n  return { disciplineStats, highestIncrease, highestDecline };\r\n};\r\n\r\n//////////////////////////////////////////////\r\n// Componente Principal – NotasScreen\r\n//////////////////////////////////////////////\r\nconst NotasScreen = ({ navigation }: { navigation: any }) => {\r\n  const route = useRoute<NotasScreenRouteProp>();\r\n  const { email } = route.params;\r\n  const theme = useTheme();\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [loadingBg, setLoadingBg] = useState<boolean>(true);\r\n\r\n  // Estados das notas e modo de visualização\r\n  const [allNotas, setAllNotas] = useState<INota[]>([]);\r\n  const [notas, setNotas] = useState<INota[]>([]);\r\n  const [viewMode, setViewMode] = useState<\"chart\" | \"list\" | \"stats\">(\"chart\");\r\n  const [chartType, setChartType] = useState<\"bar\" | \"pie\" | \"line\">(\"bar\");\r\n\r\n  // Estados para filtros de estatísticas\r\n  const [selectedDisciplineFilter, setSelectedDisciplineFilter] = useState<string>(\"\");\r\n  const [dateInicio, setDateInicio] = useState<Date | null>(null);\r\n  const [dateFim, setDateFim] = useState<Date | null>(null);\r\n  const [showStatsFilter, setShowStatsFilter] = useState(false);\r\n  const [showPickerInicio, setShowPickerInicio] = useState(false);\r\n  const [showPickerFim, setShowPickerFim] = useState(false);\r\n  const [disciplineOptions, setDisciplineOptions] = useState<string[]>([]);\r\n\r\n  // Outros estados – modais, detalhes e configurações do utilizador\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n  const [selectedNote, setSelectedNote] = useState<INota | null>(null);\r\n  const [selectedDiscipline, setSelectedDiscipline] = useState<IGroupedData | null>(null);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  const pdfChartRef = useRef<View>(null);\r\n\r\n  // Carrega configurações (background e tema)\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n      } finally {\r\n        setLoadingBg(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);\r\n\r\n  // Busca as notas via API\r\n  const url_fetchNotes = `${config.baseUrl}/calendarioFiles/fetch_notes.php`;\r\n  const fetchNotas = async () => {\r\n    try {\r\n      const response = await fetch(url_fetchNotes, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const json = await response.json();\r\n      let fetchedNotas: INota[] = [];\r\n      if (Array.isArray(json)) {\r\n        fetchedNotas = json;\r\n      } else if (json.notas) {\r\n        fetchedNotas = json.notas;\r\n      }\r\n      setAllNotas(fetchedNotas);\r\n      setNotas(fetchedNotas);\r\n      const disciplines = Array.from(new Set(fetchedNotas.map(nota => nota.disciplina_nome)));\r\n      setDisciplineOptions(disciplines);\r\n    } catch (error) {\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchNotas();\r\n  }, []);\r\n\r\n  // Filtra as notas conforme os filtros aplicados (sem módulo)\r\n  const getFilteredStatsNotas = () => {\r\n    return allNotas.filter((nota) => {\r\n      let valid = true;\r\n      if (selectedDisciplineFilter.trim()) {\r\n        valid = valid && nota.disciplina_nome === selectedDisciplineFilter;\r\n      }\r\n      if (dateInicio) {\r\n        valid = valid && new Date(nota.data_lancamento) >= dateInicio;\r\n      }\r\n      if (dateFim) {\r\n        valid = valid && new Date(nota.data_lancamento) <= dateFim;\r\n      }\r\n      return valid;\r\n    });\r\n  };\r\n\r\n  // Componente para gerar o PDF – Diferencia o comportamento para \"Bar\" e \"Line\"\r\n  // Nota: Não gera PDF para \"Pie\" (botão oculto para este caso)\r\n  const PdfChartLight = () => {\r\n    const filtrosAplicados: string[] = [];\r\n    if (selectedDisciplineFilter.trim()) filtrosAplicados.push(`Disciplina: ${selectedDisciplineFilter}`);\r\n    if (dateInicio) filtrosAplicados.push(`Data Início: ${dateInicio.toISOString().split(\"T\")[0]}`);\r\n    if (dateFim) filtrosAplicados.push(`Data Fim: ${dateFim.toISOString().split(\"T\")[0]}`);\r\n    const filtroMsg = filtrosAplicados.length ? `Filtro - ${filtrosAplicados.join(\", \")}` : \"\";\r\n\r\n    if (chartType === \"bar\") {\r\n      return (\r\n        <View style={[styles.chartWrapper, { backgroundColor: \"#f0f0f0\", padding: 5 }]}>\r\n          <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n            {notas.map((item, index) => {\r\n              const noteValue = parseFloat(item.nota);\r\n              const barHeight = (noteValue / 20) * 200;\r\n              return (\r\n                <View key={index.toString()} style={[styles.barContainer, { width: 40, marginHorizontal: 4 }]}>\r\n                  <View style={[styles.barWrapper, { height: 200 }]}>\r\n                    <View style={[styles.bar, { height: barHeight, backgroundColor: \"rgba(71, 173, 77, 0.8)\" }]}>\r\n                      <Text style={[styles.barValue, { fontSize: 10, color: \"#000\" }]}>{item.nota}</Text>\r\n                    </View>\r\n                  </View>\r\n                  <Text style={[styles.barLabel, { fontSize: 10, color: \"#000\" }]} numberOfLines={1} ellipsizeMode=\"tail\">\r\n                    {item.disciplina_nome}\r\n                  </Text>\r\n                </View>\r\n              );\r\n            })}\r\n          </ScrollView>\r\n          {filtroMsg ? <Text style={{ fontSize: 10, color: \"#000\", marginTop: 4 }}>{filtroMsg}</Text> : null}\r\n        </View>\r\n      );\r\n    } else if (chartType === \"line\") {\r\n      const sortedNotas = [...notas].sort(\r\n        (a, b) => new Date(a.data_lancamento).getTime() - new Date(b.data_lancamento).getTime()\r\n      );\r\n      const labels = sortedNotas.map((n) => {\r\n        return new Date(n.data_lancamento).toLocaleDateString();\r\n      });\r\n      \r\n      const dataPoints = sortedNotas.map((n) => parseFloat(n.nota));\r\n      return (\r\n        <View style={[styles.chartWrapper, { backgroundColor: \"#FFF\", padding: 5 }]}>\r\n          <LineChart\r\n            data={{\r\n              labels,\r\n              datasets: [{ data: dataPoints, color: () => \"#000\" }],\r\n            }}\r\n            width={screenWidth * 0.9}\r\n            height={220}\r\n            fromZero={true}\r\n            chartConfig={{\r\n              backgroundGradientFrom: \"#FFF\",\r\n              backgroundGradientTo: \"#FFF\",\r\n              color: () => \"#000\",\r\n              strokeWidth: 2,\r\n              decimalPlaces: 0,\r\n              propsForDots: { r: \"3\", strokeWidth: \"1\", stroke: \"#000\" },\r\n              propsForBackgroundLines: { stroke: \"#e3e3e3\" },\r\n              propsForLabels: { fill: \"#000\" },\r\n            }}\r\n            bezier\r\n          />\r\n          {filtroMsg ? <Text style={{ fontSize: 10, color: \"#000\", marginTop: 4 }}>{filtroMsg}</Text> : null}\r\n        </View>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Geração do PDF – Integra imagem do gráfico e informações gerais\r\n  const generatePdf = async () => {\r\n    try {\r\n      const uri = await captureRef(pdfChartRef, {\r\n        format: \"png\",\r\n        quality: 1,\r\n        result: \"base64\",\r\n      });\r\n      const overallStats = calculateStats(allNotas);\r\n      const overallMode = calculateMode(allNotas);\r\n      const globalStandout = calculateGlobalStandout(allNotas);\r\n      const currentDate = new Date();\r\n      const formattedDate = `${(\"0\" + currentDate.getDate()).slice(-2)}-${(\r\n        \"0\" + (currentDate.getMonth() + 1)\r\n      ).slice(-2)}-${currentDate.getFullYear()} ${(\"0\" + currentDate.getHours()).slice(-2)}:${(\r\n        \"0\" + currentDate.getMinutes()\r\n      ).slice(-2)}`;\r\n      \r\n      const generateDisciplineNoteTable = () => {\r\n        if (allNotas.length === 0) return \"\";\r\n        return `\r\n          <table style=\"width:100%; border-collapse: collapse; font-family: sans-serif; font-size: 10px;\">\r\n            <tr>\r\n              <th style=\"border: 1px solid #ccc; padding: 2px;\">Disciplina</th>\r\n              <th style=\"border: 1px solid #ccc; padding: 2px;\">Nota</th>\r\n            </tr>\r\n            ${allNotas\r\n              .map(\r\n                (nota) => `\r\n              <tr>\r\n                <td style=\"border: 1px solid #ccc; padding: 2px;\">${nota.disciplina_nome}</td>\r\n                <td style=\"border: 1px solid #ccc; padding: 2px;\">${nota.nota}</td>\r\n              </tr>\r\n            `\r\n              )\r\n              .join(\"\")}\r\n          </table>\r\n        `;\r\n      };\r\n\r\n      const disciplineNoteTable = generateDisciplineNoteTable();\r\n\r\n      const html = `\r\n        <html>\r\n          <head>\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n            <style>\r\n              @page { margin: 0; }\r\n              body { margin: 0; padding: 0; font-family: sans-serif; background: #FFF; }\r\n              header { position: fixed; top: 0; left: 0; right: 0; height: 60px; background: #FFF; border-bottom: 1px solid #ccc; display: flex; align-items: center; padding: 0 20px; z-index: 1000; }\r\n              header img { height: 40px; }\r\n              header h1 { flex: 1; text-align: center; font-size: 18px; margin: 0; }\r\n              footer { position: fixed; bottom: 0; left: 0; right: 0; height: 40px; background: #FFF; border-top: 1px solid #ccc; padding-top: 4px; text-align: center; font-size: 12px; color: #000; z-index: 1000; }\r\n              main { margin-top: 70px; margin-bottom: 50px; padding: 10px; }\r\n              .chart-img { width: 100%; }\r\n              .section-title { font-size: 16px; color: #000; margin: 10px 0 5px; }\r\n              table, th, td { border: 1px solid #ccc; border-collapse: collapse; }\r\n              th, td { padding: 8px; text-align: left; }\r\n              .bar-chart { display: flex; flex-wrap: wrap; }\r\n              .bar-column { width: 8%; min-width: 30px; margin: 4px; text-align: center; }\r\n              .bar { width: 100%; background-color: rgba(71,173,77,0.8); }\r\n            </style>\r\n          </head>\r\n          <body>\r\n            <header>\r\n              <img src=\"https://etps.pt/images/upload/630cb87edab43698c0a0e5f5678403d4.png\" alt=\"Logo\" />\r\n              <h1>Resumo das Notas do Utilizador</h1>\r\n            </header>\r\n            <main>\r\n              ${chartType === \"bar\" ? `\r\n              <div class=\"section-title\">Gráfico de Barras</div>\r\n              <div class=\"bar-chart\">\r\n                ${notas.map((item) => {\r\n                  const noteValue = parseFloat(item.nota);\r\n                  const barHeight = (noteValue / 20) * 100;\r\n                  return `<div class=\"bar-column\">\r\n                    <div class=\"bar\" style=\"height: ${barHeight}px;\"></div>\r\n                    <div style=\"font-size:8px;\">${item.disciplina_nome}</div>\r\n                    <div style=\"font-size:8px;\">${item.nota}</div>\r\n                  </div>`;\r\n                }).join('')}\r\n              </div>\r\n              ` : `\r\n              <div class=\"section-title\">Gráfico de Linha</div>\r\n              <img class=\"chart-img\" src=\"data:image/png;base64,${uri}\" />\r\n              `}\r\n              <div class=\"section-title\">Estatísticas Gerais</div>\r\n              <p>Média Geral: ${overallStats.avg.toFixed(2)}</p>\r\n              <p>Nota Máxima: ${overallStats.max.toFixed(2)}</p>\r\n              <p>Moda: ${overallMode}</p>\r\n              <p>\r\n                ${globalStandout.positive ? `Nota que mais se destaca positivamente: ${globalStandout.positive.nota}` : \"N/A\"}\r\n                &nbsp;|&nbsp;\r\n                ${globalStandout.negative ? `Nota que mais se destaca negativamente: ${globalStandout.negative.nota}` : \"N/A\"}\r\n              </p>\r\n              <div class=\"section-title\">Tabela Resumida – Disciplina e Nota</div>\r\n              ${disciplineNoteTable}\r\n            </main>\r\n            <footer>\r\n              Este documento contém dados e análises avançadas sobre as notas do ${email} emitido em ${formattedDate}.\r\n            </footer>\r\n          </body>\r\n        </html>\r\n      `;\r\n      await Print.printAsync({ html });\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  // Componente para o gráfico de linha de cada disciplina (na tela)\r\n  const DisciplineLineChart = ({ notes, percentageChange }: { notes: INota[]; percentageChange: number; }) => {\r\n    if (notes.length < 2) {\r\n      return <Text style={{ color: userTheme === \"dark\" ? \"#FFF\" : \"#000\", marginVertical: 8 }}>Dados insuficientes para exibir evolução.</Text>;\r\n    }\r\n    const labels = notes.map((n, i) => {\r\n      const baseDate = new Date(n.data_lancamento).toLocaleDateString();\r\n      return i % 2 === 1 ? `${baseDate}\\n` : baseDate;\r\n    });\r\n    const dataPoints = notes.map(n => parseFloat(n.nota));\r\n    const lineColor = percentageChange >= 0 ? \"#47AD4D\" : \"#dc3545\";\r\n    const dynamicChartWidth = Math.max(screenWidth * 0.9, labels.length * 80);\r\n    return (\r\n      <ScrollView horizontal contentContainerStyle={{ paddingBottom: 10 }}>\r\n        <LineChart\r\n          data={{\r\n            labels,\r\n            datasets: [{ data: dataPoints, color: () => lineColor }],\r\n          }}\r\n          width={dynamicChartWidth}\r\n          height={220}\r\n          fromZero={true}\r\n          chartConfig={{\r\n            backgroundGradientFrom: userTheme === \"dark\" ? \"#000\" : \"#FFF\",\r\n            backgroundGradientTo: userTheme === \"dark\" ? \"#000\" : \"#FFF\",\r\n            color: () => lineColor,\r\n            strokeWidth: 2,\r\n            decimalPlaces: 2,\r\n            propsForDots: { r: \"4\", strokeWidth: \"2\", stroke: lineColor },\r\n            propsForBackgroundLines: { stroke: userTheme === \"dark\" ? \"#424242\" : \"#e3e3e3\" },\r\n            propsForLabels: { fill: userTheme === \"dark\" ? \"#FFF\" : \"#000\" },\r\n          }}\r\n          bezier\r\n          style={{ marginVertical: 8, borderRadius: 16 }}\r\n          onDataPointClick={(data) => {\r\n            const index = data.index;\r\n            const note = notes[index];\r\n            setSelectedNote(note);\r\n            setShowDetailsModal(true);\r\n          }}\r\n        />\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n  // Renderização dos gráficos na tela\r\n  const renderBarChart = () => (\r\n    <View>\r\n      <View style={[\r\n        styles.chartWrapper,\r\n        { backgroundColor: userTheme === \"dark\" ? \"rgba(0, 0, 0, 0.5)\" : \"#f0f0f0\" },\r\n      ]}>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.chartContent}>\r\n          {notas.map((item, index) => {\r\n            const noteValue = parseFloat(item.nota);\r\n            const barHeight = (noteValue / 20) * 350;\r\n            return (\r\n              <TouchableOpacity\r\n                key={index.toString()}\r\n                style={styles.barContainer}\r\n                onPress={() => {\r\n                  setSelectedNote(item);\r\n                  setShowDetailsModal(true);\r\n                }}\r\n              >\r\n                <View style={styles.barWrapper}>\r\n                  <View style={[styles.bar, {\r\n                    height: barHeight,\r\n                    backgroundColor: userTheme === \"dark\" ? \"#47AD4D\" : \"rgba(71, 173, 77, 0.8)\"\r\n                  }]}>\r\n                    <Text style={[styles.barValue, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{item.nota}</Text>\r\n                  </View>\r\n                </View>\r\n                <Text style={[styles.barLabel, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]} numberOfLines={1} ellipsizeMode=\"tail\">\r\n                  {item.disciplina_nome}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <TouchableOpacity onPress={generatePdf} style={[styles.pdfButton, { backgroundColor: \"#47AD4D\" }]}>\r\n        <Text style={styles.pdfButtonText}>Gerar PDF</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  const renderPieChart = () => {\r\n    const grouped = notas.reduce((acc, nota) => {\r\n      const key = nota.disciplina_nome;\r\n      if (!acc[key]) {\r\n        acc[key] = {\r\n          name: nota.disciplina_nome,\r\n          population: 0,\r\n          color: getDisciplineColor(nota.disciplina_nome, userTheme),\r\n          legendFontColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\",\r\n          legendFontSize: 12,\r\n          notes: [],\r\n        };\r\n      }\r\n      acc[key].population += 1;\r\n      acc[key].notes.push(nota);\r\n      return acc;\r\n    }, {} as Record<string, IGroupedData>);\r\n    const pieData = Object.values(grouped);\r\n    const chartBg = userTheme === \"dark\" ? \"rgba(0, 0, 0, 0.5)\" : \"#FFF\";\r\n    return (\r\n      <View>\r\n        <View style={[styles.chartWrapper, { backgroundColor: chartBg }]}>\r\n          {Platform.OS === \"web\" ? (\r\n            <View style={styles.webPieContainer}>\r\n              <PieChart\r\n                data={pieData}\r\n                width={screenWidth * 0.5}\r\n                height={220}\r\n                chartConfig={chartConfig(theme)}\r\n                accessor=\"population\"\r\n                backgroundColor=\"transparent\"\r\n                paddingLeft=\"15\"\r\n                absolute\r\n                hasLegend={false}\r\n              />\r\n              <View style={{ flex: 1, marginLeft: 10 }}>\r\n                {pieData.length > 7 ? (\r\n                  <ScrollView style={{ maxHeight: 200 }}>\r\n                    {pieData.map((item, index) => (\r\n                      <View key={index.toString()} style={styles.tableRow}>\r\n                        <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\", flex: 1 }]}>{item.name}</Text>\r\n                        <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{item.population}</Text>\r\n                      </View>\r\n                    ))}\r\n                  </ScrollView>\r\n                ) : (\r\n                  pieData.map((item, index) => (\r\n                    <View key={index.toString()} style={styles.tableRow}>\r\n                      <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\", flex: 1 }]}>{item.name}</Text>\r\n                      <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{item.population}</Text>\r\n                    </View>\r\n                  ))\r\n                )}\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <>\r\n              <PieChart\r\n                data={pieData}\r\n                width={screenWidth * 0.9}\r\n                height={220}\r\n                chartConfig={chartConfig(theme)}\r\n                accessor=\"population\"\r\n                backgroundColor=\"transparent\"\r\n                paddingLeft=\"85\"\r\n                absolute\r\n                hasLegend={false}\r\n              />\r\n              <ScrollView style={{ maxHeight: 200, width: \"100%\", marginTop: 10 }}>\r\n                {pieData.map((item, index) => (\r\n                  <View key={index.toString()} style={styles.tableRow}>\r\n                    <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\", flex: 1 }]}>{item.name}</Text>\r\n                    <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{item.population}</Text>\r\n                  </View>\r\n                ))}\r\n              </ScrollView>\r\n            </>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  const renderLineChart = () => {\r\n    const sortedNotas = [...notas].sort(\r\n      (a, b) => new Date(a.data_lancamento).getTime() - new Date(b.data_lancamento).getTime()\r\n    );\r\n    const labels = sortedNotas.map((n, i) => {\r\n      const baseDate = new Date(n.data_lancamento).toLocaleDateString();\r\n      return i % 2 === 1 ? `${baseDate}` : baseDate;\r\n    });\r\n    const dataPoints = sortedNotas.map(n => parseFloat(n.nota));\r\n    const isDark = userTheme === \"dark\";\r\n    const background = isDark ? \"#000\" : \"#FFF\";\r\n    const lineColor = isDark ? \"#47AD4D\" : \"#000\";\r\n    const labelColor = isDark ? \"#CCC\" : \"#000\";\r\n    const dynamicChartWidth = Math.max(screenWidth * 0.9, sortedNotas.length * 80);\r\n    return (\r\n      <View>\r\n        <View style={[styles.chartWrapper, { backgroundColor: background }]}>\r\n          <ScrollView horizontal contentContainerStyle={{ paddingBottom: 10 }}>\r\n            <LineChart\r\n              data={{ labels, datasets: [{ data: dataPoints, color: () => lineColor }] }}\r\n              width={dynamicChartWidth}\r\n              height={220}\r\n              fromZero={true}\r\n              chartConfig={{\r\n                backgroundGradientFrom: background,\r\n                backgroundGradientTo: background,\r\n                color: () => labelColor,\r\n                strokeWidth: 2,\r\n                decimalPlaces: 2,\r\n                propsForDots: { r: \"4\", strokeWidth: \"2\", stroke: lineColor },\r\n                propsForBackgroundLines: { stroke: isDark ? \"#424242\" : \"#e3e3e3\" },\r\n                propsForLabels: { fill: labelColor },\r\n              }}\r\n              bezier\r\n              onDataPointClick={(data) => {\r\n                const index = data.index;\r\n                const note = sortedNotas[index];\r\n                setSelectedNote(note);\r\n                setShowDetailsModal(true);\r\n              }}\r\n              style={{ borderRadius: 16 }}\r\n            />\r\n          </ScrollView>\r\n        </View>\r\n        {sortedNotas.length > 0 && (\r\n          sortedNotas.length > 4 ? (\r\n            <ScrollView style={{ maxHeight: 200 }}>\r\n              <View style={styles.tableContainer}>\r\n                <View style={styles.tableRow}>\r\n                  <Text style={[styles.tableHeader, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>Disciplina</Text>\r\n                  <Text style={[styles.tableHeader, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>Nota</Text>\r\n                </View>\r\n                {sortedNotas.map((nota, index) => (\r\n                  <View key={index.toString()} style={styles.tableRow}>\r\n                    <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{nota.disciplina_nome}</Text>\r\n                    <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{nota.nota}</Text>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            </ScrollView>\r\n          ) : (\r\n            <View style={styles.tableContainer}>\r\n              <View style={styles.tableRow}>\r\n                <Text style={[styles.tableHeader, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>Disciplina</Text>\r\n                <Text style={[styles.tableHeader, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>Nota</Text>\r\n              </View>\r\n              {sortedNotas.map((nota, index) => (\r\n                <View key={index.toString()} style={styles.tableRow}>\r\n                  <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{nota.disciplina_nome}</Text>\r\n                  <Text style={[styles.tableCell, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>{nota.nota}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          )\r\n        )}\r\n        <TouchableOpacity onPress={generatePdf} style={[styles.pdfButton, { backgroundColor: \"#47AD4D\" }]}>\r\n          <Text style={styles.pdfButtonText}>Gerar PDF</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // Seção de Estatísticas com filtro aprimorado e scroll vertical\r\n  const renderStatistics = () => {\r\n    const stats = computeAdvancedStatistics(allNotas, getFilteredStatsNotas());\r\n    return (\r\n      <ScrollView style={{ flex: 1 }}>\r\n        <View style={[styles.statsContainer, { backgroundColor: userTheme === \"dark\" ? \"#000\" : \"#FFF\" }]}>\r\n          <TouchableOpacity onPress={() => setShowStatsFilter(true)} style={styles.professionalFilterButton}>\r\n            <Text style={styles.professionalFilterButtonText}>Filtrar Estatísticas</Text>\r\n          </TouchableOpacity>\r\n          {stats && Object.keys(stats.disciplineStats).length ? (\r\n            Object.keys(stats.disciplineStats).map((discipline) => {\r\n              const stat = stats.disciplineStats[discipline];\r\n              return (\r\n                <View key={discipline} style={styles.statItem}>\r\n                  <Text style={styles.statTitle}>{discipline}</Text>\r\n                  <Text style={styles.statDescription}>\r\n                    A média global é {stat.overallAvg.toFixed(2)} e a média da disciplina é {stat.filteredAvg.toFixed(2)}, o que significa que houve{\" \"}\r\n                    {stat.percentageChange > 0 ? (\r\n                      <Text style={{ color: \"#47AD4D\" }}>um aumento de {stat.percentageChange.toFixed(2)}%</Text>\r\n                    ) : stat.percentageChange < 0 ? (\r\n                      <Text style={{ color: \"#dc3545\" }}>uma diminuição de {Math.abs(stat.percentageChange).toFixed(2)}%</Text>\r\n                    ) : (\r\n                      <Text>nenhuma alteração</Text>\r\n                    )}.\r\n                  </Text>\r\n                  <Text style={styles.statDescription}>\r\n                    Nota mais alta: {stat.highestFiltered.toFixed(2)}; Nota mais baixa: {stat.lowestFiltered.toFixed(2)}.\r\n                  </Text>\r\n                  {stat.notesOrdered && stat.notesOrdered.length >= 2 ? (\r\n                    <DisciplineLineChart notes={stat.notesOrdered} percentageChange={stat.percentageChange} />\r\n                  ) : (\r\n                    <Text style={{ marginTop: 8, color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }}>Dados insuficientes para gráfico.</Text>\r\n                  )}\r\n                </View>\r\n              );\r\n            })\r\n          ) : (\r\n            <Text style={{ color: userTheme === \"dark\" ? \"#FFF\" : \"#000\", marginTop: 10 }}>Sem dados suficientes para as estatísticas avançadas.</Text>\r\n          )}\r\n          <View style={{ marginTop: 20 }}></View>\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n  // Renderiza a lista de notas\r\n  const renderList = () => (\r\n    <FlatList\r\n      data={notas}\r\n      keyExtractor={(item, index) => (item.nota_id ? item.nota_id.toString() : index.toString())}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.listItemContainer,\r\n            userTheme === \"dark\" && { backgroundColor: \"#222\", borderColor: \"#444\" },\r\n          ]}\r\n          onPress={() => {\r\n            setSelectedNote(item);\r\n            setShowDetailsModal(true);\r\n          }}\r\n        >\r\n          <View style={styles.listItemHeader}>\r\n            <Text style={[styles.listItemTitle, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>\r\n              {item.disciplina_nome}\r\n            </Text>\r\n            <Text style={[styles.listItemDate, { color: userTheme === \"dark\" ? \"#CCC\" : \"#555\" }]}>\r\n              {new Date(item.data_lancamento).toLocaleDateString()}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.listItemContent}>\r\n            <View style={styles.listItemRow}>\r\n              <Text style={styles.listItemLabel}>Nota:</Text>\r\n              <Text style={styles.listItemValue}>{item.nota}</Text>\r\n            </View>\r\n            <View style={styles.listItemRow}>\r\n              <Text style={styles.listItemLabel}>Professor:</Text>\r\n              <Text style={styles.listItemValue}>{item.professor_email}</Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      )}\r\n      ListFooterComponent={\r\n        <View style={{ marginTop: 10 }}>\r\n          <TouchableOpacity\r\n            style={[styles.filterButton, { backgroundColor: \"#47AD4D\" }]}\r\n            onPress={() => setShowFilter(true)}\r\n          >\r\n            <Text style={[styles.filterButtonText, { color: theme.colors.onPrimary }]}>Filtrar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      }\r\n      contentContainerStyle={{ paddingBottom: 20 }}\r\n    />\r\n  );\r\n\r\n  if (loadingBg) {\r\n    return (\r\n      <ImageBackground\r\n        source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../../assets/images/bg1.jpg\")}\r\n        style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <View style={styles.loaderContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#6200ea\" />\r\n          <Text style={{ marginTop: 16, fontSize: 16, textAlign: \"center\" }}>\r\n            Estamos a processar o seu pedido de registo. Pedimos que aguarde...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  const headerBackgroundColor = userTheme === \"dark\" ? \"#000\" : \"#FFF\";\r\n  const headerTextColor = userTheme === \"dark\" ? \"#FFF\" : \"#000\";\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../../assets/images/bg1.jpg\")}\r\n      style={{ flex: 1, width: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}\r\n    >\r\n      {userTheme === \"dark\" && <View style={styles.darkOverlay} pointerEvents=\"none\" />}\r\n      <StatusBar backgroundColor=\"transparent\" translucent barStyle={userTheme === \"dark\" ? \"light-content\" : \"dark-content\"} />\r\n      <SafeAreaView style={{ flex: 1, width: \"97%\" }}>\r\n        <View style={[styles.internalHeader, { backgroundColor: headerBackgroundColor, width: Platform.OS === \"web\" ? \"103.2%\" : \"105%\" }]}>\r\n          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/angle-left.png\")}\r\n              style={Platform.OS === \"web\"\r\n                ? { width: 35, height: 35, tintColor: userTheme === \"dark\" ? \"#FFF\" : undefined, marginTop: 30 }\r\n                : { width: 23, height: 25, tintColor: userTheme === \"dark\" ? \"#FFF\" : undefined, marginTop: 30 }\r\n              }\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/user.png\")}\r\n              style={Platform.OS === \"web\"\r\n                ? { width: 30, height: 30, tintColor: userTheme === \"dark\" ? \"#FFF\" : undefined, marginTop: 30 }\r\n                : { width: 25, height: 25, tintColor: userTheme === \"dark\" ? \"#FFF\" : undefined, marginTop: 30 }\r\n              }\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.viewToggleContainer}>\r\n          <TouchableOpacity onPress={() => setViewMode(\"list\")} style={[styles.viewToggleButton, viewMode === \"list\" && styles.viewToggleButtonActive]}>\r\n            <Text style={styles.viewToggleButtonText}>Lista</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setViewMode(\"chart\")} style={[styles.viewToggleButton, viewMode === \"chart\" && styles.viewToggleButtonActive]}>\r\n            <Text style={styles.viewToggleButtonText}>Gráfico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setViewMode(\"stats\")} style={[styles.viewToggleButton, viewMode === \"stats\" && styles.viewToggleButtonActive]}>\r\n            <Text style={styles.viewToggleButtonText}>Estatísticas</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        {viewMode === \"chart\" && (\r\n          <View style={styles.chartTypeToggleContainer}>\r\n            <TouchableOpacity onPress={() => setChartType(\"bar\")} style={[styles.chartTypeButton, chartType === \"bar\" && styles.chartTypeButtonActive]}>\r\n              <Text style={{ color: theme.colors.onSurface }}>Barra</Text>\r\n            </TouchableOpacity>\r\n            {notas.length > 1 && (\r\n              <TouchableOpacity onPress={() => setChartType(\"line\")} style={[styles.chartTypeButton, chartType === \"line\" && styles.chartTypeButtonActive]}>\r\n                <Text style={{ color: theme.colors.onSurface }}>Linha</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        )}\r\n        {notas.length === 0 ? (\r\n          <Text style={{ color: theme.colors.onSurface, textAlign: \"center\" }}>Sem notas por enquanto.</Text>\r\n        ) : viewMode === \"list\" ? (\r\n          renderList()\r\n        ) : viewMode === \"chart\" ? (\r\n          chartType === \"bar\"\r\n            ? renderBarChart()\r\n            : chartType === \"pie\"\r\n              ? renderPieChart()\r\n              : renderLineChart()\r\n        ) : (\r\n          renderStatistics()\r\n        )}\r\n        {viewMode !== \"list\" && viewMode !== \"stats\" && chartType !== \"pie\" && (\r\n          <View style={{ marginTop: 10 }}>\r\n            <TouchableOpacity style={[styles.filterButton, { backgroundColor: \"#47AD4D\" }]} onPress={() => setShowFilter(true)}>\r\n              <Text style={[styles.filterButtonText, { color: theme.colors.onPrimary }]}>Filtrar</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n        <Modal visible={showFilter} animationType=\"slide\" transparent>\r\n          <View style={styles.modalContainer}>\r\n            <View style={[styles.modalContent, { backgroundColor: theme.colors.surface }]}>\r\n              <Text style={[styles.modalTitle, { color: theme.colors.onSurface }]}>Filtrar Notas</Text>\r\n              <TextInput\r\n                style={[styles.modalInput, { color: theme.colors.onSurface, borderColor: theme.colors.outline }]}\r\n                placeholder=\"Disciplina (técnico)\"\r\n                placeholderTextColor=\"#999\"\r\n              />\r\n              <View style={styles.modalButtonRow}>\r\n                <TouchableOpacity style={[styles.modalButton, { backgroundColor: \"#47AD4D\" }]} onPress={() => setShowFilter(false)}>\r\n                  <Text style={styles.modalButtonText}>Aplicar</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={[styles.modalButton, { backgroundColor: \"#dc3545\" }]} onPress={() => setShowFilter(false)}>\r\n                  <Text style={styles.modalButtonText}>Limpar</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={[styles.modalButton, { backgroundColor: \"#6c757d\" }]} onPress={() => setShowFilter(false)}>\r\n                  <Text style={styles.modalButtonText}>Fechar</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Modal visible={showStatsFilter} animationType=\"slide\" transparent>\r\n            <View style={styles.modalContainer}>\r\n              <View style={[styles.modalContent, { backgroundColor: theme.colors.surface }]}>\r\n                <Text style={[styles.modalTitle, { color: theme.colors.onSurface }]}>Filtrar Estatísticas</Text>\r\n                <Text style={{ marginBottom: 8, fontWeight: \"bold\", color: theme.colors.onSurface }}>\r\n                  Selecione a Disciplina:\r\n                </Text>\r\n                <ScrollView horizontal contentContainerStyle={{ marginBottom: 10 }}>\r\n                  {disciplineOptions.map((disc, index) => (\r\n                    <TouchableOpacity\r\n                      key={index.toString()}\r\n                      style={[\r\n                        styles.filterOptionButton,\r\n                        selectedDisciplineFilter === disc && { backgroundColor: \"#47AD4D\" }\r\n                      ]}\r\n                      onPress={() => setSelectedDisciplineFilter(disc)}\r\n                    >\r\n                      <Text style={{ color: selectedDisciplineFilter === disc ? \"#FFF\" : theme.colors.onSurface }}>\r\n                        {disc}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                </ScrollView>\r\n                <Text style={{ marginBottom: 8, fontWeight: \"bold\", color: theme.colors.onSurface }}>\r\n                  Data Início:\r\n                </Text>\r\n                <TouchableOpacity onPress={() => setShowPickerInicio(true)} style={styles.datePickerButton}>\r\n                  <Text style={{ color: theme.colors.onSurface }}>\r\n                    {dateInicio ? dateInicio.toISOString().split(\"T\")[0] : \"Selecionar Data\"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                {showPickerInicio && (\r\n                  <DateTimePicker\r\n                    value={dateInicio || new Date()}\r\n                    mode=\"date\"\r\n                    display=\"default\"\r\n                    onChange={(event, selectedDate) => {\r\n                      setShowPickerInicio(false);\r\n                      if (selectedDate) setDateInicio(selectedDate);\r\n                    }}\r\n                  />\r\n                )}\r\n                <Text style={{ marginBottom: 8, fontWeight: \"bold\", color: theme.colors.onSurface }}>\r\n                  Data Fim:\r\n                </Text>\r\n                <TouchableOpacity onPress={() => setShowPickerFim(true)} style={styles.datePickerButton}>\r\n                  <Text style={{ color: theme.colors.onSurface }}>\r\n                    {dateFim ? dateFim.toISOString().split(\"T\")[0] : \"Selecionar Data\"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                {showPickerFim && (\r\n                  <DateTimePicker\r\n                    value={dateFim || new Date()}\r\n                    mode=\"date\"\r\n                    display=\"default\"\r\n                    onChange={(event, selectedDate) => {\r\n                      setShowPickerFim(false);\r\n                      if (selectedDate) setDateFim(selectedDate);\r\n                    }}\r\n                  />\r\n                )}\r\n                <View style={styles.modalButtonRow}>\r\n                  <TouchableOpacity\r\n                    style={[styles.modalButton, { backgroundColor: \"#47AD4D\" }]}\r\n                    onPress={() => setShowStatsFilter(false)}\r\n                  >\r\n                    <Text style={styles.modalButtonText}>Aplicar</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={[styles.modalButton, { backgroundColor: \"#dc3545\" }]}\r\n                    onPress={() => {\r\n                      setSelectedDisciplineFilter(\"\");\r\n                      setDateInicio(null);\r\n                      setDateFim(null);\r\n                      setShowStatsFilter(false);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.modalButtonText}>Limpar</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={[styles.modalButton, { backgroundColor: \"#6c757d\" }]}\r\n                    onPress={() => setShowStatsFilter(false)}\r\n                  >\r\n                    <Text style={styles.modalButtonText}>Fechar</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        <Modal visible={showDetailsModal} transparent animationType=\"fade\">\r\n          <View style={styles.modalOverlay}>\r\n            <View style={[styles.detailModalContent, { backgroundColor: userTheme === \"dark\" ? \"#000\" : \"#FFF\" }]}>\r\n              {selectedNote ? (\r\n                <>\r\n                  <Text style={[styles.modalTitle, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>Detalhes da Nota</Text>\r\n                  <Text style={[styles.detailText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}><Text style={styles.detailLabel}>Nota: </Text>{selectedNote.nota}</Text>\r\n                  <Text style={[styles.detailText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}><Text style={styles.detailLabel}>Disciplina: </Text>{selectedNote.disciplina_nome}</Text>\r\n                  <Text style={[styles.detailText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}><Text style={styles.detailLabel}>Data: </Text>{selectedNote.data_lancamento}</Text>\r\n                  <Text style={[styles.detailText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}><Text style={styles.detailLabel}>Professor: </Text>{selectedNote.professor_email}</Text>\r\n                </>\r\n              ) : selectedDiscipline ? (\r\n                <>\r\n                  <Text style={[styles.modalTitle, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>Detalhes da Disciplina</Text>\r\n                  <Text style={[styles.detailText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}><Text style={styles.detailLabel}>Disciplina: </Text>{selectedDiscipline.name}</Text>\r\n                  <Text style={[styles.detailText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}><Text style={styles.detailLabel}>Total de Notas: </Text>{selectedDiscipline.population}</Text>\r\n                </>\r\n              ) : null}\r\n              <TouchableOpacity style={[styles.closeModalButton, { backgroundColor: \"#47AD4D\" }]} onPress={() => { setShowDetailsModal(false); setSelectedNote(null); setSelectedDiscipline(null); }}>\r\n                <Text style={{ color: theme.colors.onPrimary }}>Fechar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground={headerBackgroundColor}\r\n          dynamicTextColor={headerTextColor}\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={email}\r\n        />\r\n        {viewMode === \"chart\" && chartType !== \"pie\" && (\r\n          <View ref={pdfChartRef} style={{ position: \"absolute\", top: -10000, left: 0, opacity: 0 }}>\r\n            <PdfChartLight />\r\n          </View>\r\n        )}\r\n      </SafeAreaView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\n//////////////////////////////////////////////\r\n// Estilos – Design Profissional\r\n//////////////////////////////////////////////\r\nconst styles = StyleSheet.create({\r\n  listItemContainer: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    backgroundColor: \"#fff\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  listItemHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 8,\r\n  },\r\n  listItemTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"600\",\r\n  },\r\n  listItemDate: {\r\n    fontSize: 14,\r\n  },\r\n  listItemContent: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: \"#eee\",\r\n    paddingTop: 8,\r\n  },\r\n  listItemRow: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 4,\r\n  },\r\n  listItemLabel: {\r\n    fontWeight: \"600\",\r\n    fontSize: 16,\r\n    marginRight: 4,\r\n  },\r\n  listItemValue: {\r\n    fontSize: 16,\r\n    color: \"#333\",\r\n  },\r\n  tableContainer: { width: \"100%\", paddingHorizontal: 10 },\r\n  tableRow: { flexDirection: \"row\", justifyContent: \"space-between\", paddingVertical: 8, borderBottomWidth: 1, borderBottomColor: \"#ccc\" },\r\n  tableHeader: { fontSize: 16, fontWeight: \"bold\" },\r\n  tableCell: { fontSize: 16 },\r\n  loaderContainer: { borderRadius: 12, padding: 24, width: \"90%\", maxWidth: 400, elevation: 3, alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"#fff\" },\r\n  internalHeader: { top: 0, left: 0, right: 0, marginLeft: Platform.OS === \"web\" ? -25 : -10, width: Platform.OS === \"web\" ? \"103.2%\" : \"105%\", height: 70, flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", paddingHorizontal: 15, elevation: 4, zIndex: 10, paddingTop: Platform.OS === \"ios\" ? 40 : 0 },\r\n  internalHeaderText: { fontSize: 22, fontWeight: \"bold\" },\r\n  viewToggleContainer: { flexDirection: \"row\", justifyContent: \"center\", marginBottom: 15, marginTop: 10 },\r\n  viewToggleButton: { paddingVertical: 8, paddingHorizontal: 15, borderRadius: 20, marginHorizontal: 5, backgroundColor: \"rgba(231,229,229,0.6)\" },\r\n  viewToggleButtonActive: { backgroundColor: \"rgba(82,82,82,0.7)\" },\r\n  viewToggleButtonText: { fontWeight: \"bold\", color: \"#000\" },\r\n  chartTypeToggleContainer: { flexDirection: \"row\", justifyContent: \"center\", marginBottom: 15 },\r\n  chartTypeButton: { paddingVertical: 6, paddingHorizontal: 10, borderRadius: 15, marginHorizontal: 5, backgroundColor: \"rgba(200,200,200,0.6)\" },\r\n  chartTypeButtonActive: { backgroundColor: \"rgba(120,120,120,0.8)\" },\r\n  chartWrapper: { width: screenWidth * 0.95, marginHorizontal: \"auto\", padding: 10, borderRadius: 8, marginVertical: 20, alignItems: \"center\" },\r\n  chartContent: { alignItems: \"flex-end\" },\r\n  barContainer: { width: 60, alignItems: \"center\", marginHorizontal: 10 },\r\n  barWrapper: { height: 350, justifyContent: \"flex-end\", alignItems: \"center\", width: \"100%\" },\r\n  bar: { width: \"100%\", justifyContent: \"flex-end\", alignItems: \"center\", borderTopLeftRadius: 4, borderTopRightRadius: 4 },\r\n  barValue: { fontWeight: \"bold\", padding: 2, fontSize: 12 },\r\n  barLabel: { marginTop: 5, fontWeight: \"bold\", textAlign: \"center\", width: 60 },\r\n  statsContainer: { padding: 20, alignItems: \"center\", borderRadius: 8, marginVertical: 10 },\r\n  statsText: { fontSize: 18, marginVertical: 4 },\r\n  filterButton: { paddingVertical: 12, paddingHorizontal: 25, borderRadius: 5, elevation: 2 },\r\n  filterButtonText: { fontWeight: \"bold\", fontSize: 16 },\r\n  professionalFilterButton: { backgroundColor: \"#47AD4D\", paddingVertical: 10, paddingHorizontal: 20, borderRadius: 25, elevation: 3, marginBottom: 15 },\r\n  professionalFilterButtonText: { color: \"#FFF\", fontWeight: \"bold\", fontSize: 16 },\r\n  statItem: { marginVertical: 8, padding: 10, borderRadius: 8, borderWidth: 1, width: \"100%\" },\r\n  statTitle: { fontSize: 18, fontWeight: \"bold\", marginBottom: 4 },\r\n  statDescription: { fontSize: 14, color: \"#333\" },\r\n  modalContainer: { flex: 1, backgroundColor: \"rgba(0,0,0,0.6)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  modalContent: { width: \"85%\", borderRadius: 10, padding: 20 },\r\n  modalTitle: { fontSize: 18, fontWeight: \"bold\", marginBottom: 10 },\r\n  modalInput: { borderWidth: 1, borderRadius: 5, marginBottom: 10, paddingHorizontal: 10, height: 40 },\r\n  modalButtonRow: { flexDirection: \"row\", justifyContent: \"space-between\" },\r\n  modalButton: { flex: 1, marginHorizontal: 5, padding: 10, borderRadius: 5, alignItems: \"center\" },\r\n  modalButtonText: { color: \"#fff\", fontWeight: \"bold\" },\r\n  modalOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.6)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  detailModalContent: { width: \"80%\", borderRadius: 10, padding: 20 },\r\n  detailText: { fontSize: 16, marginBottom: 10 },\r\n  detailLabel: { fontWeight: \"bold\" },\r\n  closeModalButton: { alignSelf: \"center\", marginTop: 10, paddingVertical: 8, paddingHorizontal: 20, borderRadius: 5 },\r\n  darkOverlay: { ...StyleSheet.absoluteFillObject, backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\r\n  pdfButton: { marginTop: 10, paddingVertical: 12, paddingHorizontal: 25, borderRadius: 5, alignSelf: \"center\" },\r\n  pdfButtonText: { color: \"#FFF\", fontWeight: \"bold\", fontSize: 16 },\r\n  webPieContainer: { flexDirection: \"row\", alignItems: \"center\", width: \"100%\" },\r\n  filterOptionButton: { marginRight: 10, padding: 8, borderRadius: 5, backgroundColor: \"#e3e3e3\" },\r\n  datePickerButton: { borderWidth: 1, borderColor: \"#ccc\", padding: 10, borderRadius: 5, marginBottom: 10 },\r\n});\r\n\r\nexport default NotasScreen;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Platform,\r\n  TouchableOpacity,\r\n  RefreshControl,\r\n  Modal,\r\n  ImageBackground,\r\n  TouchableWithoutFeedback,\r\n  Dimensions,\r\n  Image,\r\n  StatusBar,\r\n  TextInput\r\n} from 'react-native';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { IconButton, Button as PaperButton } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-big-calendar';\r\nimport config from \"../../../config/config_db\";\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport ModalConfig from '../../../components/modalConfig';\r\n\r\ninterface RouteParams {\r\n  email: string;\r\n}\r\n\r\ninterface LunchEvent {\r\n  id: string;\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  fromDB?: boolean;\r\n  isManual?: boolean;\r\n  hasMenu?: boolean;\r\n}\r\n\r\ninterface MenuEvent {\r\n  dia: string;\r\n  sopa: string;\r\n  prato_principal: string;\r\n  sobremesa: string;\r\n}\r\n\r\nconst normalizeDate = (date: Date): Date =>\r\n  new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n\r\nconst getDateString = (date: Date): string => {\r\n  const y = date.getFullYear();\r\n  const m = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const d = ('0' + date.getDate()).slice(-2);\r\n  return `${y}-${m}-${d}`;\r\n};\r\n\r\nconst AlmocosScreen: React.FC = () => {\r\n  const navigation = useNavigation<any>();\r\n  const { email } = useRoute().params as RouteParams;\r\n  const isWeb = Platform.OS === 'web';\r\n\r\n  const [dbLunchDates, setDbLunchDates] = useState<LunchEvent[]>([]);\r\n  const [selectedLunchDates, setSelectedLunchDates] = useState<Date[]>([]);  const [removedLunchDates, setRemovedLunchDates] = useState<Date[]>([]);\r\n  const [almocosMenu, setAlmocosMenu] = useState<MenuEvent[]>([]);\r\n  const [feedbackDoneDates, setFeedbackDoneDates] = useState<string[]>([]);\r\n\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [menuModalVisible, setMenuModalVisible] = useState(false);\r\n  const [selectedMenu, setSelectedMenu] = useState<MenuEvent | null>(null);\r\n  const [feedbackModalVisible, setFeedbackModalVisible] = useState(false);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n  const [avaliacao, setAvaliacao] = useState<number | null>(null);\r\n  const [opiniao, setOpiniao] = useState<string>('');\r\n  const [userTheme, setUserTheme] = useState<'light' | 'dark'>('light');\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n\r\n  const urlFound = `${config.baseUrl}/calendarioFiles/almocos/found_lunch.php`;\r\n  const urlMenu = `${config.baseUrl}/calendarioFiles/almocos/found_menu.php`;\r\n  const urlUpdate = `${config.baseUrl}/calendarioFiles/almocos/update_lunch.php`;\r\n  const urlFoundFeedbacks = `${config.baseUrl}/calendarioFiles/almocos/found_feedbacks.php`;\r\n  const urlSubmitFeedback = `${config.baseUrl}/calendarioFiles/almocos/submit_feedback.php`;\r\n\r\n  const horaAtual = new Date().getHours(); \r\n\r\n  const podeMarcarAlmoco = (date: Date) => {\r\n    const hoje = new Date();\r\n    hoje.setHours(0, 0, 0, 0);\r\n    const dataAlmoco = new Date(date);\r\n    dataAlmoco.setHours(0, 0, 0, 0);\r\n    // Só pode marcar se a data for maior que hoje\r\n    return dataAlmoco > hoje;\r\n  };\r\n\r\n  const handlePress = () => {\r\n    if (podeMarcarAlmoco(new Date())) {\r\n      handleSave();\r\n    } else {\r\n      showAlert('Erro', 'Não é possível marcar o almoço para hoje ou para datas passadas.');\r\n    }\r\n};\r\n\r\n  const showAlert = (title: string, message?: string) => {\r\n  if (isWeb) {\r\n    window.alert(message ? `${title}\\n\\n${message}` : title);\r\n  } else {\r\n    Alert.alert(title, message);\r\n  }\r\n};\r\n\r\n  // Carrega configurações de tema/background\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === 'web') {\r\n          bg = localStorage.getItem('backgroundUrl');\r\n          mode = localStorage.getItem('userTheme');\r\n        } else {\r\n          bg = await SecureStore.getItemAsync('backgroundUrl');\r\n          mode = await SecureStore.getItemAsync('userTheme');\r\n        }\r\n        if (bg && !bg.startsWith('http')) bg = `${config.baseUrl}/${bg}`;\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === 'dark' ? 'dark' : 'light');\r\n      } catch (err) {\r\n        console.error('Erro ao carregar configurações', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Fetch das reservas\r\n  const fetchLunchReservations = useCallback(() => {\r\n    return fetch(urlFound, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (!json.success) throw new Error(json.message);\r\n        const eventos: LunchEvent[] = json.data.map((row: any) => {\r\n          const d = normalizeDate(new Date(row.dia + 'T00:00:00'));\r\n          return {\r\n            id: getDateString(d),\r\n            title: row.turma || '',\r\n            start: d,\r\n            end: d,\r\n            fromDB: true,\r\n          };\r\n        });\r\n        setDbLunchDates(eventos);\r\n      });\r\n  }, [email]);\r\n\r\n  // Fetch dos menus\r\n  const fetchMenus = useCallback(() => {\r\n    return fetch(urlMenu)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (!json.success) throw new Error('Erro no fetch de menus');\r\n        const menus: MenuEvent[] = json.data.map((r: any) => ({\r\n          dia: r.dia,\r\n          sopa: r.sopa,\r\n          prato_principal: r.prato_principal,\r\n          sobremesa: r.sobremesa,\r\n        }));\r\n        setAlmocosMenu(menus);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch dos feedbacks já dados\r\n  const fetchFeedbacks = useCallback(() => {\r\n    return fetch(urlFoundFeedbacks, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (!json.success) throw new Error('Erro no fetch de feedbacks');\r\n        setFeedbackDoneDates(json.data.map((r: any) => r.dia));\r\n      });\r\n  }, [email]);\r\n\r\n  // Refresh geral\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    Promise.all([fetchLunchReservations(), fetchMenus(), fetchFeedbacks()])\r\n      .then(() => {\r\n        setSelectedLunchDates([]);\r\n        setRemovedLunchDates([]);\r\n      })\r\n      .catch(err => console.error(err))\r\n      .finally(() => setRefreshing(false));\r\n  }, [fetchLunchReservations, fetchMenus, fetchFeedbacks]);\r\n\r\n  // No mount, carrega tudo\r\n  useEffect(() => {\r\n    onRefresh();\r\n  }, [onRefresh]);\r\n\r\n  if (loading) return <Text style={{ padding: 20 }}>A carregar...</Text>;\r\n\r\n  // Funções auxiliares\r\n  const findMenuForDate = (date: Date) =>\r\n    almocosMenu.find(m => m.dia === getDateString(date));\r\n\r\n  const dbSelectedEvents = dbLunchDates.filter(\r\n    e => !removedLunchDates.some(d => getDateString(d) === getDateString(e.start))\r\n  );\r\n  const manualEvents: LunchEvent[] = selectedLunchDates.map(d => ({\r\n    id: getDateString(d),\r\n    title: '',\r\n    start: d,\r\n    end: d,\r\n    isManual: true,\r\n  }));\r\n  const selectedSet = new Set([\r\n    ...dbSelectedEvents.map(e => getDateString(e.start)),\r\n    ...manualEvents.map(e => getDateString(e.start)),\r\n  ]);\r\n  const menuEvents: LunchEvent[] = almocosMenu\r\n    .filter(m => !selectedSet.has(m.dia))\r\n    .map(m => ({\r\n      id: m.dia,\r\n      title: '',\r\n      start: new Date(m.dia + 'T00:00:00'),\r\n      end: new Date(m.dia + 'T00:00:00'),\r\n      hasMenu: true,\r\n    }));\r\n  const calendarEvents = [...dbSelectedEvents, ...manualEvents, ...menuEvents];\r\n\r\n  const onPressDate = (date: Date) => {\r\n    const d = normalizeDate(date);\r\n    const str = getDateString(d);\r\n    const today = normalizeDate(new Date());\r\n    const max = normalizeDate(new Date(Date.now() + 30 * 24 * 3600 * 1000));\r\n    if (d < today || d > max) {\r\n      showAlert('Data inválida', 'Só entre hoje e 1 mês depois.');\r\n      return;\r\n    }\r\n    if ([0, 6].includes(d.getDay())) {\r\n      showAlert('Data inválida', 'Não é possível marcar a senha da refeição aos fins de semana.');\r\n      return;\r\n    }\r\n    const menu = findMenuForDate(d);\r\n    if (menu) {\r\n      setSelectedMenu(menu);\r\n      setMenuModalVisible(true);\r\n      return;\r\n    }\r\n    const inDB = dbSelectedEvents.some(e => getDateString(e.start) === str);\r\n    const inManual = selectedLunchDates.some(d2 => getDateString(d2) === str);\r\n    const inRemoved = removedLunchDates.some(d2 => getDateString(d2) === str);\r\n\r\n    if (inDB || inManual) {\r\n      if (inDB) setRemovedLunchDates(a => [...a, d]);\r\n      if (inManual) setSelectedLunchDates(a => a.filter(d2 => getDateString(d2) !== str));\r\n    } else if (inRemoved) {\r\n      setRemovedLunchDates(a => a.filter(d2 => getDateString(d2) !== str));\r\n    } else {\r\n      setSelectedLunchDates(a => [...a, d]);\r\n    }\r\n  };\r\n\r\n  const handleMenuModalAction = () => {\r\n    if (!selectedMenu) return;\r\n    const d = new Date(selectedMenu.dia + 'T00:00:00');\r\n    const str = getDateString(d);\r\n    const inDB = dbSelectedEvents.some(e => getDateString(e.start) === str);\r\n    const inManual = selectedLunchDates.some(d2 => getDateString(d2) === str);\r\n    if (inDB) setRemovedLunchDates(a => [...a, d]);\r\n    if (inManual) setSelectedLunchDates(a => a.filter(d2 => getDateString(d2) !== str));\r\n    if (!inDB && !inManual) setSelectedLunchDates(a => [...a, d]);\r\n    setMenuModalVisible(false);\r\n    setSelectedMenu(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const toAdd = selectedLunchDates.map(d => getDateString(d));\r\n    const toRem = removedLunchDates.map(d => getDateString(d));\r\n    if (toAdd.length + toRem.length === 0) {\r\n      showAlert('Atenção', 'Nenhuma alteração.');\r\n      return;\r\n    }\r\n    const action = () => {\r\n      fetch(urlUpdate, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, diasParaAdicionar: toAdd, diasParaRemover: toRem }),\r\n      })\r\n        .then(res => res.json())\r\n        .then(j => {\r\n          if (!j.success) throw new Error(j.message);\r\n          onRefresh();\r\n          showAlert('Sucesso', 'Alterações guardadas.');\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          showAlert('Erro', 'Não foi possível guardar.');\r\n        });\r\n    };\r\n    if (Platform.OS === 'web') {\r\n      if (window.confirm('Guardar alterações?')) action();\r\n    } else {\r\n      Alert.alert('Confirmar', 'Guardar alterações?', [\r\n        { text: 'Cancelar', style: 'cancel' },\r\n        { text: 'Sim', onPress: action },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleSubmitFeedback = () => {\r\n    if (avaliacao === null) return;\r\n    const dia = getDateString(new Date());\r\n    fetch(urlSubmitFeedback, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, dia, avaliacao, opiniao }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(j => {\r\n        if (!j.success) throw new Error(j.message);\r\n        setFeedbackDoneDates(a => [...a, dia]);\r\n        setFeedbackModalVisible(false);\r\n        showAlert('Obrigado', 'Feedback registado.');\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        showAlert('Erro', 'Não foi possível enviar.');\r\n      });\r\n  };\r\n\r\n  const todayStr = getDateString(new Date());\r\n  const temAlmocoHoje = dbSelectedEvents.some(e => getDateString(e.start) === todayStr);\r\n  const jaFezFeedback = feedbackDoneDates.includes(todayStr);\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require('../../../assets/images/bg1.jpg')}\r\n      style={styles.background}\r\n      resizeMode=\"cover\"\r\n    >\r\n      <View style={styles.fullScreenContainer}>\r\n        {/* Header */}\r\n        <View style={styles.headerContainer}>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Aluno', { email })}>\r\n            <Image\r\n              source={require('../../../assets/icons/angle-left.png')}\r\n              style={[styles.icon, { tintColor: userTheme === 'dark' ? '#FFF' : '#000' }]}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n            <Image\r\n              source={require('../../../assets/icons/user.png')}\r\n              style={[styles.icon, { tintColor: userTheme === 'dark' ? '#FFF' : '#000' }]}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <ScrollView\r\n          style={styles.container}\r\n          refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\r\n          contentContainerStyle={{ paddingTop: 10, paddingBottom: 20 }}\r\n        >\r\n          {/* Calendário */}\r\n          <View style={[styles.calendarWrapper, { backgroundColor: userTheme === 'dark' ? '#000' : '#FFF' }]}>\r\n            <Calendar\r\n              events={calendarEvents}\r\n              height={Platform.OS === 'web' ? Dimensions.get('window').width * 0.4 : 450}\r\n              mode=\"month\"\r\n              weekStartsOn={1}\r\n              showTime={false}\r\n              onPressCell={onPressDate}\r\n              renderEvent={event => {\r\n                const str = getDateString(event.start);\r\n                const selected = (event.fromDB || event.isManual) && !removedLunchDates.some(d => getDateString(d) === str);\r\n                const hasMenu = event.hasMenu || !!findMenuForDate(event.start);\r\n                const style = Platform.OS === 'web' ? styles.webEventContainer : {};\r\n                return (\r\n                  <TouchableOpacity onPress={() => onPressDate(event.start)}>\r\n                    {selected ? (\r\n                      <View style={[styles.selectedEventContainer, style]}>\r\n                        <Text style={[styles.eventText, { color: userTheme === 'dark' ? '#FFF' : '#000' }]}>✓</Text>\r\n                      </View>\r\n                    ) : hasMenu ? (\r\n                      <View style={[styles.menuEventContainer, style]}>\r\n                        <Text style={[styles.eventText, { color: userTheme === 'dark' ? '#FFF' : '#000' }]}>🍴</Text>\r\n                      </View>\r\n                    ) : null}\r\n                  </TouchableOpacity>\r\n                );\r\n              }}\r\n            />\r\n          </View>\r\n       <View style={styles.buttonsRow}>\r\n        {temAlmocoHoje && !jaFezFeedback && horaAtual >= 12 && (\r\n          <TouchableOpacity\r\n            style={styles.smallFeedbackButton}\r\n            onPress={() => setFeedbackModalVisible(true)}\r\n          >\r\n            <Text style={styles.smallFeedbackButtonText}>\r\n              {`Opinião (${todayStr})`}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        <View style={styles.spacer} />\r\n        <TouchableOpacity style={styles.saveButton} onPress={handlePress}>\r\n          <Text style={styles.saveButtonText}>Guardar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n        <View style={styles.selectedDatesWrapper}>\r\n          {Array.from(selectedSet)\r\n            .sort()\r\n            .map(str => (\r\n              <View\r\n                key={str}\r\n                style={[\r\n                  styles.selectedDateItem,\r\n                  { backgroundColor: userTheme === 'dark' ? '#222' : '#e0e0e0' }\r\n                ]}\r\n              >\r\n                <Text style={{ color: userTheme === 'dark' ? '#FFF' : '#000' }}>\r\n                  {str}\r\n                </Text>\r\n              </View>\r\n            ))}\r\n        </View>\r\n        </ScrollView>\r\n\r\n        {/* Modal detalhes do menu */}\r\n        <Modal visible={menuModalVisible} transparent animationType=\"slide\" onRequestClose={() => setMenuModalVisible(false)}>\r\n          <TouchableWithoutFeedback onPress={() => setMenuModalVisible(false)}>\r\n            <View style={styles.modalOverlay}>\r\n              <TouchableWithoutFeedback>\r\n                <View style={[styles.modalContent, { backgroundColor: userTheme === 'dark' ? '#333' : '#FFF' }]}>\r\n                  <Text style={[styles.modalTitle, { color: userTheme === 'dark' ? '#FFF' : '#000' }]}>Detalhes do Almoço</Text>\r\n                  {selectedMenu && (\r\n                    <>\r\n                      <View style={styles.detailRow}>\r\n                        <IconButton icon=\"bowl\" size={20} iconColor={userTheme === 'dark' ? '#FFF' : '#000'} />\r\n                        <Text style={[styles.detailText, { color: userTheme === 'dark' ? '#FFF' : '#000' }]}>\r\n                          Sopa: {selectedMenu.sopa}\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.detailRow}>\r\n                        <IconButton icon=\"food-variant\" size={20} iconColor={userTheme === 'dark' ? '#FFF' : '#000'} />\r\n                        <Text style={[styles.detailText, { color: userTheme === 'dark' ? '#FFF' : '#000' }]}>\r\n                          Prato: {selectedMenu.prato_principal}\r\n                        </Text>\r\n                      </View>\r\n                      <View style={styles.detailRow}>\r\n                        <IconButton icon=\"cupcake\" size={20} iconColor={userTheme === 'dark' ? '#FFF' : '#000'} />\r\n                        <Text style={[styles.detailText, { color: userTheme === 'dark' ? '#FFF' : '#000' }]}>\r\n                          Sobremesa: {selectedMenu.sobremesa}\r\n                        </Text>\r\n                      </View>\r\n                      <PaperButton mode=\"contained\" onPress={handleMenuModalAction} style={styles.modalActionButton}>\r\n                        {(dbSelectedDates => dbSelectedDates.some(e => getDateString(e.start) === selectedMenu.dia)\r\n                          ? 'Desmarcar'\r\n                          : 'Marcar')(dbSelectedEvents)}\r\n                      </PaperButton>\r\n                    </>\r\n                  )}\r\n                </View>\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </Modal>\r\n\r\n          <Modal\r\n            visible={feedbackModalVisible}\r\n            transparent\r\n            animationType=\"fade\"\r\n            onRequestClose={() => {\r\n              setFeedbackModalVisible(false);\r\n              setAvaliacao(null);\r\n            }}\r\n          >\r\n            <TouchableWithoutFeedback\r\n              onPress={() => {\r\n                setFeedbackModalVisible(false);\r\n                setAvaliacao(null);\r\n              }}\r\n            >\r\n            <View style={styles.modalOverlay}>\r\n              <TouchableWithoutFeedback>\r\n                <View style={styles.modalContent}>\r\n                  <Text style={styles.modalTitle}>Avalie o almoço</Text>\r\n                  <View style={styles.ratingRow}>\r\n                    {[0,1,2,3,4,5].map(n => (\r\n                      <TouchableOpacity key={n} onPress={() => setAvaliacao(n)}>\r\n                        <Text style={[styles.ratingNumber, avaliacao === n && styles.ratingSelected]}>\r\n                          {n}\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    ))}\r\n                  </View>\r\n                  <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Comentário (opcional)\"\r\n                    value={opiniao}\r\n                    onChangeText={setOpiniao}\r\n                    multiline\r\n                    numberOfLines={3}\r\n                  />\r\n                  <PaperButton mode=\"contained\" disabled={avaliacao === null} onPress={handleSubmitFeedback} style={styles.modalActionButton}>\r\n                    Enviar\r\n                  </PaperButton>\r\n                </View>\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </Modal>\r\n\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={email}\r\n        />\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: { flex: 1 },\r\n  fullScreenContainer: { flex: 1, backgroundColor: 'transparent' },\r\n  headerContainer: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingTop: Platform.OS === 'web' ? 30 : (StatusBar.currentHeight || 20),\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#FFF',\r\n    zIndex: 10,\r\n  },\r\n  icon: { width: 30, height: 30 },\r\n  container: { flex: 1, paddingHorizontal: 10 },\r\n  calendarWrapper: { borderRadius: 8, padding: 10, marginTop: 80 },\r\n  webEventContainer: { width: '90%', height: '90%', alignSelf: 'center' },\r\n  selectedEventContainer: {\r\n    backgroundColor: '#47AD4D',\r\n    borderRadius: 4,\r\n    width: 45,\r\n    height: 45,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 5,\r\n    marginLeft: 1,\r\n  },\r\n  menuEventContainer: {\r\n    backgroundColor: Platform.OS === 'web' ? '#abedde' : '#8a9b9c',\r\n    borderRadius: 4,\r\n    width: 45,\r\n    height: 45,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 5,\r\n    marginLeft: 1,\r\n  },\r\n  eventText: { fontSize: 20, margin: 0 },\r\n  selectedDateItem: {\r\n    margin: 4,\r\n    padding: 8,\r\n    borderRadius: 8,\r\n    alignSelf: 'flex-start',\r\n  },\r\n  feedbackButton: {\r\n    backgroundColor: '#FF9000',\r\n    padding: 12,\r\n    borderRadius: 6,\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  feedbackButtonText: { color: '#FFF', fontSize: 16, fontWeight: 'bold' },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.4)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  ratingNumber: {\r\n    fontSize: 20,\r\n    fontWeight: 'normal',\r\n    width: 30,\r\n    textAlign: 'center',\r\n  },\r\n  ratingSelected: {\r\n    fontWeight: 'bold',\r\n    borderWidth: 2,\r\n    borderColor: '#47AD4D',\r\n    borderRadius: 4,\r\n    padding: 2,\r\n  },\r\n  selectedDatesWrapper: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  modalContent: { backgroundColor: '#FFF', borderRadius: 8, padding: 20, width: '80%' },\r\n  modalTitle: { fontSize: 20, fontWeight: 'bold', marginBottom: 15, textAlign: 'center' },\r\n  detailRow: { flexDirection: 'row', alignItems: 'center', marginVertical: 5 },\r\n  detailText: { fontSize: 16, marginLeft: 8 },\r\n  modalActionButton: { backgroundColor: '#47AD4D', marginTop: 20, borderRadius: 5 },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#CCC',\r\n    borderRadius: 4,\r\n    padding: 8,\r\n    textAlignVertical: 'top',\r\n    marginTop: 10,\r\n  },\r\n  ratingRow: { flexDirection: 'row', justifyContent: 'space-between', marginVertical: 10 },\r\n  buttonsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 10,\r\n    paddingHorizontal: 10, // se quiseres algum padding lateral\r\n  },\r\n  spacer: {\r\n    flex: 1,\r\n  },\r\n  smallFeedbackButton: {\r\n    backgroundColor: '#FF9000',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n  },\r\n  smallFeedbackButtonText: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#47AD4D',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  saveButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default AlmocosScreen;","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  Alert,\r\n  Platform,\r\n  ImageBackground,\r\n  SafeAreaView,\r\n  Image,\r\n  StatusBar,\r\n  Dimensions,\r\n  Animated,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { useRoute, RouteProp, useTheme } from \"@react-navigation/native\";\r\nimport { WebView } from \"react-native-webview\";\r\nimport * as FileSystem from \"expo-file-system\";\r\nimport * as Sharing from \"expo-sharing\";\r\nimport config from \"../../../config/config_db\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\n// Tipos para as rotas\r\ntype RootStackParamList = {\r\n  Horarios: { email: string };\r\n  PDFViewer?: { url: string };\r\n};\r\ntype HorariosScreenRouteProp = RouteProp<RootStackParamList, \"Horarios\">;\r\n\r\nexport interface ICalendario {\r\n  id: string;\r\n  turma_id: string;\r\n  pdf: string;\r\n  pdf_url: string;\r\n  data_de_upload: string;\r\n  ano: string;\r\n  turma: string;\r\n  ano_inicio: string;\r\n  ano_fim: string;\r\n  status: string;\r\n}\r\n\r\ninterface IStudentActiveInfo {\r\n  turma: string;\r\n  ano_inicio: string;\r\n  ano_fim: string;\r\n}\r\n\r\nconst HorariosScreen = ({ navigation }) => {\r\n  const route = useRoute<HorariosScreenRouteProp>();\r\n  const { email } = route.params;\r\n  const theme = useTheme();\r\n\r\n  // Estados principais\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [calendarData, setCalendarData] = useState<ICalendario[]>([]);\r\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n\r\n  // Dados da turma ativa do aluno\r\n  const [studentActiveInfo, setStudentActiveInfo] = useState<IStudentActiveInfo | null>(null);\r\n  // Fase ativa do aluno (10, 11 ou 12)\r\n  const [activePhase, setActivePhase] = useState<number>(0);\r\n  // Filtro de ano para as abas\r\n  const [selectedGrade, setSelectedGrade] = useState<string>(\"\");\r\n\r\n  // Estados para o preview do PDF\r\n  // Para mobile usamos activeIndex/pdfs; para web, vamos usar selectedPdfUrl que será renderizado inline\r\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\r\n  const [selectedPdfUrl, setSelectedPdfUrl] = useState<string | null>(null);\r\n  const [pdfBase64, setPdfBase64] = useState<string | null>(null);\r\n  const [pdfUri, setPdfUri] = useState<string | null>(null);\r\n\r\n  // Modal de configurações da conta\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  // Animação para o preview expandido/recolhido (somente mobile)\r\n  const slideAnim = useRef(new Animated.Value(0)).current;\r\n  const previewMaxHeight =\r\n    Platform.OS === \"web\"\r\n      ? Dimensions.get(\"window\").height * 1.6\r\n      : Dimensions.get(\"window\").height * 0.8;\r\n\r\n  // Reinicia o preview sempre que o filtro é alterado\r\n  useEffect(() => {\r\n    setActiveIndex(null);\r\n    setSelectedPdfUrl(null);\r\n    setPdfBase64(null);\r\n    setPdfUri(null);\r\n  }, [selectedGrade]);\r\n\r\n  // Busca os dados do calendário no servidor\r\n  const fetchCalendarData = useCallback(async () => {\r\n    setLoading(true);\r\n    setErrorMsg(null);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"email\", email);\r\n      const response = await fetch(\r\n        `${config.baseUrl}/calendarioFiles/aluno/getCalendarByEmail.php`,\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"DEBUG: Resposta do fetchCalendarData:\", data);\r\n      if (data.success) {\r\n        setCalendarData(data.data);\r\n      } else {\r\n        setErrorMsg(data.message || \"Erro ao buscar calendários.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMsg(\"Erro na comunicação com o servidor.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [email]);\r\n\r\n  // Carrega configurações do background e tema\r\n  const loadSettings = useCallback(async () => {\r\n    try {\r\n      let bg: string | null = null;\r\n      let mode: string | null = null;\r\n      if (Platform.OS === \"web\") {\r\n        bg = localStorage.getItem(\"backgroundUrl\");\r\n        mode = localStorage.getItem(\"userTheme\");\r\n      } else {\r\n        bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n        mode = await SecureStore.getItemAsync(\"userTheme\");\r\n      }\r\n      if (bg && !bg.startsWith(\"http\")) {\r\n        bg = `${config.baseUrl}/${bg}`;\r\n      }\r\n      setBackgroundUrl(bg);\r\n      setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n    } catch (error) {\r\n      console.log(\"Erro ao carregar configurações.\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchCalendarData();\r\n  }, [fetchCalendarData]);\r\n\r\n  useEffect(() => {\r\n    loadSettings();\r\n  }, [loadSettings]);\r\n\r\n  // Define a turma ativa e a fase do aluno com base no calendário ativo\r\n  useEffect(() => {\r\n    if (calendarData.length > 0) {\r\n      const activeCalendar = calendarData.find(item => item.status === \"ativo\");\r\n      if (activeCalendar) {\r\n        const phase = parseInt(activeCalendar.ano, 10);\r\n        setActivePhase(phase);\r\n        setStudentActiveInfo({\r\n          turma: activeCalendar.turma,\r\n          ano_inicio: activeCalendar.ano_inicio.toString(),\r\n          ano_fim: activeCalendar.ano_fim.toString(),\r\n        });\r\n        setSelectedGrade(String(activeCalendar.ano));\r\n      }\r\n    }\r\n  }, [calendarData]);\r\n\r\n  // Filtra os calendários\r\n  const filteredCalendars = calendarData.filter(item => {\r\n    if (!studentActiveInfo) return false;\r\n    return (\r\n      item.turma === studentActiveInfo.turma &&\r\n      item.ano_inicio.toString() === studentActiveInfo.ano_inicio &&\r\n      item.ano_fim.toString() === studentActiveInfo.ano_fim &&\r\n      String(item.ano) === selectedGrade\r\n    );\r\n  });\r\n\r\n  // Renderiza as abas conforme a fase do aluno\r\n  const renderTabButtons = () => {\r\n    if (activePhase === 10) return null;\r\n    let tabs: string[] = activePhase === 11 ? [\"10\", \"11\"] : [\"10\", \"11\", \"12\"];\r\n    return (\r\n      <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={styles.tabsContainer}\r\n      >\r\n        {tabs.map(grade => (\r\n          <TouchableOpacity\r\n            key={grade}\r\n            style={[\r\n              styles.filterButton,\r\n              grade === selectedGrade && styles.filterButtonActive,\r\n            ]}\r\n            onPress={() => setSelectedGrade(grade)}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.filterText,\r\n                grade === selectedGrade && styles.filterTextActive,\r\n              ]}\r\n            >\r\n              {grade}º\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n  // Altera o comportamento do preview do PDF de acordo com a plataforma\r\n  const togglePreview = (index: number, pdfUrl: string) => {\r\n    if (Platform.OS === \"web\") {\r\n      // Para Web, se o mesmo item for clicado, fecha a visualização; caso contrário, define o pdfUrl selecionado.\r\n      setSelectedPdfUrl(selectedPdfUrl === pdfUrl ? null : pdfUrl);\r\n      return;\r\n    }\r\n    // Comportamento para dispositivos móveis\r\n    if (activeIndex === index) {\r\n      Animated.timing(slideAnim, {\r\n        toValue: 0,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start(() => {\r\n        setActiveIndex(null);\r\n        setSelectedPdfUrl(null);\r\n        setPdfBase64(null);\r\n        setPdfUri(null);\r\n      });\r\n    } else {\r\n      if (activeIndex !== null) {\r\n        Animated.timing(slideAnim, {\r\n          toValue: 0,\r\n          duration: 300,\r\n          useNativeDriver: false,\r\n        }).start(() => {\r\n          setActiveIndex(index);\r\n          setSelectedPdfUrl(pdfUrl);\r\n          Animated.timing(slideAnim, {\r\n            toValue: 1,\r\n            duration: 300,\r\n            useNativeDriver: false,\r\n          }).start();\r\n          carregarPdf(pdfUrl);\r\n        });\r\n      } else {\r\n        setActiveIndex(index);\r\n        setSelectedPdfUrl(pdfUrl);\r\n        Animated.timing(slideAnim, {\r\n          toValue: 1,\r\n          duration: 300,\r\n          useNativeDriver: false,\r\n        }).start();\r\n        carregarPdf(pdfUrl);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função auxiliar para carregar o PDF de forma assíncrona\r\n  const carregarPdf = (pdfUrl: string) => {\r\n    if (Platform.OS !== \"web\") {\r\n      (async () => {\r\n        try {\r\n          const downloadResult = await FileSystem.downloadAsync(\r\n            pdfUrl,\r\n            FileSystem.documentDirectory + \"temp.pdf\"\r\n          );\r\n          setPdfUri(downloadResult.uri);\r\n          const base64Content = await FileSystem.readAsStringAsync(downloadResult.uri, {\r\n            encoding: FileSystem.EncodingType.Base64,\r\n          });\r\n          setPdfBase64(base64Content);\r\n        } catch (error) {\r\n          Alert.alert(\"Erro\", \"Não foi possível abrir o PDF.\");\r\n        }\r\n      })();\r\n    } else {\r\n      // Para web, se necessário podemos carregar o base64\r\n      (async () => {\r\n        try {\r\n          const response = await fetch(pdfUrl);\r\n          const blob = await response.blob();\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            const base64data = (reader.result as string).split(\",\")[1];\r\n            setPdfBase64(base64data);\r\n          };\r\n          reader.readAsDataURL(blob);\r\n        } catch (error) {\r\n          Alert.alert(\"Erro\", \"Não foi possível carregar o PDF.\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  // Gera o HTML para visualização do PDF usando PDF.js (usado somente para mobile)\r\n  const getPdfHtml = (base64: string) => {\r\n    return `\r\n      <!DOCTYPE html>\r\n      <html>\r\n        <head>\r\n          <meta charset=\"utf-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\r\n          <title>PDF Preview</title>\r\n          <style>\r\n            body { margin: 0; padding: 0; background-color: #000; }\r\n            #canvas_container { width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; }\r\n            canvas { max-width: 100%; height: auto; }\r\n          </style>\r\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js\"></script>\r\n        </head>\r\n        <body>\r\n          <div id=\"canvas_container\"></div>\r\n          <script>\r\n            pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\r\n            var pdfData = \"${base64}\";\r\n            var loadingTask = pdfjsLib.getDocument({ data: atob(pdfData) });\r\n            loadingTask.promise.then(function(pdf) {\r\n              pdf.getPage(1).then(function(page) {\r\n                var scale = 1.5;\r\n                var viewport = page.getViewport({ scale: scale });\r\n                var canvas = document.createElement(\"canvas\");\r\n                var context = canvas.getContext(\"2d\");\r\n                canvas.height = viewport.height;\r\n                canvas.width = viewport.width;\r\n                document.getElementById('canvas_container').appendChild(canvas);\r\n                var renderContext = { canvasContext: context, viewport: viewport };\r\n                page.render(renderContext);\r\n              });\r\n            }).catch(function(error) {\r\n              document.body.innerHTML = \"<p style='color: white; text-align:center;'>Erro ao carregar o PDF.</p>\";\r\n            });\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `;\r\n  };\r\n\r\n  // Função para download/visualização do PDF\r\n  const handleDownload = async () => {\r\n    if (Platform.OS === \"web\") {\r\n      const pdfViewerUrl = `https://mozilla.github.io/pdf.js/web/viewer.html?file=${encodeURIComponent(\r\n        selectedPdfUrl || \"\"\r\n      )}#page=1`;\r\n      window.open(pdfViewerUrl, \"_blank\");\r\n    } else {\r\n      Alert.alert(\r\n        \"Quer guardar o arquivo?\",\r\n        \"Tem a certeza que deseja guardar este arquivo?\",\r\n        [\r\n          { text: \"Cancelar\", style: \"cancel\" },\r\n          {\r\n            text: \"Confirmar\",\r\n            onPress: async () => {\r\n              if (pdfUri) {\r\n                const newPath = FileSystem.documentDirectory + \"downloaded.pdf\";\r\n                try {\r\n                  const fileInfo = await FileSystem.getInfoAsync(newPath);\r\n                  if (fileInfo.exists) {\r\n                    await FileSystem.deleteAsync(newPath);\r\n                  }\r\n                  await FileSystem.moveAsync({ from: pdfUri, to: newPath });\r\n                  Alert.alert(\"O calendário já está concluido\", \"Pode encontra-lo em: \" + newPath);\r\n                } catch (error) {\r\n                  Alert.alert(\"Erro\", \"Não foi possível salvar o arquivo.\");\r\n                }\r\n              }\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  // Função para compartilhar o PDF (somente para mobile)\r\n  const handleShare = async () => {\r\n    if (Platform.OS === \"web\") {\r\n      Alert.alert(\"Atenção\", \"Compartilhamento não disponível nesta plataforma.\");\r\n    } else {\r\n      if (pdfUri && (await Sharing.isAvailableAsync())) {\r\n        await Sharing.shareAsync(pdfUri);\r\n      } else {\r\n        Alert.alert(\"Atenção\", \"Compartilhamento não disponível nesta plataforma.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renderiza um item da lista de calendários\r\n  const renderItem = ({ item, index }: { item: ICalendario; index: number }) => {\r\n    return (\r\n      <>\r\n        <TouchableOpacity\r\n          style={styles.itemContainer}\r\n          onPress={() => togglePreview(index, item.pdf_url)}\r\n        >\r\n          <Text style={styles.itemTitle}>\r\n            Horário de {item.ano}º - {item.turma}\r\n          </Text>\r\n          <Text style={styles.itemSub}>Data de Upload: {item.data_de_upload}</Text>\r\n          <Text style={styles.itemSub}>Arquivo: {item.pdf}</Text>\r\n        </TouchableOpacity>\r\n        {/* Para mobile, renderiza o preview como Animated View */}\r\n        {Platform.OS !== \"web\" && activeIndex === index && (\r\n          <Animated.View\r\n            style={[\r\n              styles.previewContainer,\r\n              {\r\n                height: slideAnim.interpolate({\r\n                  inputRange: [0, 1],\r\n                  outputRange: [0, previewMaxHeight],\r\n                }),\r\n              },\r\n            ]}\r\n          >\r\n            <TouchableOpacity\r\n              style={styles.previewHeader}\r\n              onPress={() => togglePreview(index, item.pdf_url)}\r\n            >\r\n              <Text style={styles.previewTitle}>Visualização</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.pdfContainer}>\r\n              {pdfBase64 ? (\r\n                <WebView\r\n                  originWhitelist={[\"*\"]}\r\n                  source={{ html: getPdfHtml(pdfBase64) }}\r\n                  style={{ flex: 1 }}\r\n                />\r\n              ) : (\r\n                <ActivityIndicator size=\"large\" color=\"#007AFF\" style={{ flex: 1 }} />\r\n              )}\r\n            </View>\r\n            <View style={styles.controlsContainer}>\r\n              <TouchableOpacity style={styles.controlButton} onPress={handleDownload}>\r\n                <Text style={styles.controlButtonText}>\r\n                  {Platform.select({ web: \"Abrir PDF\", default: \"Guardar\" })}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {(Platform.OS === \"ios\" || Platform.OS === \"android\") && (\r\n                <TouchableOpacity style={styles.controlButton} onPress={handleShare}>\r\n                  <Text style={styles.controlButtonText}>Partilhar</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </Animated.View>\r\n        )}\r\n        {/* Para Web, renderiza o preview inline entre as caixas */}\r\n        {Platform.OS === \"web\" && selectedPdfUrl === item.pdf_url && (\r\n          <View style={styles.webInlinePreviewContainer}>\r\n            <Text style={styles.webPreviewTitle}>Visualização do PDF</Text>\r\n            <View style={styles.iframeContainer}>\r\n              <iframe\r\n                title=\"PDF Viewer\"\r\n                src={`https://mozilla.github.io/pdf.js/web/viewer.html?file=${encodeURIComponent(\r\n                  item.pdf_url\r\n                )}#page=1`}\r\n                style={styles.iframeStyle}\r\n              />\r\n            </View>\r\n            <TouchableOpacity\r\n              style={[styles.webModalButton, { backgroundColor: \"#47AD4D\", marginTop: 15 }]}\r\n              onPress={() => {\r\n                window.open(\r\n                  `https://mozilla.github.io/pdf.js/web/viewer.html?file=${encodeURIComponent(\r\n                    item.pdf_url\r\n                  )}`,\r\n                  \"_blank\"\r\n                );\r\n              }}\r\n            >\r\n              <Text style={styles.webModalButtonText}>Abrir PDF completo</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={[styles.safeArea, { backgroundColor: userTheme === \"dark\" ? \"#333\" : \"#FFF\" }]}>\r\n      <ImageBackground\r\n        source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../../assets/images/bg1.jpg\")}\r\n        style={styles.background}\r\n        resizeMode=\"cover\"\r\n      >\r\n        {/* Header */}\r\n        <View style={styles.header}>\r\n          <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/angle-left.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                marginLeft: 3,\r\n                marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n            <Image\r\n              source={require(\"../../../assets/icons/user.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 30 : 25,\r\n                height: Platform.OS === \"web\" ? 30 : 25,\r\n                marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n        {/* Botões de filtro abaixo do header */}\r\n        <View style={styles.filterButtonsContainer}>{renderTabButtons()}</View>\r\n        {/* Lista dos calendários */}\r\n        <View style={styles.listContainer}>\r\n          {loading && <ActivityIndicator size=\"large\" color=\"#007AFF\" />}\r\n          {errorMsg && <Text style={styles.error}>{errorMsg}</Text>}\r\n          {!loading && !errorMsg && filteredCalendars.length > 0 ? (\r\n            <FlatList\r\n              data={filteredCalendars}\r\n              keyExtractor={(item) => item.id}\r\n              renderItem={renderItem}\r\n              contentContainerStyle={styles.listContent}\r\n            />\r\n          ) : (\r\n            !loading && <Text style={styles.error}>Nenhum calendário para o {selectedGrade}º ano.</Text>\r\n          )}\r\n        </View>\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={email}\r\n        />\r\n      </ImageBackground>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  safeArea: { flex: 1 },\r\n  background: { flex: 1 },\r\n  header: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  filterButtonsContainer: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  tabsContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  filterButton: {\r\n    width: 50,\r\n    height: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#EEE\",\r\n    borderRadius: 15,\r\n    marginHorizontal: 5,\r\n  },\r\n  filterButtonActive: {\r\n    backgroundColor: \"#555\",\r\n  },\r\n  filterText: {\r\n    fontSize: 16,\r\n    color: \"#333\",\r\n  },\r\n  filterTextActive: {\r\n    color: \"#FFF\",\r\n  },\r\n  listContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 10,\r\n  },\r\n  listContent: { paddingBottom: 20 },\r\n  itemContainer: {\r\n    padding: 16,\r\n    marginVertical: 8,\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  itemTitle: { fontSize: 18, fontWeight: \"600\", marginBottom: 6, color: \"#333\" },\r\n  itemSub: { fontSize: 14, color: \"#666\" },\r\n  error: { color: \"#FF3B30\", fontSize: 16, textAlign: \"center\", marginTop: 10 },\r\n  previewContainer: {\r\n    backgroundColor: \"#FFF\",\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n    overflow: \"hidden\",\r\n    marginHorizontal: 4,\r\n    marginBottom: 8,\r\n  },\r\n  previewHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#EEE\",\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  previewTitle: { fontSize: 18, fontWeight: \"600\", color: \"#333\" },\r\n  pdfContainer: { flex: 1, backgroundColor: \"#000\" },\r\n  controlsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    borderTopWidth: 1,\r\n    borderColor: \"#DDD\",\r\n    backgroundColor: \"#F9F9F9\",\r\n  },\r\n  controlButton: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: \"#47AD4D\",\r\n    borderRadius: 5,\r\n  },\r\n  controlButtonText: { color: \"#FFF\", fontSize: 16 },\r\n  // Estilos para o preview inline na Web (dentro do FlatList)\r\n  webInlinePreviewContainer: {\r\n    padding: 16,\r\n    backgroundColor: \"#FFF\",\r\n    marginHorizontal: 16,\r\n    marginBottom: 16,\r\n    borderRadius: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  webPreviewTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"600\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n  },\r\n  iframeContainer: {\r\n    height: 600,\r\n    backgroundColor: \"#ccc\",\r\n  },\r\n  iframeStyle: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  webModalButton: {\r\n    backgroundColor: \"#47AD4D\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  webModalButtonText: { color: \"#FFF\", fontSize: 16 },\r\n});\r\n\r\nexport default HorariosScreen;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Modal,\r\n  Platform,\r\n  ImageBackground,\r\n  Image,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport { Button as PaperButton } from \"react-native-paper\";\r\nimport { Calendar as BigCalendar } from \"react-native-big-calendar\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport config from \"../../../config/config_db\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  EntradasEsaidas: { email: string };\r\n};\r\n\r\ntype EntradasEsaidasRouteProp = RouteProp<RootStackParamList, \"EntradasEsaidas\">;\r\n\r\ntype RecordType = {\r\n  id: number;\r\n  type: string;\r\n  data_do_registo: string;\r\n};\r\n\r\ntype DayData = {\r\n  date: string;\r\n  status: string;\r\n  records: RecordType[];\r\n};\r\n\r\ntype EventType = {\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  color: string;\r\n};\r\n\r\n/* Definição das cores usadas */\r\nconst COLORS = {\r\n  entrada: \"#47AD4D\",\r\n  saida: \"#E74C3C\",\r\n  statusNormal: \"rgba(71,173,77,0.3)\",\r\n  statusAtraso: \"rgba(255,165,0,0.3)\",\r\n  statusErro: \"rgba(255,0,0,0.3)\",\r\n  indicador: \"#999\",\r\n  darkText: \"#e0dede\",\r\n  lightText: \"#000\",\r\n  darkBackground: \"rgba(0, 0, 0, 0.5)\",\r\n};\r\n\r\n/**\r\n * Converte uma data no formato \"DD-MM-YYYY\" ou \"YYYY-MM-DD\" (com ou sem tempo)\r\n * para um objeto Date. Se a data estiver no formato ISO (\"YYYY-MM-DD\"), ela será\r\n * convertida corretamente, incluindo a parte do tempo, se presente.\r\n */\r\nconst parseDateString = (dateStr: string): Date => {\r\n  const [datePart, timePart] = dateStr.split(\" \");\r\n  const dateParts = datePart.split(\"-\");\r\n  let year: number, month: number, day: number;\r\n  if (dateParts[0].length === 4) {\r\n    [year, month, day] = dateParts.map(Number);\r\n  } else {\r\n    [day, month, year] = dateParts.map(Number);\r\n  }\r\n  let hour = 0, minute = 0, second = 0;\r\n  if (timePart) {\r\n    const timeParts = timePart.split(\":\").map(Number);\r\n    hour = timeParts[0] || 0;\r\n    minute = timeParts[1] || 0;\r\n    second = timeParts[2] || 0;\r\n  }\r\n  return new Date(year, month - 1, day, hour, minute, second);\r\n};\r\n\r\n/* Componente fixo de controles (Toolbar) para escolher modo e filtros */\r\nconst Toolbar = ({\r\n  viewMode,\r\n  setViewMode,\r\n  filterType,\r\n  setFilterType,\r\n  dynamicTextColor,\r\n}: {\r\n  viewMode: \"list\" | \"calendar\";\r\n  setViewMode: (mode: \"list\" | \"calendar\") => void;\r\n  filterType: \"todos\" | \"entrada\" | \"saida\";\r\n  setFilterType: (filter: \"todos\" | \"entrada\" | \"saida\") => void;\r\n  dynamicTextColor: string;\r\n}) => {\r\n  return (\r\n    <View style={styles.toolbarContainer}>\r\n      <View style={styles.viewModeContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => setViewMode(\"list\")}\r\n          style={[\r\n            styles.viewModeButton,\r\n            viewMode === \"list\" && styles.viewModeButtonActive,\r\n          ]}\r\n        >\r\n          <Text style={[styles.viewModeText, { color: dynamicTextColor }]}>\r\n            Lista\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => setViewMode(\"calendar\")}\r\n          style={[\r\n            styles.viewModeButton,\r\n            viewMode === \"calendar\" && styles.viewModeButtonActive,\r\n          ]}\r\n        >\r\n          <Text style={[styles.viewModeText, { color: dynamicTextColor }]}>\r\n            Calendário\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.filterContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => setFilterType(\"todos\")}\r\n          style={[\r\n            styles.filterButton,\r\n            filterType === \"todos\" && styles.filterButtonActive,\r\n          ]}\r\n        >\r\n          <Text style={[styles.filterButtonText, { color: dynamicTextColor }]}>\r\n            Todos\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => setFilterType(\"entrada\")}\r\n          style={[\r\n            styles.filterButton,\r\n            filterType === \"entrada\" && styles.filterButtonActive,\r\n          ]}\r\n        >\r\n          <Text style={[styles.filterButtonText, { color: dynamicTextColor }]}>\r\n            Entradas\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => setFilterType(\"saida\")}\r\n          style={[\r\n            styles.filterButton,\r\n            filterType === \"saida\" && styles.filterButtonActive,\r\n          ]}\r\n        >\r\n          <Text style={[styles.filterButtonText, { color: dynamicTextColor }]}>\r\n            Saídas\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst EntradasEsaidas = ({ navigation }: { navigation: any }) => {\r\n  const route = useRoute<EntradasEsaidasRouteProp>();\r\n  const { email } = route.params;\r\n  const url = `${config.baseUrl}/calendarioFiles/entradasSaidas/getEntradasEsaidas.php`;\r\n\r\n  const [days, setDays] = useState<DayData[]>([]);\r\n  const [filterType, setFilterType] = useState<\"todos\" | \"entrada\" | \"saida\">(\"todos\");\r\n  const [viewMode, setViewMode] = useState<\"list\" | \"calendar\">(\"list\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedDay, setSelectedDay] = useState<Date | null>(null);\r\n  const [weekendFeedback, setWeekendFeedback] = useState(\"\");\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"dark\" | \"light\">(\"light\");\r\n  const [settingsLoading, setSettingsLoading] = useState<boolean>(true);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n      } finally {\r\n        setSettingsLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);\r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? COLORS.darkText : COLORS.lightText;\r\n  const dynamicModalBackground = userTheme === \"dark\" ? \"#000\" : \"#fff\";\r\n\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      headerTitle: \"Entradas e Saídas\",\r\n      headerLeft: () => (\r\n        <PaperButton\r\n          onPress={() => navigation.goBack()}\r\n          mode=\"text\"\r\n          contentStyle={{ padding: 8 }}\r\n          icon={() => (\r\n            <Image\r\n              source={require(\"../../../assets/icons/angle-left.png\")}\r\n              style={\r\n                Platform.OS === \"web\"\r\n                  ? { width: 35, height: 35, tintColor: dynamicTextColor, marginTop: 30 }\r\n                  : { width: 15, height: 15, tintColor: dynamicTextColor, marginTop: 15 }\r\n              }\r\n            />\r\n          )}\r\n          style={{ alignSelf: \"flex-start\" }}\r\n          children={\"\"}\r\n        />\r\n      ),\r\n    });\r\n  }, [navigation, dynamicTextColor]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        const sortedDays: DayData[] = result.days.sort((a, b) => {\r\n          return parseDateString(b.date).getTime() - parseDateString(a.date).getTime();\r\n        });\r\n        const sortedDaysWithRecords = sortedDays.map((day) => {\r\n          const sortedRecords = day.records.sort((a, b) => {\r\n            return parseDateString(b.data_do_registo).getTime() - parseDateString(a.data_do_registo).getTime();\r\n          });\r\n          return { ...day, records: sortedRecords };\r\n        });\r\n        setDays(sortedDaysWithRecords);\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  const renderRecord = ({ item }: { item: RecordType }) => {\r\n    if (filterType !== \"todos\" && item.type !== filterType) return null;\r\n    const bgColor = item.type === \"entrada\" ? COLORS.entrada : COLORS.saida;\r\n    return (\r\n      <View style={[styles.recordItem, { backgroundColor: bgColor }]}>\r\n        <Text style={[styles.recordText, { color: \"#fff\" }]}>{item.type.toUpperCase()}</Text>\r\n        <Text style={[styles.recordText, { color: \"#fff\" }]}>{item.data_do_registo}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderDay = ({ item }: { item: DayData }) => {\r\n    let bgColor = COLORS.statusNormal;\r\n    if (item.status === \"demasia\") bgColor = COLORS.statusAtraso;\r\n    else if (item.status === \"demasiadas\") bgColor = COLORS.statusErro;\r\n\r\n    const filteredRecords = filterType === \"todos\"\r\n      ? item.records\r\n      : item.records.filter((r) => r.type === filterType);\r\n\r\n    const capitalizedStatus =\r\n      item.status.charAt(0).toUpperCase() +\r\n      item.status.slice(1).toLowerCase();\r\n\r\n    return (\r\n      <View style={[styles.dayContainer, { backgroundColor: bgColor }]}>\r\n        <View style={styles.dayHeader}>\r\n          <Text style={[styles.dayHeaderText, { color: dynamicTextColor }]}>\r\n            {item.date} - {capitalizedStatus}\r\n          </Text>\r\n        </View>\r\n        <FlatList\r\n          data={filteredRecords}\r\n          keyExtractor={(record) => record.id.toString()}\r\n          renderItem={renderRecord}\r\n          scrollEnabled={false}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const combinedEvents: EventType[] = [];\r\n  days.forEach((day) => {\r\n    day.records.forEach((record) => {\r\n      const start = parseDateString(record.data_do_registo);\r\n      const end = new Date(start.getTime() + 30 * 60000);\r\n      const title = `${record.type.toUpperCase()} - ${start.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}`;\r\n      combinedEvents.push({\r\n        title,\r\n        start,\r\n        end,\r\n        color: record.type === \"entrada\" ? COLORS.entrada : COLORS.saida,\r\n      });\r\n    });\r\n  });\r\n\r\n  const filteredCombinedEvents =\r\n    filterType === \"todos\"\r\n      ? combinedEvents\r\n      : combinedEvents.filter((e) => e.title.toLowerCase().includes(filterType));\r\n\r\n  const calendarEvents: EventType[] = [];\r\n  const groups = filteredCombinedEvents.reduce(\r\n    (acc: { [key: string]: EventType[] }, event) => {\r\n      const dateKey = event.start.toISOString().split(\"T\")[0];\r\n      if (!acc[dateKey]) acc[dateKey] = [];\r\n      acc[dateKey].push(event);\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n  Object.keys(groups).forEach((dayKey) => {\r\n    const events = groups[dayKey].sort((a, b) => b.start.getTime() - a.start.getTime());\r\n    if (events.length > 2) {\r\n      const ellipsisStart = new Date(events[1].start.getTime() - 1);\r\n      const ellipsisEnd = new Date(ellipsisStart.getTime() + 30 * 60000);\r\n      calendarEvents.push(events[0], events[1], {\r\n        title: \"...\",\r\n        start: ellipsisStart,\r\n        end: ellipsisEnd,\r\n        color: COLORS.indicador,\r\n      });\r\n    } else {\r\n      calendarEvents.push(...events);\r\n    }\r\n  });\r\n\r\n  const dayEvents = selectedDay\r\n    ? combinedEvents.filter((event) => {\r\n        const eventDate = event.start.toISOString().split(\"T\")[0];\r\n        const selectedDate = selectedDay.toISOString().split(\"T\")[0];\r\n        return eventDate === selectedDate;\r\n      })\r\n    : [];\r\n\r\n  const calendarHeight = Platform.OS === \"web\" ? 500 : 550;\r\n\r\n  const renderContent = () => {\r\n    if (viewMode === \"list\") {\r\n      return (\r\n        <FlatList\r\n          data={days}\r\n          keyExtractor={(item) => item.date}\r\n          renderItem={renderDay}\r\n          contentContainerStyle={styles.listContent}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.calendarWrapper}>\r\n          {weekendFeedback !== \"\" && (\r\n            <View style={styles.toast}>\r\n              <Text style={styles.toastText}>{weekendFeedback}</Text>\r\n            </View>\r\n          )}\r\n          <View\r\n            style={{\r\n              backgroundColor: userTheme === \"dark\" ? \"rgba(0, 0, 0, 0.7)\" : \"#fff\",\r\n              height: calendarHeight,\r\n              borderRadius: 5,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <BigCalendar\r\n              events={calendarEvents}\r\n              height={calendarHeight}\r\n              mode=\"month\"\r\n              swipeEnabled={true}\r\n              weekStartsOn={1}\r\n              showTime={false}\r\n              onPressCell={(date) => {\r\n                const clickedDate = new Date(date);\r\n                const dayOfWeek = clickedDate.getDay();\r\n                if (dayOfWeek === 0 || dayOfWeek === 6) {\r\n                  if (Platform.OS === \"android\") {\r\n                    ToastAndroid.show(\"Não pode selecionar um fim de semana\", ToastAndroid.LONG);\r\n                  } else {\r\n                    setWeekendFeedback(\"Não pode selecionar um fim de semana\");\r\n                    setTimeout(() => setWeekendFeedback(\"\"), 2000);\r\n                  }\r\n                  return;\r\n                }\r\n                setSelectedDay(clickedDate);\r\n                setModalVisible(true);\r\n              }}\r\n              calendarContainerStyle={{\r\n                height: calendarHeight,\r\n                borderRadius: 5,\r\n                overflow: \"hidden\",\r\n              }}\r\n              headerContainerStyle={{\r\n                backgroundColor: userTheme === \"dark\" ? \"rgba(0, 0, 0, 0.5)\" : \"#fff\",\r\n                borderTopLeftRadius: 5,\r\n                borderTopRightRadius: 5,\r\n                overflow: \"hidden\",\r\n              }}\r\n              renderEvent={(event: EventType) => (\r\n                <View style={[styles.eventRectangle, { backgroundColor: event.color }]}>\r\n                  <Text style={styles.eventRectangleText} numberOfLines={1}>\r\n                    {event.title}\r\n                  </Text>\r\n                </View>\r\n              )}\r\n            />\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (settingsLoading || !days.length) {\r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../../assets/images/bg1.jpg\")\r\n        }\r\n        style={styles.loadingBackground}\r\n      >\r\n        {userTheme === \"dark\" && <View style={styles.darkOverlay} />}\r\n        <View style={styles.centered}>\r\n          <ActivityIndicator size=\"large\" color={\"#47AD4D\"} />\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require(\"../../../assets/images/bg1.jpg\")\r\n      }\r\n      style={{ flex: 1 }}\r\n    >\r\n      {userTheme === \"dark\" && <View style={styles.darkOverlay} />}\r\n       <View\r\n        style={{\r\n          width: \"100%\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n          paddingHorizontal: 10,\r\n          paddingBottom: 10,\r\n          position: \"absolute\",\r\n          top: 0,\r\n          zIndex: 10,\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/angle-left.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 35 : 23,\r\n              height: Platform.OS === \"web\" ? 35 : 25,\r\n              marginLeft: 3,\r\n              marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n              tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/user.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 30 : 25,\r\n              height: Platform.OS === \"web\" ? 30 : 25,\r\n              marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n              tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.container}>\r\n        <Toolbar \r\n          viewMode={viewMode}\r\n          setViewMode={setViewMode}\r\n          filterType={filterType}\r\n          setFilterType={setFilterType}\r\n          dynamicTextColor={dynamicTextColor}\r\n        />\r\n        {renderContent()}\r\n      </View>\r\n      {/* Modal para visualização do dia */}\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <View style={[styles.modalContainer, { backgroundColor: dynamicModalBackground }]}>\r\n          {/* Cabeçalho do modal com botões: esquerda fecha o modal, direita abre as configurações */}\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n              paddingHorizontal: 10,\r\n              paddingBottom: 10,\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 10,\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            <TouchableOpacity onPress={() => setModalVisible(false)} style={{ flex: 1 }}>\r\n              <Image\r\n                source={require(\"../../../assets/icons/angle-left.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 35 : 23,\r\n                  height: Platform.OS === \"web\" ? 35 : 25,\r\n                  marginLeft: 3,\r\n                  marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n              <Image\r\n                source={require(\"../../../assets/icons/user.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 30 : 25,\r\n                  height: Platform.OS === \"web\" ? 30 : 25,\r\n                  marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          {selectedDay && (\r\n            <View style={styles.modalCalendarWrapper}>\r\n              <BigCalendar\r\n                date={selectedDay}\r\n                events={dayEvents}\r\n                height={500}\r\n                mode=\"day\"\r\n                swipeEnabled={true}\r\n                showTime={false}\r\n                eventCellStyle={(event: EventType) => ({\r\n                  backgroundColor: event.color,\r\n                  height: 20,\r\n                  marginVertical: 2,\r\n                  paddingHorizontal: 2,\r\n                  borderRadius: 3,\r\n                })}\r\n                headerContainerStyle={{\r\n                  backgroundColor: dynamicModalBackground,\r\n                  height: 40,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  ...(userTheme === \"dark\" && {\r\n                    borderWidth: 1,\r\n                    borderColor: \"#fff\",\r\n                    borderRadius: 20,\r\n                    paddingHorizontal: 10,\r\n                  }),\r\n                }}\r\n                calendarContainerStyle={{ backgroundColor: \"transparent\" }}\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n      </Modal>\r\n      {/* Modal com configurações da conta */}\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  darkOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: COLORS.darkBackground,\r\n    zIndex: 1,\r\n  },\r\n  loadingBackground: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: \"97%\",\r\n    alignSelf: \"center\",\r\n    marginTop: 80,\r\n    zIndex: 2,\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loadingText: {\r\n    fontSize: 18,\r\n    marginTop: 10,\r\n  },\r\n  toolbarContainer: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n  },\r\n  viewModeContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  viewModeButton: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"rgba(194,194,194,0.6)\",\r\n    borderRadius: 20,\r\n    marginHorizontal: 5,\r\n  },\r\n  viewModeButtonActive: {\r\n    backgroundColor: \"rgba(82,82,82,0.7)\",\r\n  },\r\n  viewModeText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  filterContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  filterButton: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"rgba(194,194,194,0.6)\",\r\n    borderRadius: 20,\r\n    marginHorizontal: 5,\r\n  },\r\n  filterButtonActive: {\r\n    backgroundColor: \"rgba(82,82,82,0.7)\",\r\n  },\r\n  filterButtonText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  listContent: {\r\n    paddingBottom: 20,\r\n  },\r\n  dayContainer: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n  },\r\n  dayHeader: {\r\n    padding: 10,\r\n    borderBottomWidth: 2,\r\n  },\r\n  dayHeaderText: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  recordItem: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n    marginHorizontal: 2,\r\n    marginVertical: 3,\r\n    borderRadius: 5,\r\n  },\r\n  recordText: {\r\n    fontSize: 16,\r\n  },\r\n  calendarWrapper: {\r\n    flex: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    paddingTop: 40,\r\n  },\r\n  modalHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 15,\r\n  },\r\n  modalCalendarWrapper: {\r\n    flex: 1,\r\n    backgroundColor: \"transparent\",\r\n    margin: 10,\r\n  },\r\n  eventRectangle: {\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  eventRectangleText: {\r\n    color: \"#fff\",\r\n    fontSize: 12,\r\n  },\r\n  toast: {\r\n    position: \"absolute\",\r\n    top: 5,\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 20,\r\n    zIndex: 1000,\r\n  },\r\n  toastText: {\r\n    color: \"#fff\",\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default EntradasEsaidas;","import React, { useState, useEffect } from \"react\";\r\nimport { \r\n  View, \r\n  StyleSheet, \r\n  ScrollView, \r\n  Platform, \r\n  ImageBackground, \r\n  ActivityIndicator, \r\n  Modal, \r\n  TouchableOpacity, \r\n  Alert, \r\n  Image, \r\n  StatusBar\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { Text, TextInput, Button, useTheme, IconButton } from \"react-native-paper\";\r\nimport { Calendar as BigCalendar } from \"react-native-big-calendar\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config_db\";\r\nimport { useRoute, useNavigation, RouteProp } from \"@react-navigation/native\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  AddEventsScreen: { email: string };\r\n};\r\n\r\ntype AddEventsScreenRouteProp = RouteProp<RootStackParamList, \"AddEventsScreen\">;\r\n\r\nconst colorOptions = [\r\n  { value: \"#FF6347\", name: \"Tomate\" },\r\n  { value: \"#DC143C\", name: \"Carmesim\" },\r\n  { value: \"#FF4500\", name: \"Vermelho-Laranja\" },\r\n  { value: \"#8A2BE2\", name: \"Azul-Violeta\" },\r\n  { value: \"#5F9EA0\", name: \"Azul-Cadete\" },\r\n  { value: \"#2E8B57\", name: \"Verde-Mar\" },\r\n  { value: \"#FF8C00\", name: \"Laranja-Escuro\" },\r\n  { value: \"#9932CC\", name: \"Orquídea-Escura\" },\r\n  { value: \"#20B2AA\", name: \"Verde-Mar-Claro\" },\r\n  { value: \"#4682B4\", name: \"Azul-Aço\" },\r\n];\r\n\r\nconst getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / 86400000) + 1) / 7);\r\n};\r\n\r\nconst getCalendarMode = (start: Date, end: Date, isTask: boolean) => {\r\n  if (isTask) return \"day\";\r\n  if (start.toDateString() === end.toDateString()) return \"day\";\r\n  const startWeek = getWeekNumber(start);\r\n  const endWeek = getWeekNumber(end);\r\n  if (start.getDay() === 6 && end.getDay() === 1) return \"month\";\r\n  if (startWeek === endWeek) return \"week\";\r\n  const diffDays = (end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24);\r\n  if (diffDays > 7) return \"month\";\r\n  return \"week\";\r\n};\r\n\r\nconst validateTimesAndDates = (\r\n  startDate: Date,\r\n  startTime: Date,\r\n  endTime: Date,\r\n  isTask: boolean\r\n) => {\r\n  const warnings: string[] = [];\r\n  const parseTime = (timeObj: Date) => {\r\n    const hours = timeObj.getHours();\r\n    const minutes = timeObj.getMinutes();\r\n    return { hours, minutes };\r\n  };\r\n  if (isTask) {\r\n    const { hours, minutes } = parseTime(startTime);\r\n    if (hours > 17 || (hours === 17 && minutes >= 15)) {\r\n      warnings.push(\"A hora da tarefa é após 17:15.\");\r\n    }\r\n  } else {\r\n    const { hours: startH, minutes: startM } = parseTime(startTime);\r\n    const { hours: endH, minutes: endM } = parseTime(endTime);\r\n    if (startH > 17 || (startH === 17 && startM >= 15)) {\r\n      warnings.push(\"A hora de início é após 17:15.\");\r\n    }\r\n    if (endH > 17 || (endH === 17 && endM >= 15)) {\r\n      warnings.push(\"A hora de fim é após 17:15.\");\r\n    }\r\n  }\r\n  const dayOfWeek = startDate.getDay();\r\n  if (dayOfWeek === 0 || dayOfWeek === 6) {\r\n    warnings.push(\"A data selecionada é no fim de semana.\");\r\n  }\r\n  return warnings;\r\n};\r\n\r\nconst AddEventsScreen = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation<any>();\r\n  const route = useRoute<AddEventsScreenRouteProp>();\r\n  const { email } = route.params;\r\n\r\n  const url_adicionarEventos = `${config.baseUrl}/calendarioFiles/professor/eventos/add_event.php`;\r\n  const url_addTask = `${config.baseUrl}/calendarioFiles/professor/tarefas/add_task.php`;\r\n  const url_profInfo = `${config.baseUrl}/calendarioFiles/professor/fetchProfessorInfo.php`;\r\n\r\n  const [newEvent, setNewEvent] = useState({ title: \"\", description: \"\" });\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\r\n  const [customCategory, setCustomCategory] = useState<string>(\"\");\r\n  const [selectedType, setSelectedType] = useState<string>(\"\");\r\n  const isTask = selectedType === \"Tarefa\";\r\n  const [selectedColor, setSelectedColor] = useState<string>(\"#DC143C\");\r\n  const [showColorModal, setShowColorModal] = useState<boolean>(false);\r\n\r\n  // Estados de datas e horas iniciam com o valor atual\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [endTime, setEndTime] = useState(new Date());\r\n\r\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\r\n  const [showStartTimePicker, setShowStartTimePicker] = useState(false);\r\n  const [showEndDatePicker, setShowEndDatePicker] = useState(false);\r\n  const [showEndTimePicker, setShowEndTimePicker] = useState(false);\r\n\r\n  const [turmas, setTurmas] = useState<any[]>([]);\r\n  const [selectedTurmas, setSelectedTurmas] = useState<any[]>([]);\r\n  const [showTurmaModal, setShowTurmaModal] = useState(false);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [fieldErrors, setFieldErrors] = useState<{ [key: string]: boolean }>({});\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        // Se for web, usamos localStorage; se não, usamos SecureStore\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        // Se o background existir e não começar com \"http\", concatenamos com o baseUrl\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n        console.log(\"Erro ao carregar configurações.\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);  \r\n\r\n  // Modal para quando não houver turmas\r\n  const showNoTurmasModal = turmas.length === 0;\r\n\r\n  const displayError = (msg: string) => {\r\n    setError(msg);\r\n    if (Platform.OS === \"web\") {\r\n      window.alert(msg);\r\n    } else {\r\n      ToastAndroid.show(msg, ToastAndroid.LONG);\r\n    }\r\n  };\r\n\r\n  const displaySuccess = (msg: string) => {\r\n    setSuccess(msg);\r\n    if (Platform.OS === \"web\") {\r\n      // Para web, mostra um alert simples\r\n      window.alert(msg);\r\n    } else {\r\n      ToastAndroid.show(msg, ToastAndroid.LONG);\r\n    }\r\n  };\r\n\r\n  const validateFields = () => {\r\n    const errorsObj: { [key: string]: boolean } = {};\r\n  \r\n    if (isTask) {\r\n      if (!selectedCategory) errorsObj.category = true;\r\n      if (selectedCategory === \"Outro\" && !customCategory.trim())\r\n        errorsObj.customCategory = true;\r\n      if (!newEvent.title.trim()) errorsObj.title = true;\r\n      if (!startDate) errorsObj.startDate = true;\r\n      if (!startTime) errorsObj.startTime = true;\r\n    } else {\r\n      if (!newEvent.title.trim()) errorsObj.title = true;\r\n      if (!startDate) errorsObj.startDate = true;\r\n      if (!startTime) errorsObj.startTime = true;\r\n      if (!endDate) errorsObj.endDate = true;\r\n      if (!endTime) errorsObj.endTime = true;\r\n      if (selectedTurmas.length === 0) errorsObj.turmas = true;\r\n    }\r\n  \r\n    return errorsObj;\r\n  };\r\n\r\n  // Handlers para DateTimePicker\r\n  const onChangeStartDate = (event: any, selectedDate?: Date) => {\r\n    setShowStartDatePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedDate) {\r\n      setStartDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  const onChangeStartTime = (event: any, selectedTime?: Date) => {\r\n    setShowStartTimePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedTime) {\r\n      setStartTime(selectedTime);\r\n    }\r\n  };\r\n\r\n  const onChangeEndDate = (event: any, selectedDate?: Date) => {\r\n    setShowEndDatePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedDate) {\r\n      setEndDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  const onChangeEndTime = (event: any, selectedTime?: Date) => {\r\n    setShowEndTimePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedTime) {\r\n      setEndTime(selectedTime);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateObj: Date) => dateObj.toLocaleDateString(\"pt-PT\");\r\n  const formatTime = (timeObj: Date) =>\r\n    timeObj.toLocaleTimeString(\"pt-PT\", { hour: \"2-digit\", minute: \"2-digit\" });\r\n\r\n  // Busca as turmas associadas ao professor\r\n  useEffect(() => {\r\n    axios\r\n      .post(url_profInfo, { email })\r\n      .then((response) => {\r\n        console.log(\"Response:\", response.data);\r\n        if (response.data && Array.isArray(response.data.turmas)) {\r\n          setTurmas(response.data.turmas);\r\n        } else {\r\n          setTurmas([]);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setTurmas([]);\r\n      });\r\n  }, [email]);\r\n\r\n  // Define o tipo padrão conforme a categoria selecionada\r\n  useEffect(() => {\r\n    if (selectedCategory) {\r\n      if (selectedCategory === \"Trabalho de casa\") {\r\n        if (!selectedType) setSelectedType(\"Tarefa\");\r\n      } else {\r\n        if (!selectedType) setSelectedType(\"Evento\");\r\n      }\r\n    } else {\r\n      setSelectedType(\"\");\r\n    }\r\n  }, [selectedCategory]);\r\n\r\n  const toggleTurma = (turma: any) => {\r\n    if (selectedTurmas.some((item) => item.turma === turma.turma && item.ano === turma.ano)) {\r\n      setSelectedTurmas(selectedTurmas.filter((item) => !(item.turma === turma.turma && item.ano === turma.ano)));\r\n    } else {\r\n      setSelectedTurmas([...selectedTurmas, turma]);\r\n    }\r\n  };\r\n\r\n  const handlePreview = () => {\r\n    const errorsObj = validateFields();\r\n    if (Object.keys(errorsObj).length > 0) {\r\n      setFieldErrors(errorsObj);\r\n      displayError(\"Por favor, preencha todos os campos obrigatórios.\");\r\n      return;\r\n    } else {\r\n      setFieldErrors({});\r\n    }\r\n\r\n    // Para eventos, se a data/hora de fim for anterior à de início, ajusta para os valores escolhidos\r\n    if (!isTask) {\r\n      const startDateTime = new Date(\r\n        startDate.getFullYear(),\r\n        startDate.getMonth(),\r\n        startDate.getDate(),\r\n        startTime.getHours(),\r\n        startTime.getMinutes()\r\n      );\r\n      const endDateTime = new Date(\r\n        endDate.getFullYear(),\r\n        endDate.getMonth(),\r\n        endDate.getDate(),\r\n        endTime.getHours(),\r\n        endTime.getMinutes()\r\n      );\r\n      if (startDateTime > endDateTime || startDateTime.getTime() === endDateTime.getTime()) {\r\n        Alert.alert(\r\n          \"Erro de Data/Hora\",\r\n          \"A data e hora de início não pode ser posterior ou igual à data e hora de fim.\"\r\n        );\r\n        return;\r\n      }\r\n      if (endDateTime < startDateTime) {\r\n        setEndDate(startDate);\r\n        setEndTime(startTime);\r\n      }\r\n    }\r\n    setError(\"\");\r\n    const warnings = validateTimesAndDates(startDate, startTime, endTime, isTask);\r\n    if (warnings.length > 0) {\r\n      const warningMessage = warnings.join(\"\\n\") + \"\\nTem certeza que deseja continuar?\";\r\n      Alert.alert(\"Aviso\", warningMessage, [\r\n        { text: \"Cancelar\", style: \"cancel\" },\r\n        { text: \"Continuar\", onPress: () => setShowPreview(true) }\r\n      ]);\r\n    } else {\r\n      setShowPreview(true);\r\n    }\r\n  };\r\n\r\n  const handleCreateEventOrTask = () => {\r\n    const eventData: any = {\r\n      email: email || \"\",\r\n      title: newEvent.title,\r\n      description: newEvent.description.trim() ? newEvent.description : \"\",\r\n      category: selectedCategory === \"Outro\" ? customCategory : selectedCategory,\r\n      type: selectedType,\r\n      color: selectedColor\r\n    };\r\n  \r\n    if (isTask) {\r\n      eventData.data_da_tarefa = `${formatDate(startDate)} ${formatTime(startTime)}`;\r\n    } else {\r\n      eventData.start_date = formatDate(startDate);\r\n      eventData.start_time = formatTime(startTime);\r\n      eventData.end_date = formatDate(endDate);\r\n      eventData.end_time = formatTime(endTime);\r\n    }\r\n  \r\n    if (selectedTurmas.length > 0) {\r\n      eventData.turma = selectedTurmas[0].turma;\r\n      eventData.ano = selectedTurmas[0].ano;\r\n    } else {\r\n      displayError(\"Pedimos que selecione pelo menos uma turma.\");\r\n      return;\r\n    }\r\n  \r\n    const endpoint = isTask ? url_addTask : url_adicionarEventos;\r\n  \r\n    axios\r\n      .post(endpoint, eventData)\r\n      .then((response) => {\r\n        if (response.data.success !== true) {\r\n          displayError(response.data.message || \"Ocorreu um erro ao tentar adicionar um novo evento/tarefa, pedimos que tente novamente mais tarde.\");\r\n          return;\r\n        } else {\r\n          const successMessage = isTask ? \"Você conseguiu criar uma nova tarefa com sucesso!\" : \"Você conseguiu criar um novo evento com sucesso!\";\r\n          displaySuccess(successMessage);\r\n          setTimeout(() => {\r\n            navigation.goBack();\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        displayError(\"Erro ao adicionar. Tente novamente mais tarde.\");\r\n      });\r\n  };\r\n    \r\n  // Calcula o bloco para tarefas: \r\n  // Se a hora selecionada for entre 00:00 e 00:29, o bloco será do horário selecionado até 30 minutos depois;\r\n  // Caso contrário, será das 30 minutos antes até o horário selecionado.\r\n  let taskBlockStart = new Date(startDate);\r\n  let taskBlockEnd = new Date(startDate);\r\n  if (isTask) {\r\n    const selectedHour = startTime.getHours();\r\n    const selectedMinutes = startTime.getMinutes();\r\n    // Define a hora selecionada\r\n    taskBlockEnd.setHours(selectedHour, selectedMinutes, 0, 0);\r\n    if (selectedHour === 0 && selectedMinutes < 30) {\r\n      // Bloco de 30 minutos para baixo\r\n      taskBlockStart = new Date(taskBlockEnd.getTime());\r\n      taskBlockEnd = new Date(taskBlockEnd.getTime() + 30 * 60000);\r\n    } else {\r\n      // Bloco de 30 minutos antes\r\n      taskBlockStart = new Date(taskBlockEnd.getTime() - 30 * 60000);\r\n    }\r\n  }\r\n  \r\n  // Define os eventos do dia para o calendário\r\n  const dayEvents = [\r\n    {\r\n      // Concatena o título com o horário selecionado\r\n      title: `${newEvent.title} - ${formatTime(startTime)}`,\r\n      start: isTask\r\n        ? taskBlockStart\r\n        : new Date(\r\n            startDate.getFullYear(),\r\n            startDate.getMonth(),\r\n            startDate.getDate(),\r\n            startTime.getHours(),\r\n            startTime.getMinutes()\r\n          ),\r\n      end: isTask\r\n        ? taskBlockEnd\r\n        : new Date(\r\n            endDate.getFullYear(),\r\n            endDate.getMonth(),\r\n            endDate.getDate(),\r\n            endTime.getHours(),\r\n            endTime.getMinutes()\r\n          ),\r\n      color: selectedColor\r\n    }\r\n  ];  \r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#e0dede\" : \"#000\";\r\n  if (loading) { \r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../assets/images/bg1.jpg\")\r\n        }\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userTheme === \"dark\" && (\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              zIndex: 1,\r\n            }}\r\n          />\r\n        )}\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <ActivityIndicator size=\"large\" color={\"#47AD4D\"} />\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  if (showPreview) {\r\n    return (\r\n      <ImageBackground source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")} style={styles.background}>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n                    paddingHorizontal: 10,\r\n                    paddingBottom: 10,\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    zIndex: 10,\r\n                    backgroundColor: \"white\",\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: \"#ddd\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      navigation.goBack();\r\n                    }}\r\n                    style={{ flex: 1 }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../../assets/icons/angle-left.png\")}\r\n                      style={{\r\n                        width: Platform.OS === \"web\" ? 35 : 23,\r\n                        height: Platform.OS === \"web\" ? 35 : 25,\r\n                        marginLeft: 3,\r\n                        marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                        tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                    <Image\r\n                      source={require(\"../../assets/icons/user.png\")}\r\n                      style={{\r\n                        width: Platform.OS === \"web\" ? 30 : 25,\r\n                        height: Platform.OS === \"web\" ? 30 : 25,\r\n                        marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                        tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n            <BigCalendar\r\n              date={startDate}\r\n              events={dayEvents}\r\n              height={500}\r\n              mode={getCalendarMode(startDate, isTask ? startDate : endDate, isTask)}\r\n              swipeEnabled={true}\r\n              showTime={false}\r\n              eventCellStyle={(event) => (event.color ? { backgroundColor: event.color } : {})}\r\n            />\r\n            <View style={styles.previewDetails}>\r\n              <Text style={styles.previewText}>Título: {newEvent.title}</Text>\r\n              {isTask ? (\r\n                <Text style={styles.previewText}>\r\n                  Data da Tarefa: {formatDate(startDate)} às {formatTime(startTime)}\r\n                </Text>\r\n              ) : (\r\n                <>\r\n                  <Text style={styles.previewText}>\r\n                    Início: {formatDate(startDate)} às {formatTime(startTime)}\r\n                  </Text>\r\n                  <Text style={styles.previewText}>\r\n                    Fim: {formatDate(endDate)} às {formatTime(endTime)}\r\n                  </Text>\r\n                </>\r\n              )}\r\n              <Text style={styles.previewText}>\r\n                Turmas Selecionadas:{\" \"}\r\n                {selectedTurmas.map((t, index) => (\r\n                  <Text key={index}>\r\n                    {t.ano} - {t.turma}\r\n                    {index < selectedTurmas.length - 1 ? \", \" : \"\"}\r\n                  </Text>\r\n                ))}\r\n              </Text>\r\n              <Text style={styles.previewText}>\r\n                Categoria: {selectedCategory === \"Outro\" ? customCategory : selectedCategory}\r\n              </Text>\r\n              <Text style={styles.previewText}>Tipo: {selectedType}</Text>\r\n              <View style={styles.selectedColorDisplay}>\r\n                <View style={[styles.colorCircle, { backgroundColor: selectedColor }]} />\r\n                <Text style={styles.previewText}>Cor Selecionada</Text>\r\n              </View>\r\n            </View>\r\n            {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n            <Button mode=\"contained\" onPress={handleCreateEventOrTask} style={[styles.button, { backgroundColor: \"#47AD4D\" }]}>\r\n              Confirmar\r\n            </Button>\r\n            <Button mode=\"contained\" onPress={() => setShowPreview(false)} style={[styles.button, { backgroundColor: \"red\", marginTop: 10 }]}>\r\n              Editar\r\n            </Button>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  // Tela de formulário\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.background} \r\n    >\r\n      <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n                  paddingHorizontal: 10,\r\n                  paddingBottom: 10,\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  zIndex: 10,\r\n                  backgroundColor: \"white\",\r\n                }}\r\n              >\r\n                <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n                  <Image\r\n                    source={require(\"../../assets/icons/angle-left.png\")}\r\n                    style={{\r\n                      width: Platform.OS === \"web\" ? 35 : 23,\r\n                      height: Platform.OS === \"web\" ? 35 : 25,\r\n                      marginLeft: 3,\r\n                      marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                      tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/icons/user.png\")}\r\n                    style={{\r\n                      width: Platform.OS === \"web\" ? 30 : 25,\r\n                      height: Platform.OS === \"web\" ? 30 : 25,\r\n                      marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                      tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.formContainer}>\r\n          {turmas.length === 0 && (\r\n            <Text style={styles.infoText}>\r\n              Nenhuma turma encontrada para si. Por favor, pedimos que tente mais tarde, ou peça para ter uma turma.\r\n            </Text>\r\n          )}\r\n          <ScrollView style={styles.innerScroll} contentContainerStyle={{ paddingBottom: 100 }} nestedScrollEnabled>\r\n            <View style={[styles.inputGroup, fieldErrors.category && styles.errorBorder]}>\r\n              <Picker\r\n                selectedValue={selectedCategory}\r\n                onValueChange={(itemValue) => {\r\n                  setSelectedCategory(itemValue);\r\n                  if (itemValue !== \"Outro\") setCustomCategory(\"\");\r\n                  setSelectedType(\"\");\r\n                }}\r\n                style={styles.picker}\r\n              >\r\n                <Picker.Item label=\"Selecione a categoria\" value=\"\" />\r\n                <Picker.Item label=\"Teste\" value=\"Teste\" />\r\n                <Picker.Item label=\"Trabalho de casa\" value=\"Trabalho de casa\" />\r\n                <Picker.Item label=\"Atividade\" value=\"Atividade\" />\r\n                <Picker.Item label=\"Visita de estudo\" value=\"Visita de estudo\" />\r\n                <Picker.Item label=\"Outro\" value=\"Outro\" />\r\n              </Picker>\r\n            </View>\r\n            {selectedCategory !== \"\" && (\r\n              <>\r\n                {selectedCategory === \"Outro\" && (\r\n                  <View style={[styles.inputGroup, fieldErrors.customCategory && styles.errorBorder]}>\r\n                    <TextInput\r\n                      label=\"Categoria personalizada *\"\r\n                      value={customCategory}\r\n                      onChangeText={(text) => setCustomCategory(text)}\r\n                      mode=\"outlined\"\r\n                      error={!!fieldErrors.customCategory}\r\n                      style={styles.input}\r\n                      theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                    />\r\n                  </View>\r\n                )}\r\n                <View style={[styles.inputGroup, fieldErrors.type && styles.errorBorder]}>\r\n                  <Picker\r\n                    selectedValue={selectedType}\r\n                    onValueChange={(itemValue) => setSelectedType(itemValue)}\r\n                    style={styles.picker}\r\n                  >\r\n                    <Picker.Item label=\"Evento\" value=\"evento\" />\r\n                    <Picker.Item label=\"Tarefa\" value=\"Tarefa\" />\r\n                  </Picker>\r\n                </View>\r\n                <View style={styles.inputGroup}>\r\n                  <TouchableOpacity onPress={() => setShowColorModal(true)} style={styles.selectedColorDisplay}>\r\n                    <View style={[styles.colorCircle, { backgroundColor: selectedColor }]} />\r\n                    <Text style={styles.colorText}>Cor Selecionada</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                <TextInput\r\n                  label=\"Título *\"\r\n                  value={newEvent.title}\r\n                  onChangeText={(text) => setNewEvent({ ...newEvent, title: text })}\r\n                  mode=\"outlined\"\r\n                  error={!!fieldErrors.title}\r\n                  style={styles.input}\r\n                  theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                />\r\n                <View style={styles.inputGroup}>\r\n                  <TextInput\r\n                    label=\"Descrição\"\r\n                    value={newEvent.description}\r\n                    onChangeText={(text) => setNewEvent({ ...newEvent, description: text })}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                  />\r\n                </View>\r\n              </>\r\n            )}\r\n            \r\n            {/* Campos de Data/Hora */}\r\n            <View style={styles.inputGroup}>\r\n              <TextInput\r\n                label={isTask ? \"Data da Tarefa *\" : \"Data de Início *\"}\r\n                value={formatDate(startDate)}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                editable={false}\r\n                onPressIn={() => setShowStartDatePicker(true)}\r\n                right={<TextInput.Icon icon=\"calendar\" onPress={() => setShowStartDatePicker(true)} />}\r\n                theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n              />\r\n              {showStartDatePicker && (\r\n                <DateTimePicker\r\n                  value={startDate}\r\n                  mode=\"date\"\r\n                  display={Platform.OS === \"ios\" ? \"spinner\" : \"calendar\"}\r\n                  onChange={onChangeStartDate}\r\n                />\r\n              )}\r\n            </View>\r\n            <View style={styles.inputGroup}>\r\n              <TextInput\r\n                label={isTask ? \"Hora da Tarefa *\" : \"Hora de Início *\"}\r\n                value={formatTime(startTime)}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                editable={false}\r\n                onPressIn={() => setShowStartTimePicker(true)}\r\n                right={<TextInput.Icon icon=\"clock\" onPress={() => setShowStartTimePicker(true)} />}\r\n                theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n              />\r\n              {showStartTimePicker && (\r\n                <DateTimePicker\r\n                  value={startTime}\r\n                  mode=\"time\"\r\n                  display={Platform.OS === \"ios\" ? \"spinner\" : \"clock\"}\r\n                  is24Hour={true}\r\n                  onChange={onChangeStartTime}\r\n                />\r\n              )}\r\n            </View>\r\n            {!isTask && (\r\n              <>\r\n                <View style={styles.inputGroup}>\r\n                  <TextInput\r\n                    label=\"Data de Fim *\"\r\n                    value={formatDate(endDate)}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    editable={false}\r\n                    onPressIn={() => setShowEndDatePicker(true)}\r\n                    right={<TextInput.Icon icon=\"calendar\" onPress={() => setShowEndDatePicker(true)} />}\r\n                    theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                  />\r\n                  {showEndDatePicker && (\r\n                    <DateTimePicker\r\n                      value={endDate}\r\n                      mode=\"date\"\r\n                      display={Platform.OS === \"ios\" ? \"spinner\" : \"calendar\"}\r\n                      onChange={onChangeEndDate}\r\n                    />\r\n                  )}\r\n                </View>\r\n                <View style={styles.inputGroup}>\r\n                  <TextInput\r\n                    label=\"Hora de Fim *\"\r\n                    value={formatTime(endTime)}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    editable={false}\r\n                    onPressIn={() => setShowEndTimePicker(true)}\r\n                    right={<TextInput.Icon icon=\"clock\" onPress={() => setShowEndTimePicker(true)} />}\r\n                    theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                  />\r\n                  {showEndTimePicker && (\r\n                    <DateTimePicker\r\n                      value={endTime}\r\n                      mode=\"time\"\r\n                      display={Platform.OS === \"ios\" ? \"spinner\" : \"clock\"}\r\n                      is24Hour={true}\r\n                      onChange={onChangeEndTime}\r\n                    />\r\n                  )}\r\n                </View>\r\n              </>\r\n            )}\r\n            {selectedTurmas.length > 0 && (\r\n              <View style={styles.inputGroup}>\r\n                <Text style={styles.label}>Turmas Selecionadas:</Text>\r\n                {selectedTurmas.map((turma, index) => (\r\n                  <View key={index} style={styles.selectedTurmaRow}>\r\n                    <Text>{turma.ano} - {turma.turma}</Text>\r\n                    <IconButton\r\n                      icon=\"close\"\r\n                      size={20}\r\n                      onPress={() => toggleTurma(turma)}\r\n                    />\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            )}\r\n            <Button\r\n              mode=\"outlined\"\r\n              onPress={() => setShowTurmaModal(true)}\r\n              style={styles.addTurmaButton}\r\n              labelStyle={{ color: \"#47AD4D\" }}\r\n            >\r\n              + Adicionar turma\r\n            </Button>\r\n            {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n            {success ? <Text style={styles.successText}>{success}</Text> : null}\r\n            <Button mode=\"contained\" onPress={handlePreview} style={[styles.button, { backgroundColor: \"#47AD4D\" }]}>\r\n              Visualizar Preview\r\n            </Button>\r\n          </ScrollView>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Modal de Seleção de Turmas */}\r\n      <Modal visible={showTurmaModal} onRequestClose={() => setShowTurmaModal(false)} animationType=\"slide\" transparent>\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContainer}>\r\n            <Text style={styles.modalTitle}>Selecione uma Turma</Text>\r\n            {turmas.length === 0 ? (\r\n              <Text style={styles.infoText}>Não há turmas disponíveis para este professor.</Text>\r\n            ) : (\r\n              <ScrollView>\r\n                {turmas.map((turma, index) => (\r\n                  <TouchableOpacity \r\n                    key={index} \r\n                    style={styles.turmaRow} \r\n                    onPress={() => {\r\n                      toggleTurma(turma);\r\n                      setShowTurmaModal(false);\r\n                    }}\r\n                  >\r\n                    <Text>{turma.ano} - {turma.turma}</Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </ScrollView>\r\n            )}\r\n            <Button mode=\"contained\" onPress={() => setShowTurmaModal(false)} style={styles.modalCloseButton}>\r\n              Fechar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      {/* Modal de Seleção de Cor */}\r\n      <Modal visible={showColorModal} animationType=\"slide\" transparent>\r\n        <View style={styles.colorModalOverlay}>\r\n          <View style={styles.colorModalContainer}>\r\n            <Text style={[styles.modalTitle, { color: \"#000\" }]}>Selecionar Cor</Text>\r\n            {colorOptions.map((opt) => (\r\n              <TouchableOpacity\r\n                key={opt.value}\r\n                style={styles.colorOptionRow}\r\n                onPress={() => {\r\n                  setSelectedColor(opt.value);\r\n                  setShowColorModal(false);\r\n                }}\r\n              >\r\n                <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                <Text style={[styles.colorName, { color: \"#000\" }]}>{opt.name}</Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n            <Button mode=\"contained\" onPress={() => setShowColorModal(false)} style={styles.modalCloseButton}>\r\n              Fechar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n        <Modal\r\n          visible={showNoTurmasModal}\r\n          animationType=\"fade\"\r\n          transparent\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: 'rgba(0,0,0,0.5)',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: '80%',\r\n                backgroundColor: userTheme === 'dark' ? '#333' : '#fff',\r\n                padding: 20,\r\n                borderRadius: 8,\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              {/* Bolinha a girar */}\r\n              <ActivityIndicator\r\n                size=\"large\"\r\n                color=\"#47AD4D\"\r\n                style={{ marginBottom: 16 }}\r\n              />\r\n\r\n              {/* Texto de aviso */}\r\n              <Text\r\n                style={{\r\n                  fontSize: 16,\r\n                  textAlign: 'center',\r\n                  marginBottom: 24,\r\n                  color: dynamicTextColor,\r\n                }}\r\n              >\r\n                Não é possível criar nenhum evento porque não foram encontradas turmas.\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                {/* Tentar novamente: fecha o modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => setShowTurmaModal(false)}\r\n                  style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#47AD4D',\r\n                    paddingVertical: 10,\r\n                    borderRadius: 6,\r\n                    alignItems: 'center',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: '#fff', fontWeight: 'bold' }}>\r\n                    Tentar novamente\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                {/* Ícone voltar: faz goBack */}\r\n                <TouchableOpacity\r\n                  onPress={() => navigation.goBack()}\r\n                  style={{\r\n                    padding: 10,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Image\r\n                    source={require('../../assets/icons/angle-left.png')}\r\n                    style={{\r\n                      width: 24,\r\n                      height: 24,\r\n                      tintColor: '#47AD4D',\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingText: { marginTop: 16, fontSize: 16, color: \"#000\", textAlign: \"center\" },\r\n  background: { flex: 1 },\r\n  scrollContainer: { flexGrow: 1, padding: 5, marginTop: 70, paddingBottom: 100 },\r\n  formContainer: { flex: 1, alignSelf: \"stretch\" },\r\n  innerScroll: { flexGrow: 1 },\r\n  previewContainer: { flex: 1 },\r\n  previewDetails: { marginVertical: 15 },\r\n  previewText: { fontSize: 16, marginVertical: 2, color: \"#000\" },\r\n  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15, textAlign: \"center\" },\r\n  input: { marginBottom: 15, backgroundColor: \"#f5f5f5\", color: \"#000\", borderRadius: 8, paddingHorizontal: 10 },\r\n  inputGroup: { marginBottom: 10 },\r\n  picker: { backgroundColor: \"#f5f5f5\", color: \"#000\" },\r\n  label: { marginBottom: 5, fontWeight: \"bold\" },\r\n  button: { borderRadius: 8 },\r\n  errorText: { color: \"red\", textAlign: \"center\", marginBottom: 10 },\r\n  successText: { color: \"green\", textAlign: \"center\", marginBottom: 10 },\r\n  infoText: { color: \"red\", textAlign: \"center\", marginBottom: 10 },\r\n  loaderContainer: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n  colorModalOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  colorModalContainer: { width: \"80%\", backgroundColor: \"#fff\", borderRadius: 10, padding: 20 },\r\n  modalOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  modalContainer: { width: \"80%\", backgroundColor: \"#fff\", borderRadius: 10, padding: 20, maxHeight: \"80%\" },\r\n  modalTitle: { fontSize: 18, fontWeight: \"bold\", marginBottom: 15, textAlign: \"center\" },\r\n  colorOptionRow: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 10 },\r\n  colorCircle: { width: 30, height: 30, borderRadius: 15, marginRight: 10 },\r\n  colorName: { fontSize: 16 },\r\n  modalCloseButton: { backgroundColor: \"#47AD4D\", marginTop: 10 },\r\n  selectedColorDisplay: { flexDirection: \"row\", alignItems: \"center\", marginTop: 10 },\r\n  colorText: { fontSize: 16, color: \"#47AD4D\" },\r\n  backButton: { alignSelf: \"flex-start\" },\r\n  errorBorder: { borderWidth: 1, borderColor: \"red\", borderRadius: 8, marginBottom: 10 },\r\n  turmaRow: { flexDirection: \"row\", alignItems: \"center\", paddingVertical: 5 },\r\n  selectedTurmaRow: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", borderWidth: 1, borderColor: \"#ccc\", padding: 8, borderRadius: 8, marginVertical: 3 },\r\n  addTurmaButton: { borderRadius: 8, marginVertical: 10 },\r\n  noTurmaOverlay: { \r\n    flex: 1, \r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\", \r\n    justifyContent: \"center\", \r\n    alignItems: \"center\" \r\n  },\r\n  noTurmaModal: { \r\n    width: \"80%\", \r\n    backgroundColor: \"#fff\", \r\n    borderRadius: 10, \r\n    padding: 20, \r\n    alignItems: \"center\" \r\n  },\r\n  noTurmaText: { \r\n    fontSize: 16, \r\n    textAlign: \"center\", \r\n    marginBottom: 20 \r\n  },\r\n  noTurmaButton: { \r\n    backgroundColor: \"#47AD4D\" \r\n  }\r\n});\r\n\r\nexport default AddEventsScreen;","// src/screens/AdicionarNotasScreen.tsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  Image,\r\n  ActivityIndicator,\r\n  Alert,\r\n  ScrollView,\r\n  Platform,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  useTheme,\r\n  Snackbar,\r\n  Checkbox,\r\n} from \"react-native-paper\";\r\nimport axios from \"axios\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport config from \"../../config/config_db\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\ntype RootStackParamList = {\r\n  AdicionarNotas: { email: string };\r\n};\r\ntype Props = StackScreenProps<RootStackParamList, \"AdicionarNotas\">;\r\n\r\ninterface ProfessorData {\r\n  user_id: number;\r\n  disciplina: number;\r\n}\r\ninterface Turma { id: number; turma: string; ano: number; }\r\ninterface Modulo { numero_do_modulo: number; nome: string; }\r\ninterface Aluno {\r\n  id: number;\r\n  email: string;\r\n  nota?: string;\r\n  comentario_privado?: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst url_saveNote       = `${config.baseUrl}/calendarioFiles/professor/notas/saveNote.php`;\r\nconst url_fetchProfessor = `${config.baseUrl}/calendarioFiles/professor/fetchProfessorInfo.php`;\r\nconst url_fetchTurmas    = `${config.baseUrl}/calendarioFiles/professor/fetch_turmas.php`;\r\nconst url_fetchAlunos    = `${config.baseUrl}/calendarioFiles/professor/fetchStudents.php`;\r\nconst url_fetchModulos   = `${config.baseUrl}/calendarioFiles/professor/fetchModulos.php`;\r\n\r\nconst AdicionarNotasScreen: React.FC<Props> = ({ route, navigation }) => {\r\n  const { email } = route.params;\r\n  const theme = useTheme();\r\n\r\n  const [backgroundUrl, setBackgroundUrl]   = useState<string|null>(null);\r\n  const [userTheme, setUserTheme]           = useState<\"light\"|\"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [loading, setLoading]               = useState(true);\r\n  const [dataLoading, setDataLoading]       = useState(true);\r\n  const [submissionLoading, setSubmissionLoading] = useState(false);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n  const [selectedModuloNum, setSelectedModuloNum] = useState<number | null>(null);\r\n  const [selectedModuloName, setSelectedModuloName] = useState<string>(\"\");\r\n\r\n  const [professorData, setProfessorData]   = useState<ProfessorData|null>(null);\r\n  const [availableTurmas, setAvailableTurmas] = useState<Turma[]>([]);\r\n  const [selectedTurma, setSelectedTurma]   = useState<Turma|null>(null);\r\n\r\n  const [modulos, setModulos]               = useState<Modulo[]>([]);\r\n  const [selectedModulo, setSelectedModulo] = useState<string>(\"\");\r\n\r\n  const [alunos, setAlunos]                 = useState<Aluno[]>([]);\r\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n\r\n  function showMessage(title: string, message: string) {\r\n    if (Platform.OS === \"web\") {\r\n      setSnackbarMessage(`${title}: ${message}`);\r\n      setSnackbarVisible(true);\r\n    } else {\r\n      Alert.alert(title, message);\r\n    }\r\n  }\r\n\r\n  // — carrega bg + tema —\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let bg: string|null, mode: string|null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) bg = `${config.baseUrl}/${bg}`;\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // — busca professor + turmas —\r\n  useEffect(() => {\r\n    (async () => {\r\n      setDataLoading(true);\r\n      try {\r\n        const profRes = await axios.post(url_fetchProfessor, { email });\r\n        if (!profRes.data.success) throw new Error(profRes.data.message);\r\n        setProfessorData({\r\n          user_id: profRes.data.professor.user_id,\r\n          disciplina: profRes.data.professor.disciplina,\r\n        });\r\n\r\n        const turRes = await axios.post(url_fetchTurmas, { email });\r\n        if (!turRes.data.success) throw new Error(turRes.data.message);\r\n        setAvailableTurmas(turRes.data.turmas);\r\n      } catch (err: any) {\r\n        showMessage(\"Erro\", err.message);\r\n      } finally {\r\n        setDataLoading(false);\r\n      }\r\n    })();\r\n  }, [email]);\r\n\r\n  // — busca módulos —\r\n  useEffect(() => {\r\n    if (!professorData || !selectedTurma) return;\r\n    axios.post(url_fetchModulos, {\r\n      professor_id: professorData.user_id,\r\n      disciplina: professorData.disciplina,\r\n      turma_id: selectedTurma.id,\r\n    })\r\n    .then(resp => {\r\n      if (!resp.data.success) throw new Error(resp.data.message);\r\n      setModulos(resp.data.modulos);\r\n      setSelectedModulo(\"\");\r\n    })\r\n    .catch(err => showMessage(\"Erro\", err.message))\r\n  }, [professorData, selectedTurma]);\r\n\r\n  // — busca alunos —\r\n  useEffect(() => {\r\n    if (!professorData || !selectedTurma || !selectedModulo) return;\r\n    (async () => {\r\n      try {\r\n        const res = await axios.post(url_fetchAlunos, {\r\n          professor_id: professorData.user_id,\r\n          disciplina: professorData.disciplina,\r\n          turma: selectedTurma.turma,\r\n          ano: selectedTurma.ano,\r\n          modulo: selectedModulo,\r\n        });\r\n        if (!res.data.success) throw new Error(res.data.message);\r\n        setAlunos((res.data.students || []).map((a: any) => ({ ...a, selected: false })));\r\n      } catch (err: any) {\r\n        showMessage(\"Erro\", err.message);\r\n        setAlunos([]);\r\n      }\r\n    })();\r\n  }, [professorData, selectedTurma, selectedModulo]);\r\n  \r\n  const handleSaveNote = () => {\r\n    if (!professorData || !selectedTurma || selectedModuloNum === null) return;\r\n  \r\n    // 1. Filtra só os selecionados\r\n    const selecionados = alunos.filter(a => a.selected);\r\n    if (selecionados.length === 0) {\r\n      showMessage(\"Atenção\", \"Nenhum aluno selecionado\");\r\n      return;\r\n    }\r\n  \r\n    // 2. Separa aprovados (nota ≥ 10) e atrasados (nota < 10)\r\n    const aprovados = selecionados.filter(a => a.nota !== undefined && +a.nota >= 10);\r\n    const atrasados = selecionados.filter(a => a.nota !== undefined && +a.nota < 10);\r\n  \r\n    // Função que faz o POST com os aprovados\r\n    const proceedSave = async () => {\r\n      setSubmissionLoading(true);\r\n      try {\r\n        const payload = {\r\n          professor_id: professorData.user_id,\r\n          disciplina:   professorData.disciplina,\r\n          modulo:       selectedModuloNum,\r\n          turma:        selectedTurma.turma,\r\n          ano:          selectedTurma.ano,\r\n          alunos:       aprovados,\r\n        };\r\n        const res = await axios.post(url_saveNote, payload);\r\n        if (!res.data.success) throw new Error(res.data.message);\r\n  \r\n        // Aqui avisamos quais notas foram publicadas\r\n        const publicadosMsg = aprovados\r\n          .map(a => `${a.email} (${a.nota})`)\r\n          .join(\", \");\r\n        showMessage(\"Sucesso\", `Notas publicadas para: ${publicadosMsg}`);\r\n        navigation.goBack();\r\n  \r\n      } catch (err: any) {\r\n        showMessage(\"Erro\", err.message);\r\n      } finally {\r\n        setSubmissionLoading(false);\r\n      }\r\n    };\r\n  \r\n    // 3. Se houverem atrasados, mostramos alerta de confirmação\r\n    if (atrasados.length > 0) {\r\n      const listaAtrasados = atrasados\r\n        .map(a => `${a.email} (${a.nota})`)\r\n        .join(\"\\n\");\r\n      Alert.alert(\r\n        \"Módulo em atraso\",\r\n        `As seguintes notas (< 10) NÃO serão publicadas:\\n\\n${listaAtrasados}\\n\\n` +\r\n        `Deseja continuar e publicar apenas ${aprovados.length} aluno(s) com nota ≥ 10?`,\r\n        [\r\n          { text: \"Cancelar\", style: \"cancel\" },\r\n          { text: \"Continuar\", onPress: proceedSave }\r\n        ]\r\n      );\r\n      return;\r\n    }\r\n  \r\n    // 4. Se não houver alunos em atraso, prossegue sem confirmação\r\n    proceedSave();\r\n  };   \r\n\r\n  // — indicador de loading inicial ou submissão —\r\n  if (loading || dataLoading || submissionLoading) {\r\n    const color = userTheme === \"dark\" ? \"#e0dede\" : \"#000\";\r\n    return (\r\n      <ImageBackground\r\n        source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n        style={styles.loaderContainer}\r\n      >\r\n        <ActivityIndicator size=\"large\" color={color} />\r\n        <Text style={{ marginTop: 12, color, fontSize: 16 }}>Carregando…</Text>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.wrapper}\r\n    >\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n          <Image\r\n            source={require(\"../../assets/icons/angle-left.png\")}\r\n            style={[styles.icon, { tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          <Image\r\n            source={require(\"../../assets/icons/user.png\")}\r\n            style={[styles.icon, { tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Conteúdo branco por baixo */}\r\n      <ScrollView contentContainerStyle={styles.scrollContent}>\r\n        <View style={styles.contentWrapper}>\r\n          <Text style={styles.title}>Atribuição de Notas</Text>\r\n\r\n          {/* Seleção de Turma */}\r\n          <Text style={styles.label}>Selecione a Turma:</Text>\r\n          <View style={styles.turmaContainer}>\r\n            {availableTurmas.map((t) => {\r\n              const isSel = selectedTurma?.id === t.id;\r\n              return (\r\n                <Button\r\n                  key={t.id}\r\n                  mode={isSel ? \"contained\" : \"outlined\"}\r\n                  onPress={() => setSelectedTurma(t)}\r\n                  style={[styles.turmaButton, isSel && styles.turmaButtonSelected]}\r\n                  labelStyle={isSel ? styles.turmaButtonLabelSel : styles.turmaButtonLabel}\r\n                >\r\n                  {t.ano} - {t.turma}\r\n                </Button>\r\n              );\r\n            })}\r\n          </View>\r\n\r\n          {/* Seleção de Módulo */}\r\n          <Text style={styles.label}>Selecione o Módulo:</Text>\r\n          <View style={styles.moduloContainer}>\r\n            {modulos.length > 0 ? modulos.map((m, idx) => {\r\n              const label = `${m.numero_do_modulo}º — ${m.nome}`;\r\n              const isSel = selectedModulo === m.nome;\r\n              return (\r\n                <Button\r\n                  key={idx}\r\n                  mode={isSel ? \"contained\" : \"outlined\"}\r\n                  onPress={() => {\r\n                    setSelectedModulo(m.nome);\r\n                    setSelectedModuloNum(m.numero_do_modulo);\r\n                  }}\r\n                  style={[styles.moduloButton, isSel && styles.moduloButtonSelected]}\r\n                  labelStyle={isSel ? styles.moduloButtonLabelSelected : styles.moduloButtonLabel}\r\n                  contentStyle={styles.moduloButtonContent}\r\n                >\r\n                  {label}\r\n                </Button>\r\n              );\r\n            }) : (\r\n              <Text style={styles.infoText}>Nenhum módulo disponível.</Text>\r\n            )}\r\n          </View>\r\n\r\n          {/* Lista de Alunos */}\r\n          {alunos.length > 0 ? alunos.map((aluno, i) => (\r\n            <View key={aluno.id} style={styles.alunoContainer}>\r\n              <View style={styles.alunoHeader}>\r\n              {Platform.OS === 'web' ? (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    const copy = [...alunos];\r\n                    copy[i].selected = !copy[i].selected;\r\n                    setAlunos(copy);\r\n                  }}\r\n                  style={{ padding: 4 }}  // touch target\r\n                >\r\n                  <MaterialCommunityIcons\r\n                    name={aluno.selected ? \"checkbox-marked\" : \"checkbox-blank-outline\"}\r\n                    size={24}\r\n                    color={theme.colors.primary}\r\n                  />\r\n                </TouchableOpacity>\r\n              ) : (\r\n                <Checkbox\r\n                  status={aluno.selected ? \"checked\" : \"unchecked\"}\r\n                  onPress={() => {\r\n                    const copy = [...alunos];\r\n                    copy[i].selected = !copy[i].selected;\r\n                    setAlunos(copy);\r\n                  }}\r\n                  color={theme.colors.primary}\r\n                />\r\n              )}\r\n                <Text style={styles.alunoEmail}>{aluno.email}</Text>\r\n              </View>\r\n              {aluno.selected && (\r\n                <View style={styles.alunoForm}>\r\n                  <TextInput\r\n                    label=\"Nota (0–20)\"\r\n                    keyboardType=\"numeric\"\r\n                    value={aluno.nota || \"\"}\r\n                    onChangeText={text => {\r\n                      const num = text.replace(/[^0-9]/g, \"\");\r\n                      if (num === \"\" || (+num >= 0 && +num <= 20)) {\r\n                        const copy = [...alunos];\r\n                        copy[i].nota = num;\r\n                        setAlunos(copy);\r\n                      }\r\n                    }}\r\n                    style={styles.input}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Comentário Privado\"\r\n                    multiline\r\n                    value={aluno.comentario_privado || \"\"}\r\n                    onChangeText={txt => {\r\n                      const copy = [...alunos];\r\n                      copy[i].comentario_privado = txt;\r\n                      setAlunos(copy);\r\n                    }}\r\n                    style={[styles.input, styles.comentarioInput]}\r\n                  />\r\n                </View>\r\n              )}\r\n            </View>\r\n          )) : (\r\n            <Text style={styles.infoText}>Nenhum aluno encontrado</Text>\r\n          )}\r\n\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleSaveNote}\r\n            style={styles.saveButton}\r\n          >\r\n            Atribuir Notas\r\n          </Button>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Snackbar\r\n        visible={snackbarVisible}\r\n        onDismiss={() => setSnackbarVisible(false)}\r\n        duration={3000}\r\n        action={{ label: \"Fechar\", onPress: () => setSnackbarVisible(false) }}\r\n      >\r\n        {snackbarMessage}\r\n      </Snackbar>\r\n\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ddd\",\r\n  },\r\n  icon: {\r\n    width: Platform.OS === \"web\" ? 35 : 23,\r\n    height: Platform.OS === \"web\" ? 35 : 25,\r\n    marginLeft: 3,\r\n    marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n  },\r\n  loaderContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  // —— NOVO container branco ——\r\n  scrollContent: {\r\n    paddingTop: 80,    // para não ficar por baixo do header\r\n    paddingHorizontal: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  contentWrapper: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    // sombra iOS\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    // sombra Android\r\n    elevation: 2,\r\n  },\r\n\r\n  title: { fontSize: 26, fontWeight: \"bold\", marginBottom: 20, color: \"#333\", textAlign: \"center\" },\r\n  label: { fontSize: 16, marginBottom: 8, color: \"#555\", fontWeight: \"500\" },\r\n  turmaContainer: { flexDirection: \"row\", flexWrap: \"wrap\", marginBottom: 20, justifyContent: \"center\" },\r\n  turmaButton: { margin: 4 },\r\n  turmaButtonSelected: { backgroundColor: \"#47AD4D\", borderColor: \"#47AD4D\" },\r\n  turmaButtonLabel: { color: \"#47AD4D\" },\r\n  turmaButtonLabelSel: { color: \"#FFF\" },\r\n  moduloContainer: { flexDirection: \"row\", flexWrap: \"wrap\", marginBottom: 20, justifyContent: \"center\" },\r\n  moduloButton: { margin: 4 },\r\n  moduloButtonSelected: { backgroundColor: \"#47AD4D\", borderColor: \"#47AD4D\" },\r\n  moduloButtonLabel: { color: \"#47AD4D\" },\r\n  moduloButtonLabelSelected: { color: \"#FFF\" },\r\n  moduloButtonContent: { paddingVertical: 6, paddingHorizontal: 12 },\r\n  alunoContainer: { marginBottom: 16, padding: 16, backgroundColor: \"#FFF\", borderRadius: 8, elevation: 3 },\r\n  alunoHeader: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 8 },\r\n  alunoEmail: { marginLeft: 8, fontSize: 16, color: \"#333\", fontWeight: \"500\" },\r\n  alunoForm: { marginTop: 8 },\r\n  input: { marginBottom: 12, backgroundColor: \"white\" },\r\n  comentarioInput: { height: 80, textAlignVertical: \"top\" },\r\n  saveButton: { marginTop: 20, backgroundColor: \"#47AD4D\" },\r\n  infoText: { fontSize: 16, marginBottom: 20, textAlign: \"center\", color: \"#888\" },\r\n});\r\n\r\nexport default AdicionarNotasScreen;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Alert,\r\n  Platform,\r\n  ImageBackground,\r\n  Image,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Text, Button, useTheme, TextInput } from \"react-native-paper\";\r\nimport axios from \"axios\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport config from \"../../../config/config_db\";\r\nimport { useRoute, useNavigation, RouteProp } from \"@react-navigation/native\";\r\nimport RNPickerSelect from \"react-native-picker-select\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\n// Parâmetros da rota\r\ntype PersonalizarTarefaScreenRouteParams = {\r\n  email: string;\r\n  theme?: string;\r\n  backgroundUrl?: string;\r\n};\r\n\r\nconst PersonalizarTarefaScreen = () => {\r\n  const route = useRoute<RouteProp<{ PersonalizarTarefa: PersonalizarTarefaScreenRouteParams }, 'PersonalizarTarefa'>>();\r\n  const navigation = useNavigation();\r\n  const theme = useTheme();\r\n  const styles = getStyles(theme);\r\n\r\n  const { email, theme: userThemeParam, backgroundUrl: backgroundUrlParam } = route.params;\r\n\r\n  // URLs para chamadas à API\r\n  const url_fetchTasks = `${config.baseUrl}/calendarioFiles/aluno/fetch_tasks.php`;\r\n  const url_fetchEvents = `${config.baseUrl}/calendarioFiles/aluno/fetch_events.php`;\r\n  const url_saveUserEvents = `${config.baseUrl}/calendarioFiles/aluno/update_events_config.php`;\r\n  const url_saveUserTasks = `${config.baseUrl}/calendarioFiles/aluno/update_tasks_config.php`;\r\n\r\n  // Estados de modais e configuração\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n  const [showColorModal, setShowColorModal] = useState(false);\r\n  \r\n  // Estados para armazenar tarefas, eventos e configurações\r\n  const [tasks, setTasks] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [taskColor, setTaskColor] = useState(\"#DC143C\");\r\n  const [taskDescription, setTaskDescription] = useState(\"\");\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>( backgroundUrlParam );\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">( userThemeParam === \"dark\" ? \"dark\" : \"light\" );\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Lista de cores padrão\r\n  const defaultColors = [\r\n    { value: \"#FF6347\", name: \"Tomate\" },\r\n    { value: \"#DC143C\", name: \"Carmesim\" },\r\n    { value: \"#FF4500\", name: \"Vermelho-Laranja\" },\r\n    { value: \"#8A2BE2\", name: \"Azul-Violeta\" },\r\n    { value: \"#5F9EA0\", name: \"Azul-Cadete\" },\r\n    { value: \"#2E8B57\", name: \"Verde-Mar\" },\r\n    { value: \"#FF8C00\", name: \"Laranja-Escuro\" },\r\n    { value: \"#9932CC\", name: \"Orquídea-Escura\" },\r\n    { value: \"#20B2AA\", name: \"Verde-Mar-Claro\" },\r\n    { value: \"#4682B4\", name: \"Azul-Aço\" },\r\n  ];\r\n\r\n  // Funções para buscar tarefas e eventos\r\n  const fetchTasks = () => {\r\n    axios\r\n      .post(url_fetchTasks, { email })\r\n      .then((response) => {\r\n        if (response.data.success && Array.isArray(response.data.tasks)) {\r\n          setTasks(response.data.tasks);\r\n        } else {\r\n          setTasks([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao buscar tarefas:\", error);\r\n      });\r\n  };\r\n\r\n  const fetchEvents = () => {\r\n    axios\r\n      .post(url_fetchEvents, { email })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setEvents(response.data);\r\n        } else if (response.data.success && Array.isArray(response.data.events)) {\r\n          setEvents(response.data.events);\r\n        } else {\r\n          setEvents([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao buscar eventos:\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#E0E0E0\" : \"#000\";\r\n  const dynamicHeaderBg = userTheme === \"dark\" ? \"#000\" : \"#FFF\";\r\n\r\n  // Spinner de loading enquanto carrega as configurações\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../../assets/images/bg1.jpg\")\r\n        }\r\n        style={styles.loadingBackground}\r\n      >\r\n        {userTheme === \"dark\" && <View style={styles.loadingOverlay} />}\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={dynamicTextColor} />\r\n          <Text style={[styles.loadingText, { color: dynamicTextColor }]}>\r\n            Carregando registros...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  // Sanitiza input (básico)\r\n  const sanitizeInput = (text) => {\r\n    return text.replace(/['\";]/g, \"\");\r\n  };\r\n\r\n  // Ao selecionar uma tarefa, traz as configurações atuais\r\n  const handleSelectTask = (task) => {\r\n    setSelectedTask(task);\r\n    axios\r\n      .post(url_fetchTasks, { tarefa_id: task.tarefa_id, email })\r\n      .then((response) => {\r\n        if (\r\n          response.data.success &&\r\n          response.data.tasks &&\r\n          response.data.tasks.length > 0\r\n        ) {\r\n          const configData = response.data.tasks[0];\r\n          setTaskColor(configData.cor || \"#47AD4D\");\r\n          setTaskDescription(configData.descricao || \"\");\r\n          if (configData.notification_times && Array.isArray(configData.notification_times)) {\r\n            const newNotifications = configData.notification_times.map((minutes) => ({\r\n              timeValue: minutes,\r\n              unit: \"minutes\",\r\n              alertType: \"notification\",\r\n            }));\r\n            setNotifications(newNotifications);\r\n          } else {\r\n            setNotifications([]);\r\n          }\r\n        } else {\r\n          setTaskColor(\"#47AD4D\");\r\n          setTaskDescription(\"\");\r\n          setNotifications([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao buscar configuração da tarefa:\", error);\r\n        setTaskColor(\"#47AD4D\");\r\n        setTaskDescription(\"\");\r\n        setNotifications([]);\r\n      });\r\n  };\r\n\r\n  // Ao selecionar um evento, traz as configurações atuais\r\n  const handleSelectEvent = (event) => {\r\n    setSelectedEvent(event);\r\n    setTaskColor(event.cores || \"#DC143C\");\r\n    setTaskDescription(event.descricao || \"\");\r\n    if (event.notification_times && Array.isArray(event.notification_times)) {\r\n      const newNotifications = event.notification_times.map((minutes) => ({\r\n        timeValue: minutes,\r\n        unit: \"minutes\",\r\n        alertType: \"notification\",\r\n      }));\r\n      setNotifications(newNotifications);\r\n    } else {\r\n      setNotifications([]);\r\n    }\r\n  };\r\n\r\n  // Atualiza configurações para tarefa\r\n  const updateTaskConfig = () => {\r\n    if (!selectedTask) return;\r\n    Alert.alert(\r\n      \"Confirmação\",\r\n      \"Ao guardar estas configurações, elas mudarão apenas para si!\",\r\n      [\r\n        { text: \"Cancelar\", style: \"cancel\" },\r\n        {\r\n          text: \"Guardar\",\r\n          onPress: () => {\r\n            const notification_times = notifications.map((notif) => {\r\n              let total = notif.timeValue;\r\n              if (notif.unit === \"hours\") total = notif.timeValue * 60;\r\n              if (notif.unit === \"days\") total = notif.timeValue * 1440;\r\n              if (notif.unit === \"weeks\") total = notif.timeValue * 10080;\r\n              return total;\r\n            });\r\n            const payload = {\r\n              tarefa_id: selectedTask.tarefa_id,\r\n              email,\r\n              cor: taskColor,\r\n              descricao: sanitizeInput(taskDescription),\r\n              notificacao_tipo: \"notificacao\",\r\n              notification_times,\r\n            };\r\n\r\n            axios\r\n              .post(url_saveUserTasks, payload)\r\n              .then((response) => {\r\n                if (response.data.success) {\r\n                  Alert.alert(\"Sucesso\", response.data.message);\r\n                  fetchTasks();\r\n                  setSelectedTask(null);\r\n                } else {\r\n                  Alert.alert(\"Erro\", response.data.message);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Erro ao atualizar configuração da tarefa:\", error);\r\n                Alert.alert(\"Erro\", \"Não foi possível atualizar a configuração da tarefa.\");\r\n              });\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  // Atualiza configurações para evento\r\n  const updateEventConfig = () => {\r\n    if (!selectedEvent) return;\r\n    Alert.alert(\r\n      \"Confirmação\",\r\n      \"Ao guardar estas configurações, elas mudarão apenas para si!\",\r\n      [\r\n        { text: \"Cancelar\", style: \"cancel\" },\r\n        {\r\n          text: \"Guardar\",\r\n          onPress: () => {\r\n            const notification_times = notifications.map((notif) => {\r\n              let total = notif.timeValue;\r\n              if (notif.unit === \"hours\") total = notif.timeValue * 60;\r\n              if (notif.unit === \"days\") total = notif.timeValue * 1440;\r\n              if (notif.unit === \"weeks\") total = notif.timeValue * 10080;\r\n              return total;\r\n            });\r\n            const payload = {\r\n              event_id: selectedEvent.id,\r\n              email,\r\n              cor: taskColor,\r\n              descricao: sanitizeInput(taskDescription),\r\n              notificacao_tipo: \"notificacao\",\r\n              notification_times,\r\n            };\r\n\r\n            axios\r\n              .post(url_saveUserEvents, payload)\r\n              .then((response) => {\r\n                if (response.data.success) {\r\n                  Alert.alert(\"Sucesso\", response.data.message);\r\n                  fetchEvents();\r\n                  setSelectedEvent(null);\r\n                } else {\r\n                  Alert.alert(\"Erro\", response.data.message);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Erro ao atualizar configuração do evento:\", error);\r\n                Alert.alert(\"Erro\", \"Não foi possível atualizar a configuração do evento.\");\r\n              });\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  // Retorna o label para as unidades de tempo\r\n  const getUnitLabel = (value, quantity = 1) => {\r\n    const units = {\r\n      minutes: [\"minuto\", \"minutos\"],\r\n      hours: [\"hora\", \"horas\"],\r\n      days: [\"dia\", \"dias\"],\r\n      weeks: [\"semana\", \"semanas\"],\r\n    };\r\n    return quantity === 1 ? units[value][0] : units[value][1];\r\n  };\r\n\r\n  // Gerencia linha de notificação\r\n  const handleAddNotificationRow = () => {\r\n    setNotifications((prev) => [\r\n      ...prev,\r\n      { timeValue: 15, unit: \"minutes\", alertType: \"notification\" },\r\n    ]);\r\n  };\r\n\r\n  const incrementTime = (index) => {\r\n    setNotifications((prev) => {\r\n      const copy = [...prev];\r\n      if (copy[index].timeValue < 60) {\r\n        copy[index].timeValue += 1;\r\n      }\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const decrementTime = (index) => {\r\n    setNotifications((prev) => {\r\n      const copy = [...prev];\r\n      if (copy[index].timeValue > 1) {\r\n        copy[index].timeValue -= 1;\r\n      }\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require(\"../../../assets/images/bg1.jpg\")\r\n      }\r\n      style={styles.background}\r\n    >\r\n      {/* Cabeçalho com margem inferior, sombra e cores de acordo com o tema */}\r\n      <View style={[styles.header, { backgroundColor: dynamicHeaderBg }]}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/angle-left.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 35 : 23,\r\n              height: Platform.OS === \"web\" ? 35 : 25,\r\n              tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#5F6368\",\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/user.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 35 : 23,\r\n              height: Platform.OS === \"web\" ? 35 : 25,\r\n              tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#5F6368\",\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Espaçamento extra entre o header e o conteúdo principal */}\r\n      <View style={styles.contentWrapper}>\r\n        {Platform.OS === \"web\" ? (\r\n          <View style={styles.webContainer}>\r\n            <View style={styles.tasksContainer}>\r\n              <Text style={styles.sectionHeader}>As Minhas Tarefas</Text>\r\n              {tasks.map((task, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  onPress={() => handleSelectTask(task)}\r\n                  style={styles.listItem}\r\n                >\r\n                  <Text style={styles.itemTitle}>\r\n                    {task.titulo || task.tarefa_id}\r\n                  </Text>\r\n                  <Text style={styles.itemInfo}>\r\n                    {task.professor_email} | {task.data_da_tarefa}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n            <View style={styles.eventsContainer}>\r\n              <Text style={styles.sectionHeader}>Os Meus Eventos</Text>\r\n              {events.map((event, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  onPress={() => handleSelectEvent(event)}\r\n                  style={styles.listItem}\r\n                >\r\n                  <Text style={styles.itemTitle}>{event.title}</Text>\r\n                  <Text style={styles.itemInfo}>\r\n                    {event.professor_email} | {event.start_datetime} - {event.end_datetime}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <ScrollView contentContainerStyle={styles.mobileContainer}>\r\n            <Text style={styles.sectionHeader}>As Minhas Tarefas</Text>\r\n            {tasks.map((task, index) => (\r\n              <TouchableOpacity\r\n                key={index}\r\n                onPress={() => handleSelectTask(task)}\r\n                style={styles.listItem}\r\n              >\r\n                <Text style={styles.itemTitle}>\r\n                  {task.titulo || task.tarefa_id}\r\n                </Text>\r\n                <Text style={styles.itemInfo}>\r\n                  {task.professor_email} | {task.data_da_tarefa}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n            <Text style={[styles.sectionHeader, { marginTop: 20 }]}>Os Meus Eventos</Text>\r\n            {events.map((event, index) => (\r\n              <TouchableOpacity\r\n                key={index}\r\n                onPress={() => handleSelectEvent(event)}\r\n                style={styles.listItem}\r\n              >\r\n                <Text style={styles.itemTitle}>{event.title}</Text>\r\n                <Text style={styles.itemInfo}>\r\n                  {event.professor_email} | {event.start_datetime} - {event.end_datetime}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </ScrollView>\r\n        )}\r\n      </View>\r\n\r\n      {/* Modal de configurações para Tarefa/Evento */}\r\n      {(selectedTask || selectedEvent) && (\r\n        <Modal visible={true} animationType=\"slide\" transparent>\r\n                  <Modal visible={showColorModal} animationType=\"slide\" transparent>\r\n                <View style={styles.colorModalOverlay}>\r\n                  <View style={styles.colorModalContent}>\r\n                    <Text style={[styles.modalTitle, { color: theme.colors.onSurface }]}>\r\n                      Selecionar Cor\r\n                    </Text>\r\n                    {!defaultColors.find((opt) => opt.value === taskColor) && (\r\n                      <TouchableOpacity\r\n                        style={styles.colorOptionRow}\r\n                        onPress={() => {\r\n                          setTaskColor(taskColor);\r\n                          setShowColorModal(false);\r\n                        }}\r\n                      >\r\n                        <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                        <Text style={[styles.colorName, { color: theme.colors.onSurface }]}>\r\n                          Cor Atual\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                    {defaultColors.map((opt) => (\r\n                      <TouchableOpacity\r\n                        key={opt.value}\r\n                        style={styles.colorOptionRow}\r\n                        onPress={() => {\r\n                          setTaskColor(opt.value);\r\n                          setShowColorModal(false);\r\n                        }}\r\n                      >\r\n                        <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                        <Text style={[styles.colorName, { color: theme.colors.onSurface }]}>\r\n                          {opt.name}\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    ))}\r\n                    <Button mode=\"contained\" onPress={() => setShowColorModal(false)} style={styles.modalCloseButton}>\r\n                      Fechar\r\n                    </Button>\r\n                  </View>\r\n                </View>\r\n              </Modal>\r\n          <View style={styles.modalOverlay}>\r\n            <ScrollView\r\n              contentContainerStyle={[\r\n                styles.modalContent,\r\n                { backgroundColor: userTheme === \"dark\" ? \"#000\" : \"#FFF\" },\r\n              ]}\r\n            >\r\n              {/* Cabeçalho do Modal */}\r\n              <View style={styles.modalHeader}>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setSelectedTask(null);\r\n                    setSelectedEvent(null);\r\n                    setShowColorModal(false);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    source={require(\"../../../assets/icons/angle-left.png\")}\r\n                    style={{\r\n                      width: Platform.OS === \"web\" ? 35 : 23,\r\n                      height: Platform.OS === \"web\" ? 35 : 25,\r\n                      tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#5F6368\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n                  <Image\r\n                    source={require(\"../../../assets/icons/user.png\")}\r\n                    style={{\r\n                      width: Platform.OS === \"web\" ? 35 : 23,\r\n                      height: Platform.OS === \"web\" ? 35 : 25,\r\n                      tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#5F6368\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* Conteúdo do Modal com campos profissionais */}\r\n              <Text style={styles.modalWarning}>\r\n                As configurações abaixo são apenas para si e não afetam a{\" \"}\r\n                {selectedTask ? \"tarefa\" : \"evento\"} original.\r\n              </Text>\r\n\r\n              {selectedTask ? (\r\n                <>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Título:</Text>\r\n                    <Text style={styles.fieldValue}>\r\n                      {selectedTask.titulo || `Tarefa ${selectedTask.tarefa_id}`}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Criado por:</Text>\r\n                    <Text style={styles.fieldValue}>\r\n                      {selectedTask.professor_email}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Data da Tarefa:</Text>\r\n                    <Text style={styles.fieldValue}>\r\n                      {selectedTask.data_da_tarefa}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Descrição:</Text>\r\n                    <Text style={styles.fieldValue}>\r\n                      {selectedTask.descricao || \"Não há descrição.\"}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.editableBox}>\r\n                    <View style={styles.fieldContainer}>\r\n                      <Text style={styles.fieldLabel}>Cor:</Text>\r\n                      <TouchableOpacity\r\n                        activeOpacity={0.7}\r\n                        style={[styles.selectedColorDisplay, styles.colorButton]}\r\n                        onPress={() => setShowColorModal(true)}\r\n                      >\r\n                        <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                        <Text style={styles.editText}>Alterar Cor</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                    <View style={styles.fieldContainer}>\r\n                      <Text style={styles.fieldLabel}>Notificações:</Text>\r\n                      {notifications.map((notif, index) => (\r\n                        <View style={styles.notificationRow} key={index}>\r\n                          <RNPickerSelect\r\n                            onValueChange={(value) => {\r\n                              if (value) {\r\n                                setNotifications((prev) => {\r\n                                  const copy = [...prev];\r\n                                  copy[index].alertType = value;\r\n                                  return copy;\r\n                                });\r\n                              }\r\n                            }}\r\n                            items={[\r\n                              { label: \"Email\", value: \"email\" },\r\n                              { label: \"Notificação\", value: \"notification\" },\r\n                            ]}\r\n                            placeholder={{}}\r\n                            value={notif.alertType}\r\n                            useNativeAndroidPickerStyle={false}\r\n                            style={pickerSelectStyles(theme)}\r\n                          />\r\n                          <View style={styles.spinnerContainer}>\r\n                            <TextInput\r\n                              style={styles.spinnerInput}\r\n                              keyboardType=\"numeric\"\r\n                              value={notif.timeValue !== null ? String(notif.timeValue) : \"\"}\r\n                              onChangeText={(text) => {\r\n                                if (text === \"\") {\r\n                                  setNotifications((prev) => {\r\n                                    const copy = [...prev];\r\n                                    copy[index].timeValue = null;\r\n                                    return copy;\r\n                                  });\r\n                                } else {\r\n                                  const num = parseInt(text, 10);\r\n                                  if (!isNaN(num) && num >= 1 && num <= 60) {\r\n                                    setNotifications((prev) => {\r\n                                      const copy = [...prev];\r\n                                      copy[index].timeValue = num;\r\n                                      return copy;\r\n                                    });\r\n                                  }\r\n                                }\r\n                              }}\r\n                              onBlur={() => {\r\n                                setNotifications((prev) => {\r\n                                  const copy = [...prev];\r\n                                  if (copy[index].timeValue === null) {\r\n                                    copy[index].timeValue = 1;\r\n                                  }\r\n                                  return copy;\r\n                                });\r\n                              }}\r\n                            />\r\n                            <View style={styles.spinnerButtons}>\r\n                              <TouchableOpacity onPress={() => incrementTime(index)} style={styles.stepButton}>\r\n                                <Text style={styles.stepButtonText}>▲</Text>\r\n                              </TouchableOpacity>\r\n                              <TouchableOpacity onPress={() => decrementTime(index)} style={styles.stepButton}>\r\n                                <Text style={styles.stepButtonText}>▼</Text>\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                          </View>\r\n                          <RNPickerSelect\r\n                            onValueChange={(value) => {\r\n                              if (value) {\r\n                                setNotifications((prev) => {\r\n                                  const copy = [...prev];\r\n                                  copy[index].unit = value;\r\n                                  return copy;\r\n                                });\r\n                              }\r\n                            }}\r\n                            items={[\r\n                              { label: getUnitLabel(\"minutes\"), value: \"minutes\" },\r\n                              { label: getUnitLabel(\"hours\"), value: \"hours\" },\r\n                              { label: getUnitLabel(\"days\"), value: \"days\" },\r\n                              { label: getUnitLabel(\"weeks\"), value: \"weeks\" },\r\n                            ]}\r\n                            placeholder={{}}\r\n                            value={notif.unit}\r\n                            useNativeAndroidPickerStyle={false}\r\n                            style={pickerSelectStyles(theme)}\r\n                          />\r\n                          <TouchableOpacity onPress={() => setNotifications((prev) => prev.filter((_, i) => i !== index))}>\r\n                          <Image\r\n                            source={require(\"../../../assets/icons/cross.png\")}\r\n                            style={{\r\n                              width: Platform.OS === \"web\" ? 25 : 20,\r\n                              height: Platform.OS === \"web\" ? 25 : 20,\r\n                              tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#5F6368\",\r\n                            }}\r\n                          />\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      ))}\r\n                      <Button\r\n                        mode=\"outlined\"\r\n                        onPress={handleAddNotificationRow}\r\n                        style={styles.addTimeButton}\r\n                        labelStyle={styles.addTimeButtonLabel}\r\n                      >\r\n                        + Adicionar notificação\r\n                      </Button>\r\n                    </View>\r\n                  </View>\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    onPress={updateTaskConfig}\r\n                    style={styles.saveButton}\r\n                    labelStyle={styles.saveButtonLabel}\r\n                  >\r\n                    Salvar Configurações\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Título:</Text>\r\n                    <Text style={styles.fieldValue}>{selectedEvent?.title}</Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Criado por:</Text>\r\n                    <Text style={styles.fieldValue}>-</Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Data de Início:</Text>\r\n                    <Text style={styles.fieldValue}>{selectedEvent?.start_datetime}</Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Data de Fim:</Text>\r\n                    <Text style={styles.fieldValue}>{selectedEvent?.end_datetime}</Text>\r\n                  </View>\r\n                  <View style={styles.fieldContainer}>\r\n                    <Text style={styles.fieldLabel}>Descrição:</Text>\r\n                    <Text style={styles.fieldValue}>\r\n                      {selectedEvent?.descricao || \"Não há descrição.\"}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.editableBox}>\r\n                    <View style={styles.fieldContainer}>\r\n                      <Text style={styles.fieldLabel}>Cor:</Text>\r\n                      <TouchableOpacity\r\n                        activeOpacity={0.7}\r\n                        style={[styles.selectedColorDisplay, styles.colorButton]}\r\n                        onPress={() => setShowColorModal(true)}\r\n                      >\r\n                        <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                        <Text style={styles.editText}>Alterar Cor</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                    <View style={styles.fieldContainer}>\r\n                      <Text style={styles.fieldLabel}>Notificações:</Text>\r\n                      {notifications.map((notif, index) => (\r\n                        <View style={styles.notificationRow} key={index}>\r\n                          <RNPickerSelect\r\n                            onValueChange={(value) => {\r\n                              if (value) {\r\n                                setNotifications((prev) => {\r\n                                  const copy = [...prev];\r\n                                  copy[index].alertType = value;\r\n                                  return copy;\r\n                                });\r\n                              }\r\n                            }}\r\n                            items={[\r\n                              { label: \"Email\", value: \"email\" },\r\n                              { label: \"Notificação\", value: \"notification\" },\r\n                            ]}\r\n                            placeholder={{}}\r\n                            value={notif.alertType}\r\n                            useNativeAndroidPickerStyle={false}\r\n                            style={pickerSelectStyles(theme)}\r\n                          />\r\n                          <View style={styles.spinnerContainer}>\r\n                            <TextInput\r\n                              style={styles.spinnerInput}\r\n                              keyboardType=\"numeric\"\r\n                              value={notif.timeValue !== null ? String(notif.timeValue) : \"\"}\r\n                              onChangeText={(text) => {\r\n                                if (text === \"\") {\r\n                                  setNotifications((prev) => {\r\n                                    const copy = [...prev];\r\n                                    copy[index].timeValue = null;\r\n                                    return copy;\r\n                                  });\r\n                                } else {\r\n                                  const num = parseInt(text, 10);\r\n                                  if (!isNaN(num) && num >= 1 && num <= 60) {\r\n                                    setNotifications((prev) => {\r\n                                      const copy = [...prev];\r\n                                      copy[index].timeValue = num;\r\n                                      return copy;\r\n                                    });\r\n                                  }\r\n                                }\r\n                              }}\r\n                              onBlur={() => {\r\n                                setNotifications((prev) => {\r\n                                  const copy = [...prev];\r\n                                  if (copy[index].timeValue === null) {\r\n                                    copy[index].timeValue = 1;\r\n                                  }\r\n                                  return copy;\r\n                                });\r\n                              }}\r\n                            />\r\n                            <View style={styles.spinnerButtons}>\r\n                              <TouchableOpacity onPress={() => incrementTime(index)} style={styles.stepButton}>\r\n                                <Text style={styles.stepButtonText}>▲</Text>\r\n                              </TouchableOpacity>\r\n                              <TouchableOpacity onPress={() => decrementTime(index)} style={styles.stepButton}>\r\n                                <Text style={styles.stepButtonText}>▼</Text>\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                          </View>\r\n                          <RNPickerSelect\r\n                            onValueChange={(value) => {\r\n                              if (value) {\r\n                                setNotifications((prev) => {\r\n                                  const copy = [...prev];\r\n                                  copy[index].unit = value;\r\n                                  return copy;\r\n                                });\r\n                              }\r\n                            }}\r\n                            items={[\r\n                              { label: getUnitLabel(\"minutes\"), value: \"minutes\" },\r\n                              { label: getUnitLabel(\"hours\"), value: \"hours\" },\r\n                              { label: getUnitLabel(\"days\"), value: \"days\" },\r\n                              { label: getUnitLabel(\"weeks\"), value: \"weeks\" },\r\n                            ]}\r\n                            placeholder={{}}\r\n                            value={notif.unit}\r\n                            useNativeAndroidPickerStyle={false}\r\n                            style={pickerSelectStyles(theme)}\r\n                          />\r\n                          <TouchableOpacity onPress={() => setNotifications((prev) => prev.filter((_, i) => i !== index))}>\r\n                            <Image\r\n                              source={require(\"../../../assets/icons/cross.png\")}\r\n                              style={{\r\n                                width: Platform.OS === \"web\" ? 25 : 20,\r\n                                height: Platform.OS === \"web\" ? 25 : 20,\r\n                                tintColor: userTheme === \"dark\" ? \"#FFF\" : \"#5F6368\",\r\n                              }}\r\n                            />\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      ))}\r\n                      <Button\r\n                        mode=\"outlined\"\r\n                        onPress={handleAddNotificationRow}\r\n                        style={styles.addTimeButton}\r\n                        labelStyle={styles.addTimeButtonLabel}\r\n                      >\r\n                        + Adicionar notificação\r\n                      </Button>\r\n                    </View>\r\n                  </View>\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    onPress={updateEventConfig}\r\n                    style={styles.saveButton}\r\n                    labelStyle={styles.saveButtonLabel}\r\n                  >\r\n                    Salvar Configurações\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </ScrollView>\r\n          </View>\r\n        </Modal>\r\n      )}\r\n\r\n\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground={dynamicHeaderBg}\r\n        dynamicTextColor={userTheme === \"dark\" ? \"#FFF\" : \"#000\"}\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\n// Estilos personalizados\r\nconst getStyles = (theme) =>\r\n  StyleSheet.create({\r\n    background: {\r\n      flex: 1,\r\n    },\r\n    loadingBackground: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    loadingOverlay: {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    },\r\n    loadingContainer: {\r\n      alignItems: \"center\",\r\n    },\r\n    loadingText: {\r\n      fontSize: 18,\r\n      marginTop: 10,\r\n    },\r\n    header: {\r\n      width: \"100%\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      paddingTop: StatusBar.currentHeight || 20,\r\n      paddingHorizontal: 15,\r\n      paddingBottom: 10,\r\n      elevation: 4,\r\n      shadowColor: \"#000\",\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.3,\r\n      shadowRadius: 3,\r\n    },\r\n    contentWrapper: {\r\n      flex: 1,\r\n      marginTop: 15,\r\n      paddingHorizontal: 15,\r\n    },\r\n    webContainer: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    tasksContainer: {\r\n      flex: 1,\r\n      marginRight: 10,\r\n      backgroundColor: theme.colors.surface,\r\n      borderRadius: 8,\r\n      padding: 10,\r\n      elevation: 2,\r\n      shadowColor: \"#000\",\r\n      shadowOpacity: 0.15,\r\n      shadowOffset: { width: 0, height: 1 },\r\n      marginBottom: 15,\r\n    },\r\n    eventsContainer: {\r\n      flex: 1,\r\n      marginLeft: 10,\r\n      backgroundColor: theme.colors.surface,\r\n      borderRadius: 8,\r\n      padding: 10,\r\n      elevation: 2,\r\n      shadowColor: \"#000\",\r\n      shadowOpacity: 0.15,\r\n      shadowOffset: { width: 0, height: 1 },\r\n      marginBottom: 15,\r\n    },\r\n    mobileContainer: {\r\n      paddingBottom: 20,\r\n    },\r\n    sectionHeader: {\r\n      fontSize: 20,\r\n      fontWeight: \"bold\",\r\n      color: theme.colors.text,\r\n      marginBottom: 10,\r\n      paddingVertical: 5,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: \"#ccc\",\r\n      textShadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n      textShadowOffset: { width: 0, height: 1 },\r\n      textShadowRadius: 1,\r\n    },\r\n    listItem: {\r\n      paddingVertical: 10,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: \"#eee\",\r\n    },\r\n    itemTitle: {\r\n      fontSize: 17,\r\n      fontWeight: \"600\",\r\n      color: theme.colors.text,\r\n    },\r\n    itemInfo: {\r\n      fontSize: 14,\r\n      color: theme.colors.disabled,\r\n      marginTop: 3,\r\n    },\r\n    modalOverlay: {\r\n      flex: 1,\r\n      backgroundColor: \"rgba(0,0,0,0.5)\",\r\n      justifyContent: \"center\",\r\n      padding: 20,\r\n    },\r\n    modalContent: {\r\n      borderRadius: 10,\r\n      paddingTop: 80,\r\n      paddingHorizontal: 20,\r\n      paddingBottom: 20,\r\n    },\r\n    modalHeader: {\r\n      position: \"absolute\",\r\n      top: 20,\r\n      left: 15,\r\n      right: 15,\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    modalWarning: {\r\n      textAlign: \"center\",\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 20,\r\n      color: theme.dark ? \"#FFF\" : theme.colors.onSurface,\r\n    },\r\n    fieldContainer: {\r\n      backgroundColor: \"#F9F9F9\",\r\n      borderRadius: 8,\r\n      padding: 12,\r\n      marginVertical: 6,\r\n      elevation: 2,\r\n    },\r\n    fieldLabel: {\r\n      fontSize: 14,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 4,\r\n      color: \"#333\",\r\n    },\r\n    fieldValue: {\r\n      fontSize: 16,\r\n      color: \"#555\",\r\n    },\r\n    editableBox: {\r\n      backgroundColor: \"#EFEFEF\",\r\n      borderRadius: 8,\r\n      padding: 12,\r\n      marginVertical: 6,\r\n      elevation: 1,\r\n    },\r\n    selectedColorDisplay: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      marginBottom: 5,\r\n    },\r\n    colorButton: {\r\n      paddingVertical: 10,\r\n    },\r\n    colorCircle: {\r\n      width: 30,\r\n      height: 30,\r\n      borderRadius: 15,\r\n      marginRight: 10,\r\n    },\r\n    editText: {\r\n      fontSize: 16,\r\n      color: theme.dark ? \"#FFF\" : theme.colors.onSurface,\r\n    },\r\n    notificationRow: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      marginBottom: 8,\r\n    },\r\n    spinnerContainer: {\r\n      width: 70,\r\n      marginHorizontal: 5,\r\n      position: \"relative\",\r\n    },\r\n    spinnerInput: {\r\n      width: \"100%\",\r\n      height: 40,\r\n      borderWidth: 1,\r\n      borderColor: \"#ccc\",\r\n      borderRadius: 5,\r\n      textAlign: \"center\",\r\n      fontSize: 16,\r\n      backgroundColor: \"#FFF\",\r\n      color: \"#000\",\r\n    },\r\n    spinnerButtons: {\r\n      position: \"absolute\",\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      justifyContent: \"space-between\",\r\n      marginVertical: 3,\r\n    },\r\n    stepButton: {\r\n      paddingHorizontal: 5,\r\n    },\r\n    stepButtonText: {\r\n      fontSize: 14,\r\n      fontWeight: \"bold\",\r\n      color: \"#000\",\r\n    },\r\n    removeBtn: {\r\n      fontSize: 20,\r\n      fontWeight: \"bold\",\r\n      marginLeft: 5,\r\n      color: \"#900\",\r\n    },\r\n    addTimeButton: {\r\n      marginVertical: 10,\r\n      borderColor: \"#47AD4D\",\r\n    },\r\n    addTimeButtonLabel: {\r\n      color: \"#47AD4D\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    saveButton: {\r\n      backgroundColor: \"#47AD4D\",\r\n      marginTop: 20,\r\n    },\r\n    saveButtonLabel: {\r\n      color: \"#FFF\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    modalTitle: {\r\n      fontSize: 20,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      textAlign: \"center\",\r\n    },\r\n    colorModalOverlay: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    },\r\n    colorModalContent: {\r\n      backgroundColor: theme.colors.surface,\r\n      borderRadius: 10,\r\n      padding: 20,\r\n      width: \"80%\",\r\n      alignItems: \"center\",\r\n    },\r\n    colorOptionRow: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      paddingVertical: 8,\r\n      width: \"100%\",\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: \"#ccc\",\r\n    },\r\n    colorName: {\r\n      fontSize: 16,\r\n      marginLeft: 10,\r\n      color: \"#333\",\r\n    },\r\n    modalCloseButton: {\r\n      marginTop: 10,\r\n      backgroundColor: \"#47AD4D\",\r\n    },\r\n  });\r\n\r\n  const pickerSelectStyles = (theme) => {\r\n    const commonMobile = {\r\n      fontSize: 14,\r\n      padding: 5,\r\n      minWidth: 70,\r\n      height: 40, // para alinhar com o TextInput do tempo\r\n      borderWidth: 1,\r\n      borderColor: theme.colors.placeholder,\r\n      borderRadius: 5,\r\n      color: theme.colors.text,\r\n      backgroundColor: theme.colors.surface,\r\n      marginHorizontal: 5,\r\n    };\r\n  \r\n    const commonWeb = {\r\n      fontSize: 16,\r\n      padding: 10,\r\n      minWidth: 110,\r\n      borderWidth: 1,\r\n      borderColor: theme.colors.placeholder,\r\n      borderRadius: 5,\r\n      color: theme.colors.text,\r\n      backgroundColor: theme.colors.surface,\r\n      marginHorizontal: 5,\r\n    };\r\n  \r\n    return Platform.OS === 'web'\r\n      ? {\r\n          inputIOS: commonWeb,       // para navegadores que possam usar inputIOS\r\n          inputAndroid: commonWeb,   // para navegadores que possam identificar como Android\r\n          inputWeb: commonWeb,       // chave específica para a web\r\n        }\r\n      : {\r\n          inputIOS: commonMobile,\r\n          inputAndroid: commonMobile,\r\n        };\r\n  };  \r\n\r\nexport default PersonalizarTarefaScreen;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  ImageBackground,\r\n  Modal,\r\n  Image,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n  Platform,  \r\n} from \"react-native\";\r\nimport { CameraView, useCameraPermissions } from \"expo-camera\";\r\nimport config from \"../../config/config_db\";\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\nconst QRCodeScannerScreen = ({ navigation, route }) => {\r\n  // Obtém o email dos parâmetros\r\n  const emailFromParams = route?.params?.email || null;\r\n  const [permission, requestPermission] = useCameraPermissions();\r\n  const isPermissionGranted = Boolean(permission?.granted);\r\n  const [isScanning, setIsScanning] = useState(true);\r\n  const [scannedData, setScannedData] = useState(null);\r\n  \r\n  // Estado para o modal de inserção manual com preview (sem pergunta de confirmação adicional)\r\n  const [manualModalVisible, setManualModalVisible] = useState(false);\r\n  const [previewData, setPreviewData] = useState(null); // { tipo, hora }\r\n  const [isPreviewLoading, setIsPreviewLoading] = useState(false);\r\n  const cameraRef = useRef(null);\r\n  const animation = useRef(new Animated.Value(0)).current;\r\n\r\n  // Endpoints\r\n  const urlInserir = `${config.baseUrl}/calendarioFiles/entradasSaidas/handleEntradasESaidas.php`;\r\n  const urlPreview = `${config.baseUrl}/calendarioFiles/entradasSaidas/getEntradasESaidas.php`;\r\n\r\n  useEffect(() => {\r\n    if (!permission) {\r\n      requestPermission();\r\n    }\r\n  }, [permission]);\r\n\r\n  useEffect(() => {\r\n    if (navigation?.setOptions) {\r\n      navigation.setOptions({ headerShown: false });\r\n    }\r\n  }, [navigation]);\r\n\r\n  // Leitura do QR Code\r\n  const handleBarcodeScanned = async ({ data }) => {\r\n    if (isScanning) {\r\n      let scannedEmail = emailFromParams;\r\n      if (data && data.startsWith(\"email:\")) {\r\n        scannedEmail = data.replace(\"email:\", \"\").trim();\r\n      }\r\n      setScannedData(data);\r\n      setIsScanning(false);\r\n      try {\r\n        const response = await fetch(urlInserir, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email: scannedEmail })\r\n        });\r\n        const result = await response.json();\r\n        console.log(\"Resposta do servidor:\", result);\r\n        if (result.success) {\r\n          // Feedback animado sobre a área do overlay\r\n          Animated.sequence([\r\n            Animated.timing(animation, {\r\n              toValue: 1,\r\n              duration: 500,\r\n              useNativeDriver: true\r\n            }),\r\n            Animated.delay(500),\r\n            Animated.timing(animation, {\r\n              toValue: 0,\r\n              duration: 500,\r\n              useNativeDriver: true\r\n            })\r\n          ]).start(() => {\r\n            navigation.navigate(\"Aluno\", { email: scannedEmail, manualInsertion: false });\r\n          });\r\n        } else {\r\n          setIsScanning(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao enviar dados:\", error);\r\n        setIsScanning(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Abre o modal de inserção manual e inicia o carregamento do preview\r\n  const abrirModalManual = () => {\r\n    setManualModalVisible(true);\r\n    setIsPreviewLoading(true);\r\n    setPreviewData(null);\r\n    fetchPreview();\r\n  };\r\n\r\n  // Busca o preview do registo do dia atual\r\n  const fetchPreview = async () => {\r\n    try {\r\n      const response = await fetch(urlPreview, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email: emailFromParams })\r\n      });\r\n      const result = await response.json();\r\n      let novoTipo = \"entrada\";\r\n      if (result.success && result.days && result.days.length > 0) {\r\n        const diaAtual = new Date().toISOString().slice(0, 10);\r\n        const dia = result.days.find(d => d.date === diaAtual);\r\n        if (dia && dia.records && dia.records.length > 0) {\r\n          const ultimo = dia.records[dia.records.length - 1];\r\n          novoTipo = (ultimo.type === \"entrada\") ? \"saida\" : \"entrada\";\r\n        }\r\n      }\r\n      const horaAtual = new Date().toLocaleTimeString();\r\n      setPreviewData({ tipo: novoTipo, hora: horaAtual });\r\n    } catch (error) {\r\n      if (Platform.OS === \"android\") {\r\n        ToastAndroid.show(\"Erro ao buscar registos.\", ToastAndroid.LONG);\r\n      } else {\r\n        alert(\"Erro ao buscar registos.\");\r\n      }\r\n    } finally {\r\n      setIsPreviewLoading(false);\r\n    }\r\n  };\r\n\r\n  // Confirma a inserção manual (usa o preview mostrado)\r\n  const confirmarInsercaoManual = async () => {\r\n    setManualModalVisible(false);\r\n    try {\r\n      const response = await fetch(urlInserir, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email: emailFromParams })\r\n      });\r\n      const result = await response.json();\r\n      console.log(\"Inserção manual:\", result);\r\n      if (result.success) {\r\n        navigation.navigate(\"Aluno\", { email: emailFromParams, manualInsertion: true });\r\n      } else {\r\n        if (Platform.OS === \"android\") {\r\n          ToastAndroid.show(\"Erro ao inserir registo.\", ToastAndroid.LONG);\r\n        } else {\r\n          alert(\"Erro ao inserir registo.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (Platform.OS === \"android\") {\r\n        ToastAndroid.show(\"Erro ao inserir registo.\", ToastAndroid.LONG);\r\n      } else {\r\n        alert(\"Erro ao inserir registo.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Enquanto as permissões não são definidas, exibe loading\r\n  if (!permission) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#fff\" />\r\n        <Text style={styles.text}>A pedir as permissões...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const wallpaperImage = require(\"../../assets/images/bg1.jpg\");\r\n\r\n  // Se a permissão não foi concedida, exibe a tela com os botões (que permitem pedir permissão ou inserir manualmente)\r\n  if (!isPermissionGranted) {\r\n    return (\r\n      <ImageBackground source={wallpaperImage} style={styles.background}>\r\n        <View style={styles.centered}>\r\n          <Text style={styles.text}>A permissão para usar a câmera foi negada.</Text>\r\n          <View style={styles.buttonContainer}>\r\n            <TouchableOpacity onPress={requestPermission} style={[styles.button, styles.btnSolicitar]}>\r\n              <Text style={styles.buttonText}>Pedir Permissão</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={abrirModalManual} style={[styles.button, styles.btnManual]}>\r\n              <Text style={styles.buttonText}>Inserir Manualmente</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  // Estilo da animação sobre o foco\r\n  const animatedStyle = {\r\n    transform: [\r\n      {\r\n        scale: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0.5, 1.5]\r\n        })\r\n      }\r\n    ],\r\n    opacity: animation\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <CameraView\r\n        ref={cameraRef}\r\n        style={styles.camera}\r\n        facing=\"back\"\r\n        onBarcodeScanned={handleBarcodeScanned}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.backButton}\r\n          onPress={() => navigation.navigate(\"Aluno\", { email: emailFromParams })}\r\n        >\r\n          <Image\r\n            source={require(\"../../assets/icons/angle-left.png\")}\r\n            style={styles.backIcon}\r\n          />\r\n        </TouchableOpacity>\r\n        {/* Overlay profissional */}\r\n        <View style={styles.overlay}>\r\n          <View style={styles.overlayTop} />\r\n          <View style={styles.overlayMiddle}>\r\n            <View style={styles.overlaySide} />\r\n            <View style={styles.focusedArea}>\r\n              {scannedData && (\r\n                <Animated.View style={[styles.animationOverlay, animatedStyle]}>\r\n                  <Text style={styles.animationText}>✓</Text>\r\n                </Animated.View>\r\n              )}\r\n            </View>\r\n            <View style={styles.overlaySide} />\r\n          </View>\r\n          <View style={styles.overlayBottom} />\r\n        </View>\r\n      </CameraView>\r\n      {/* Botão para inserir manualmente */}\r\n      <TouchableOpacity onPress={abrirModalManual} style={styles.manualButton}>\r\n        <Text style={styles.manualButtonText}>Inserir Manualmente</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Modal com o preview (sem pergunta adicional) */}\r\n      <Modal\r\n        visible={manualModalVisible}\r\n        transparent\r\n        animationType=\"fade\"\r\n        onRequestClose={() => setManualModalVisible(false)}\r\n      >\r\n        <View style={styles.modalBackground}>\r\n          <View style={styles.modalContainer}>\r\n            {isPreviewLoading ? (\r\n              <ActivityIndicator size=\"large\" color=\"#fff\" />\r\n            ) : previewData ? (\r\n              <>\r\n                <Text style={[styles.previewText, previewData.tipo === \"saida\" && styles.previewSaida]}>\r\n                  {previewData.tipo === \"saida\" ? \"SAÍDA\" : \"ENTRADA\"}\r\n                </Text>\r\n                <Text style={styles.previewHora}>Hora: {previewData.hora}</Text>\r\n                <View style={styles.modalButtonContainer}>\r\n                  <TouchableOpacity\r\n                    onPress={confirmarInsercaoManual}\r\n                    style={[styles.modalButton, styles.btnConfirmar]}\r\n                  >\r\n                    <Text style={styles.modalButtonText}>Sim</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={() => setManualModalVisible(false)}\r\n                    style={[styles.modalButton, styles.btnCancelar]}\r\n                  >\r\n                    <Text style={styles.modalButtonText}>Não</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </>\r\n            ) : (\r\n              <Text style={styles.modalText}>Não foi possível carregar o preview.</Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"black\"\r\n  },\r\n  camera: {\r\n    flex: 1\r\n  },\r\n  // Overlay com degradês e cantos arredondados\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  overlayTop: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(0,0,0,0.5)\"\r\n  },\r\n  overlayMiddle: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    alignItems: \"center\"\r\n  },\r\n  overlaySide: {\r\n    flex: 1,\r\n    height: 300,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\"\r\n  },\r\n  focusedArea: {\r\n    width: 300,\r\n    height: 300,\r\n    borderRadius: 20,\r\n    borderWidth: 2,\r\n    borderColor: \"#fff\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"transparent\"\r\n  },\r\n  overlayBottom: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(0,0,0,0.5)\"\r\n  },\r\n  animationOverlay: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"50%\",\r\n    marginLeft: -50,\r\n    marginTop: -50,\r\n    width: 100,\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n    backgroundColor: \"rgba(255, 255, 255, 0.3)\"\r\n  },\r\n  animationText: {\r\n    fontSize: 40,\r\n    color: \"white\"\r\n  },\r\n  backButton: {\r\n    position: \"absolute\",\r\n    top: 40,\r\n    left: 20,\r\n    zIndex: 10,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    padding: 10,\r\n    borderRadius: 20\r\n  },\r\n  backIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    tintColor: \"white\"\r\n  },\r\n  manualButton: {\r\n    position: \"absolute\",\r\n    bottom: 40,\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 10\r\n  },\r\n  manualButtonText: {\r\n    color: \"white\",\r\n    fontSize: 16\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    width: \"80%\",\r\n    height: \"80%\",\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    borderRadius: 10\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    marginBottom: 20,\r\n    textAlign: \"center\"\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  button: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5\r\n  },\r\n  btnSolicitar: {\r\n    backgroundColor: \"#47AD4D\"\r\n  },\r\n  btnManual: {\r\n    backgroundColor: \"#47AD4D\"\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 14\r\n  },\r\n  modalBackground: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.7)\"\r\n  },\r\n  // Caixa modal com 80% da largura e 40% da altura (ajustado para visualização vertical)\r\n  modalContainer: {\r\n    width: \"80%\",\r\n    height: \"40%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  modalText: {\r\n    fontSize: 16,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"black\"\r\n  },\r\n  modalButtonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\"\r\n  },\r\n  modalButton: {\r\n    flex: 1,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    alignItems: \"center\"\r\n  },\r\n  btnConfirmar: {\r\n    backgroundColor: \"#47AD4D\"\r\n  },\r\n  btnCancelar: {\r\n    backgroundColor: \"red\"\r\n  },\r\n  modalButtonText: {\r\n    color: \"white\",\r\n    fontSize: 16\r\n  },\r\n  previewText: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    color: \"green\"\r\n  },\r\n  previewSaida: {\r\n    color: \"red\"\r\n  },\r\n  previewHora: {\r\n    fontSize: 18,\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\nexport default QRCodeScannerScreen;","import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Modal, Alert, Platform, ActivityIndicator, Image, ImageBackground, StatusBar, Text as RNText, SafeAreaView,} from \"react-native\";\r\nimport { Text, Button, useTheme, TextInput,} from \"react-native-paper\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config_db\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\n\r\nconst PersonalizarTaskOuEventProfScreen = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const isWeb = Platform.OS === \"web\";\r\n\r\n  const { email } = (route.params as any);\r\n  \r\n  const url_fetchTasks     = `${config.baseUrl}/calendarioFiles/professor/tarefas/fetch_tasks.php`;\r\n  const url_fetchTaskView  = `${config.baseUrl}/calendarioFiles/professor/tarefas/fetch_task_view.php`;\r\n  const url_updateTask     = `${config.baseUrl}/calendarioFiles/professor/tarefas/update_task.php`;\r\n  const url_deleteTask     = `${config.baseUrl}/calendarioFiles/professor/tarefas/delete_task.php`;\r\n  const url_searchEvents   = `${config.baseUrl}/calendarioFiles/professor/eventos/fetch_events.php`;\r\n  const url_updateEvent    = `${config.baseUrl}/calendarioFiles/professor/eventos/update_event.php`;\r\n  const url_deleteEvent    = `${config.baseUrl}/calendarioFiles/professor/eventos/delete_event.php`;\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\"|\"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [tasks, setTasks] = useState<any[]>([]);\r\n  const [selectedTask, setSelectedTask] = useState<any>(null);\r\n  const [taskDescription, setTaskDescription] = useState(\"\");\r\n  const [taskColor, setTaskColor] = useState(\"#000000\");\r\n  const [taskDate, setTaskDate] = useState<Date>(new Date());\r\n  const [taskTime, setTaskTime] = useState<Date>(new Date());\r\n  const [showConfigModal, setShowConfigModal] = useState(false);\r\n  const [isEditingTask, setIsEditingTask] = useState(false);\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n  const [showTimePicker, setShowTimePicker] = useState(false);\r\n  const [showColorModal, setShowColorModal] = useState(false);\r\n  const [events, setEvents] = useState<any[]>([]);\r\n  const [selectedEvent, setSelectedEvent] = useState<any>(null);\r\n  const [eventTitle, setEventTitle] = useState(\"\");\r\n  const [eventDescription, setEventDescription] = useState(\"\");\r\n  const [eventColor, setEventColor] = useState(\"#000000\");\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const [isEditingEvent, setIsEditingEvent] = useState(false);\r\n  const [showEventColorModal, setShowEventColorModal] = useState(false);\r\n  const [eventStartDateObj, setEventStartDateObj] = useState<Date>(new Date());\r\n  const [eventStartTimeObj, setEventStartTimeObj] = useState<Date>(new Date());\r\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\r\n  const [showStartTimePicker, setShowStartTimePicker] = useState(false);\r\n  const [eventEndDateObj, setEventEndDateObj] = useState<Date>(new Date());\r\n  const [eventEndTimeObj, setEventEndTimeObj] = useState<Date>(new Date());\r\n  const [showEndDatePicker, setShowEndDatePicker] = useState(false);\r\n  const [showEndTimePicker, setShowEndTimePicker] = useState(false);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [toast, setToast] = useState<{visible: boolean; message: string; type: \"success\" | \"error\";}>({ visible: false, message: \"\", type: \"success\" });\r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#e0dede\" : theme.colors.onSurface;\r\n\r\n  const defaultColors = [\r\n    { value: \"#FF6347\", name: \"Tomate\" },\r\n    { value: \"#DC143C\", name: \"Carmesim\" },\r\n    { value: \"#FF4500\", name: \"Vermelho-Laranja\" },\r\n    { value: \"#8A2BE2\", name: \"Azul-Violeta\" },\r\n    { value: \"#5F9EA0\", name: \"Azul-Cadete\" },\r\n    { value: \"#2E8B57\", name: \"Verde-Mar\" },\r\n    { value: \"#FF8C00\", name: \"Laranja-Escuro\" },\r\n    { value: \"#9932CC\", name: \"Orquídea-Escura\" },\r\n    { value: \"#20B2AA\", name: \"Verde-Mar-Claro\" },\r\n    { value: \"#4682B4\", name: \"Azul-Aço\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let bg: string | null, mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (err) {\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchTasks = () => {\r\n    axios.post(url_fetchTasks, { email })\r\n      .then(r => {\r\n        setTasks(r.data.success && Array.isArray(r.data.tasks) ? r.data.tasks : []);\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const fetchEvents = () => {\r\n    axios.post(url_searchEvents, { email })\r\n      .then(r => {\r\n        setEvents(Array.isArray(r.data) ? r.data : []);\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const sanitize = (s: string) => s.replace(/['\";]/g, \"\");\r\n\r\n  const handleSelectTask = (task: any) => {\r\n    setSelectedTask(task);\r\n    axios.post(url_fetchTaskView, { tarefa_id: task.id, email })\r\n      .then(r => {\r\n        if (r.data.success && r.data.config) {\r\n          const cfg = r.data.config;\r\n          setTaskDescription(cfg.descricao || \"\");\r\n          const dt = new Date(cfg.data_da_tarefa);\r\n          setTaskDate(dt);\r\n          setTaskTime(dt);\r\n          setTaskTitle(cfg.titulo || \"\");\r\n          setTaskColor(cfg.cor || \"#000000\");\r\n        } else {\r\n          setTaskDescription(\"\");\r\n          setTaskColor(\"#000000\");\r\n        }\r\n        setIsEditingTask(false);\r\n        setShowConfigModal(true);\r\n      })\r\n      .catch(err => {\r\n        setShowConfigModal(true);\r\n      });\r\n  };\r\n\r\n  const updateTaskConfig = () => {\r\n    if (!selectedTask) {\r\n      return;\r\n    }\r\n    const confirmationMessage = 'Pretende atualizar os dados da tarefa?';\r\n\r\n    if (Platform.OS === 'web') {\r\n      if (window.confirm(confirmationMessage)) {\r\n        saveTaskConfig();\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        'Confirmação',\r\n        confirmationMessage,\r\n        [\r\n          { text: 'Não', style: 'cancel' },\r\n          { text: 'Guardar', onPress: saveTaskConfig }\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const saveTaskConfig = () => {\r\n    const dateStr = taskDate.toISOString().slice(0,10);\r\n    const [h, m] = taskTime.toTimeString().substr(0,5).split(':');\r\n    const timeStr = `${h}:${m}:00`;\r\n  \r\n    axios.post(url_updateTask, {\r\n      tarefa_id: selectedTask.id,\r\n      email,\r\n      titulo: sanitize(taskTitle),\r\n      descricao: sanitize(taskDescription),\r\n      cor: taskColor,\r\n      data_da_tarefa: `${dateStr} ${timeStr}`,\r\n    })\r\n    .then(r => {\r\n      if (r.data.success) {\r\n        showFeedback(r.data.message, 'success');\r\n        fetchTasks();\r\n        setShowConfigModal(false);\r\n        setSelectedTask(null);\r\n      } else {\r\n        showFeedback(r.data.message, 'error');\r\n      }\r\n    })\r\n    .catch(() => {\r\n      showFeedback('Ocorreu um erro da nossa parte enquanto tentávamos atualizar os dados da tarefa. Pedimos que tente novamente mais tarde.','error');\r\n    });\r\n  };\r\n\r\n  const deleteTask = () => {\r\n    if (!selectedTask) return;\r\n  \r\n    const confirmationMessage = \r\n      'Tem a certeza que pretende eliminar a tarefa permanentemente?';\r\n  \r\n    if (Platform.OS === 'web') {\r\n      if (window.confirm(confirmationMessage)) {\r\n        performDeleteTask();\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        'Confirmação',\r\n        confirmationMessage,\r\n        [\r\n          { text: 'Cancelar', style: 'cancel' },\r\n          { text: 'Sim, tenho a certeza', onPress: performDeleteTask }\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const performDeleteTask = () => {\r\n    axios.post(url_deleteTask, {\r\n      tarefa_id: selectedTask.id,\r\n      email\r\n    })\r\n    .then(r => {\r\n      if (r.data.success) {\r\n        showFeedback(r.data.message, 'success');\r\n        fetchTasks();\r\n        setShowConfigModal(false);\r\n        setSelectedTask(null);\r\n      } else {\r\n        showFeedback(r.data.message, 'error');\r\n      }\r\n    })\r\n    .catch(() => {\r\n      showFeedback('Ocorreu um erro enquanto tentávamos remover a tarefa permanentemente. Pedimos que tente novamente mais tarde.','error');\r\n    });\r\n  };\r\n\r\n  const handleSelectEvent = (ev: any) => {\r\n    setSelectedEvent(ev);\r\n    setEventTitle(ev.title);\r\n    setEventDescription(ev.descricao || \"\");\r\n    setEventColor(ev.color || \"#000000\");\r\n    const ds = new Date(ev.start_datetime);\r\n    setEventStartDateObj(ds);\r\n    setEventStartTimeObj(ds);\r\n    const de = new Date(ev.end_datetime);\r\n    setEventEndDateObj(de);\r\n    setEventEndTimeObj(de);\r\n    setIsEditingEvent(false);\r\n    setShowEventModal(true);\r\n  };\r\n\r\n  const updateEventConfig = () => {\r\n    if (!selectedEvent) return;\r\n  \r\n    const confirmationMessage = 'Guardar alterações no evento?';\r\n  \r\n    if (Platform.OS === 'web') {\r\n      if (window.confirm(confirmationMessage)) {\r\n        performUpdateEvent();\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        'Confirmação',\r\n        confirmationMessage,\r\n        [\r\n          { text: 'Cancelar', style: 'cancel' },\r\n          { text: 'Guardar', onPress: performUpdateEvent }\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const performUpdateEvent = () => {\r\n    const dateStart = eventStartDateObj.toISOString().slice(0, 10);\r\n    const [hS, mS] = eventStartTimeObj.toTimeString().substr(0, 5).split(':');\r\n    const startStr = `${dateStart} ${hS}:${mS}:00`;\r\n  \r\n    const dateEnd = eventEndDateObj.toISOString().slice(0, 10);\r\n    const [hE, mE] = eventEndTimeObj.toTimeString().substr(0, 5).split(':');\r\n    const endStr = `${dateEnd} ${hE}:${mE}:00`;\r\n  \r\n    axios.post(url_updateEvent, {\r\n      event_id: selectedEvent.id,\r\n      email,\r\n      title: sanitize(eventTitle),\r\n      start_datetime: startStr,\r\n      end_datetime: endStr,\r\n      descricao: sanitize(eventDescription),\r\n      color: eventColor,\r\n    })\r\n    .then(r => {\r\n      if (r.data.success) {\r\n        showFeedback(r.data.message, 'success');\r\n        fetchEvents();\r\n        setShowEventModal(false);\r\n        setSelectedEvent(null);\r\n      } else {\r\n        showFeedback(r.data.message, 'error');\r\n      }\r\n    })\r\n    .catch(() => {\r\n      showFeedback('Ocorreu um erro enquanto tentávamos alterar os dados do evento. Pedimos que tente novamente mais tarde.','error');\r\n    });\r\n  };\r\n\r\n  const deleteEvent = () => {\r\n    if (!selectedEvent) return;\r\n  \r\n    const confirmationMessage =\r\n      'Tem a certeza que pretende eliminar o evento de forma permanente?';\r\n  \r\n    if (Platform.OS === 'web') {\r\n      if (window.confirm(confirmationMessage)) {\r\n        performDeleteEvent();\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        'Confirmação',\r\n        confirmationMessage,\r\n        [\r\n          { text: 'Cancelar', style: 'cancel' },\r\n          { text: 'Sim, tenho a certeza', onPress: performDeleteEvent }\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const performDeleteEvent = () => {\r\n    axios.post(url_deleteEvent, {\r\n      event_id: selectedEvent.id,\r\n      email\r\n    })\r\n    .then(r => {\r\n      if (r.data.success) {\r\n        showFeedback(r.data.message, 'success');\r\n        fetchEvents();\r\n        setShowEventModal(false);\r\n        setSelectedEvent(null);\r\n      } else {\r\n        showFeedback(r.data.message, 'error');\r\n      }\r\n    })\r\n    .catch(() => {\r\n      showFeedback('Ocorreu um erro enquanto tentávamos eliminar o evento permanentemente. Pedimos que tente novamente mais tarde.','error');\r\n    });\r\n  };\r\n\r\n  const showFeedback = (message: string, type: \"success\" | \"error\") => {\r\n    if (Platform.OS === \"web\") {\r\n      window.alert(message);\r\n    } else {\r\n      setToast({ visible: true, message, type });\r\n      setTimeout(() => setToast(prev => ({ ...prev, visible: false })), 3000);\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <SafeAreaView style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={ backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\") } style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n          <Image source={require(\"../../assets/icons/angle-left.png\")} style={styles.backIcon}/>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setAccountModalVisible(true)}>\r\n          <Image source={require(\"../../assets/icons/user.png\")} style={styles.userIcon}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {toast.visible && (\r\n        <View style={[\r\n            styles.toast,\r\n            toast.type === \"success\" ? styles.toastSuccess : styles.toastError\r\n          ]}>\r\n          <Text style={styles.toastText}>{toast.message}</Text>\r\n        </View>\r\n      )}\r\n      <ScrollView contentContainerStyle={styles.scroll}>\r\n        <View style={ isWeb ? styles.webLayout : styles.mobileLayout }>\r\n          <View style={[styles.box, isWeb ? styles.boxWeb : styles.boxMobile]}>\r\n            <Text style={[styles.sectionTitle, { color: dynamicTextColor }]}>Tarefas</Text>\r\n            <ScrollView>\r\n              {tasks.map((t, i) => (\r\n                <TouchableOpacity key={i} onPress={() => handleSelectTask(t)} style={styles.item}>\r\n                  <Text style={[styles.itemText, { color: dynamicTextColor }]}>{t.titulo} – {t.data_da_tarefa}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </ScrollView>\r\n          </View>\r\n          <View style={[styles.box, isWeb ? styles.boxWeb : styles.boxMobile]}>\r\n            <Text style={[styles.sectionTitle, { color: dynamicTextColor }]}>Eventos</Text>\r\n            <ScrollView>\r\n              {events.map((ev, i) => (\r\n                <TouchableOpacity key={i} onPress={() => handleSelectEvent(ev)} style={styles.item}>\r\n                  <Text style={[styles.itemText, { color: dynamicTextColor }]}>{ev.title} – {ev.start_datetime}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n      <Modal visible={showConfigModal} animationType=\"slide\" transparent>\r\n        <ImageBackground source={ backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\") } style={styles.modalBg}>\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight - 20 || 20),\r\n              paddingHorizontal: 10,\r\n              paddingBottom: 10,\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 10,\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            <TouchableOpacity onPress={() => setShowConfigModal(false)} style={{ flex: 1 }}>\r\n              <Image\r\n                source={require(\"../../assets/icons/angle-left.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 35 : 23,\r\n                  height: Platform.OS === \"web\" ? 35 : 25,\r\n                  marginLeft: 3,\r\n                  marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n              <Image\r\n                source={require(\"../../assets/icons/user.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 30 : 25,\r\n                  height: Platform.OS === \"web\" ? 30 : 25,\r\n                  marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={ isWeb ? styles.webModalBox : styles.mobileModalBox }>\r\n            <ScrollView contentContainerStyle={styles.configModalContainer}>\r\n              <Text style={styles.warningText}>\r\n                {isEditingTask ? \"Edição da tarefa.\" : \"Detalhes da tarefa:\"}\r\n              </Text>\r\n              {!isEditingTask ? (\r\n                <>\r\n                  <View style={styles.summaryContainer}>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Título:</Text>\r\n                      <Text style={styles.summaryValue}>{taskTitle}</Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Descrição:</Text>\r\n                      <Text style={styles.summaryValue}>{taskDescription}</Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Data/Hora:</Text>\r\n                      <Text style={styles.summaryValue}>\r\n                        {taskDate.toISOString().slice(0,10)} {taskTime.toTimeString().slice(0,5)}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Cor:</Text>\r\n                      <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                    </View>\r\n                  </View>\r\n                  <Button mode=\"outlined\" onPress={() => setIsEditingTask(true)} style={styles.editButton} labelStyle={{ color: \"#47AD4D\" }}>  \r\n                    Editar\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Título:</Text>\r\n                    <TextInput\r\n                      mode=\"outlined\"\r\n                      value={taskTitle}\r\n                      onChangeText={t => setTaskTitle(sanitize(t))}\r\n                      style={styles.input}\r\n                    />\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Descrição:</Text>\r\n                  <TextInput\r\n                    mode=\"outlined\"\r\n                    value={taskDescription}\r\n                    onChangeText={t => setTaskDescription(sanitize(t))}\r\n                    style={styles.input}\r\n                  />\r\n                  {isWeb ? (\r\n                    <>\r\n                      <RNText style={[styles.label, { color: dynamicTextColor }]}>Data da Tarefa:</RNText>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={taskDate.toISOString().slice(0,10)}\r\n                        onChange={e => setTaskDate(new Date(e.target.value))}\r\n                        style={styles.webInput}\r\n                      />\r\n                      <RNText style={[styles.label, { color: dynamicTextColor }]}>Hora da Tarefa:</RNText>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={taskTime.toTimeString().slice(0,5)}\r\n                        onChange={e => {\r\n                          const [h,m] = e.target.value.split(\":\");\r\n                          const dt = new Date(taskTime);\r\n                          dt.setHours(+h); dt.setMinutes(+m);\r\n                          setTaskTime(dt);\r\n                        }}\r\n                        style={styles.webInput}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        label=\"Data da Tarefa\"\r\n                        value={taskDate.toISOString().slice(0,10)}\r\n                        editable={false}\r\n                        right={<TextInput.Icon icon=\"calendar\" onPress={() => setShowDatePicker(true)} />}\r\n                        style={styles.input}\r\n                      />\r\n                      {showDatePicker && (\r\n                        <DateTimePicker\r\n                          value={taskDate}\r\n                          mode=\"date\"\r\n                          display=\"default\"\r\n                          onChange={(_, dt) => {\r\n                            setShowDatePicker(false);\r\n                            if (dt) setTaskDate(dt);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        label=\"Hora da Tarefa\"\r\n                        value={taskTime.toTimeString().slice(0,5)}\r\n                        editable={false}\r\n                        right={<TextInput.Icon icon=\"clock-outline\" onPress={() => setShowTimePicker(true)} />}\r\n                        style={styles.input}\r\n                      />\r\n                      {showTimePicker && (\r\n                        <DateTimePicker\r\n                          value={taskTime}\r\n                          mode=\"time\"\r\n                          display=\"default\"\r\n                          onChange={(_, dt) => {\r\n                            setShowTimePicker(false);\r\n                            if (dt) setTaskTime(dt);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  )}\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Cor:</Text>\r\n                  <TouchableOpacity onPress={() => setShowColorModal(true)} style={styles.selectedColorDisplay}>\r\n                    <View style={[styles.colorCircle, { backgroundColor: taskColor }]} />\r\n                    <Text style={{ color: dynamicTextColor }}>Clique para alterar cor</Text>\r\n                  </TouchableOpacity>\r\n                  <View style={styles.buttonsRow}>\r\n                    <Button mode=\"contained\" onPress={updateTaskConfig} style={styles.saveButtonSmall}>Salvar</Button>\r\n                    <Button mode=\"contained\" onPress={deleteTask} style={styles.deleteButtonSmall}>Apagar</Button>\r\n                  </View>\r\n                  <Button mode=\"text\" onPress={() => setIsEditingTask(false)} labelStyle={{ color: \"#47AD4D\" }}>Cancelar</Button>\r\n                </>\r\n              )}\r\n            </ScrollView>\r\n          </View>\r\n        </ImageBackground>\r\n      </Modal>\r\n      <Modal visible={showColorModal} animationType=\"slide\" transparent>\r\n        <View style={styles.colorModalOverlay}>\r\n          <View style={styles.colorModalContainer}>\r\n            <Text style={styles.modalTitle}>Selecionar Cor</Text>\r\n            {defaultColors.map(opt => (\r\n              <TouchableOpacity key={opt.value} style={styles.colorOptionRow} onPress={() => { setTaskColor(opt.value); setShowColorModal(false);}}>\r\n                <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                <Text>{opt.name}</Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n            <Button mode=\"contained\" onPress={() => setShowColorModal(false)} style={{ backgroundColor: \"#47AD4D\" }}>Fechar</Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Modal visible={showEventModal} animationType=\"slide\" transparent>\r\n        <ImageBackground source={ backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\") } style={styles.modalBg}>\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight - 20 || 20),\r\n              paddingHorizontal: 10,\r\n              paddingBottom: 10,\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 10,\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            <TouchableOpacity onPress={() => setShowEventModal(false)} style={{ flex: 1 }}>\r\n              <Image\r\n                source={require(\"../../assets/icons/angle-left.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 35 : 23,\r\n                  height: Platform.OS === \"web\" ? 35 : 25,\r\n                  marginLeft: 3,\r\n                  marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n              <Image\r\n                source={require(\"../../assets/icons/user.png\")}\r\n                style={{\r\n                  width: Platform.OS === \"web\" ? 30 : 25,\r\n                  height: Platform.OS === \"web\" ? 30 : 25,\r\n                  marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                  tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={ isWeb ? styles.webModalBox : styles.mobileModalBox }>\r\n            <ScrollView contentContainerStyle={styles.configModalContainer}>\r\n              <Text style={styles.warningText}>\r\n                {isEditingEvent ? \"Edite os campos e salve.\" : \"Detalhes do evento:\"}\r\n              </Text>\r\n              {!isEditingEvent ? (\r\n                <>\r\n                  <View style={styles.summaryContainer}>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Título:</Text>\r\n                      <Text style={styles.summaryValue}>{eventTitle}</Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Início:</Text>\r\n                      <Text style={styles.summaryValue}>\r\n                        {eventStartDateObj.toISOString().slice(0,10)} {eventStartTimeObj.toTimeString().slice(0,5)}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Fim:</Text>\r\n                      <Text style={styles.summaryValue}>\r\n                        {eventEndDateObj.toISOString().slice(0,10)} {eventEndTimeObj.toTimeString().slice(0,5)}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Descrição:</Text>\r\n                      <Text style={styles.summaryValue}>{eventDescription}</Text>\r\n                    </View>\r\n                    <View style={styles.summaryRow}>\r\n                      <Text style={styles.summaryLabel}>Cor:</Text>\r\n                      <View style={[styles.colorCircle, { backgroundColor: eventColor }]} />\r\n                    </View>\r\n                  </View>\r\n                  <Button mode=\"outlined\" onPress={() => setIsEditingEvent(true)} style={styles.editButton} labelStyle={{ color: \"#47AD4D\" }}>Editar</Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Título:</Text>\r\n                  <TextInput\r\n                    mode=\"outlined\"\r\n                    value={eventTitle}\r\n                    onChangeText={t => setEventTitle(sanitize(t))}\r\n                    style={styles.input}\r\n                  />\r\n                  {isWeb ? (\r\n                    <>\r\n                      <RNText style={[styles.label, { color: dynamicTextColor }]}>Data de Início:</RNText>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={eventStartDateObj.toISOString().slice(0,10)}\r\n                        onChange={e => setEventStartDateObj(new Date(e.target.value))}\r\n                        style={styles.webInput}\r\n                      />\r\n                      <RNText style={[styles.label, { color: dynamicTextColor }]}>Hora de Início:</RNText>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={eventStartTimeObj.toTimeString().slice(0,5)}\r\n                        onChange={e => {\r\n                          const [h,m] = e.target.value.split(\":\");\r\n                          const dt = new Date(eventStartTimeObj);\r\n                          dt.setHours(+h); dt.setMinutes(+m);\r\n                          setEventStartTimeObj(dt);\r\n                        }}\r\n                        style={styles.webInput}\r\n                      />\r\n                      <RNText style={[styles.label, { color: dynamicTextColor }]}>Data de Fim:</RNText>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={eventEndDateObj.toISOString().slice(0,10)}\r\n                        onChange={e => setEventEndDateObj(new Date(e.target.value))}\r\n                        style={styles.webInput}\r\n                      />\r\n                      <RNText style={[styles.label, { color: dynamicTextColor }]}>Hora de Fim:</RNText>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={eventEndTimeObj.toTimeString().slice(0,5)}\r\n                        onChange={e => {\r\n                          const [h,m] = e.target.value.split(\":\");\r\n                          const dt = new Date(eventEndTimeObj);\r\n                          dt.setHours(+h); dt.setMinutes(+m);\r\n                          setEventEndTimeObj(dt);\r\n                        }}\r\n                        style={styles.webInput}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        label=\"Data de Início\"\r\n                        value={eventStartDateObj.toISOString().slice(0,10)}\r\n                        editable={false}\r\n                        right={<TextInput.Icon icon=\"calendar\" onPress={() => setShowStartDatePicker(true)} />}\r\n                        style={styles.input}\r\n                      />\r\n                      {showStartDatePicker && (\r\n                        <DateTimePicker\r\n                          value={eventStartDateObj}\r\n                          mode=\"date\"\r\n                          display=\"default\"\r\n                          onChange={(_, d) => {\r\n                            setShowStartDatePicker(false);\r\n                            if (d) setEventStartDateObj(d);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        label=\"Hora de Início\"\r\n                        value={eventStartTimeObj.toTimeString().slice(0,5)}\r\n                        editable={false}\r\n                        right={<TextInput.Icon icon=\"clock-outline\" onPress={() => setShowStartTimePicker(true)} />}\r\n                        style={styles.input}\r\n                      />\r\n                      {showStartTimePicker && (\r\n                        <DateTimePicker\r\n                          value={eventStartTimeObj}\r\n                          mode=\"time\"\r\n                          display=\"default\"\r\n                          onChange={(_, d) => {\r\n                            setShowStartTimePicker(false);\r\n                            if (d) setEventStartTimeObj(d);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        label=\"Data de Fim\"\r\n                        value={eventEndDateObj.toISOString().slice(0,10)}\r\n                        editable={false}\r\n                        right={<TextInput.Icon icon=\"calendar\" onPress={() => setShowEndDatePicker(true)} />}\r\n                        style={styles.input}\r\n                      />\r\n                      {showEndDatePicker && (\r\n                        <DateTimePicker\r\n                          value={eventEndDateObj}\r\n                          mode=\"date\"\r\n                          display=\"default\"\r\n                          onChange={(_, d) => {\r\n                            setShowEndDatePicker(false);\r\n                            if (d) setEventEndDateObj(d);\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <TextInput\r\n                        mode=\"outlined\"\r\n                        label=\"Hora de Fim\"\r\n                        value={eventEndTimeObj.toTimeString().slice(0,5)}\r\n                        editable={false}\r\n                        right={<TextInput.Icon icon=\"clock-outline\" onPress={() => setShowEndTimePicker(true)} />}\r\n                        style={styles.input}\r\n                      />\r\n                      {showEndTimePicker && (\r\n                        <DateTimePicker\r\n                          value={eventEndTimeObj}\r\n                          mode=\"time\"\r\n                          display=\"default\"\r\n                          onChange={(_, d) => {\r\n                            setShowEndTimePicker(false);\r\n                            if (d) setEventEndTimeObj(d);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  )}\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Descrição:</Text>\r\n                  <TextInput\r\n                    mode=\"outlined\"\r\n                    value={eventDescription}\r\n                    onChangeText={t => setEventDescription(sanitize(t))}\r\n                    style={styles.input}\r\n                  />\r\n                  <Text style={[styles.label, { color: dynamicTextColor }]}>Cor:</Text>\r\n                  <TouchableOpacity onPress={() => setShowEventColorModal(true)} style={styles.selectedColorDisplay}>\r\n                    <View style={[styles.colorCircle, { backgroundColor: eventColor }]} />\r\n                    <Text style={{ color: dynamicTextColor }}>Clique para alterar cor</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <View style={styles.buttonsRow}>\r\n                    <Button mode=\"contained\" onPress={updateEventConfig} style={styles.saveButtonSmall}>Salvar</Button>\r\n                    <Button mode=\"contained\" onPress={deleteEvent} style={styles.deleteButtonSmall}>Apagar</Button>\r\n                  </View>\r\n                  <Button mode=\"text\" onPress={() => setIsEditingEvent(false)} labelStyle={{ color: \"#47AD4D\" }}>Cancelar</Button>\r\n                </>\r\n              )}\r\n            </ScrollView>\r\n          </View>\r\n        </ImageBackground>\r\n      </Modal>\r\n      <Modal visible={showEventColorModal} animationType=\"slide\" transparent>\r\n        <View style={styles.colorModalOverlay}>\r\n          <View style={styles.colorModalContainer}>\r\n            <Text style={styles.modalTitle}>Selecionar Cor do Evento</Text>\r\n            {defaultColors.map(opt => (\r\n              <TouchableOpacity key={opt.value} style={styles.colorOptionRow} onPress={() => {\r\n                setEventColor(opt.value);\r\n                setShowEventColorModal(false);\r\n              }}>\r\n                <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                <Text>{opt.name}</Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n            <Button mode=\"contained\" onPress={() => setShowEventColorModal(false)} style={{ backgroundColor: \"#47AD4D\" }}>Fechar</Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation as any}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex:1 },\r\n  loaderBg: { flex:1, justifyContent:\"center\", alignItems:\"center\" },\r\n  header: { width:\"100%\", flexDirection:\"row\", justifyContent:\"space-between\", paddingTop: Platform.OS=== \"web\" ? 40 : (StatusBar.currentHeight||20), paddingHorizontal:10, paddingBottom:10, backgroundColor:\"white\", position:\"absolute\", top:0, zIndex:10},\r\n  backIcon: { width: Platform.OS === \"web\" ? 35 : 25, height: Platform.OS === \"web\" ? 35 : 25, tintColor:\"#000\" },\r\n  userIcon: { width: Platform.OS === \"web\" ? 35 : 25, height: Platform.OS === \"web\" ? 35 : 25, tintColor: \"#000\" },\r\n  scroll: { marginTop: Platform.OS===\"web\"? 40 : (StatusBar.currentHeight + 20 || 70), paddingTop: Platform.OS===\"web\"? 90 : (StatusBar.currentHeight||70), padding:16},\r\n  mobileLayout: { flexDirection:\"column\" },\r\n  webLayout: { flexDirection:\"row\", justifyContent:\"space-between\" },\r\n  box: { backgroundColor:\"white\", borderRadius:8, padding:12 },\r\n  boxMobile: { width:\"100%\", height:300, marginBottom:20 },\r\n  boxWeb: { width:\"48%\", height:400 },\r\n  sectionTitle: { fontSize:24, fontWeight:\"bold\", marginBottom: 12 },\r\n  item: { paddingVertical:8, borderBottomWidth:1, borderColor:\"#ddd\" },\r\n  itemText: { fontSize:18, marginVertical:6,},\r\n  modalBg: { flex:1 },\r\n  mobileModalBox: { flex: 1, marginTop: Platform.OS===\"web\" ? 90 : 70, backgroundColor: \"white\", borderTopLeftRadius: 16, borderTopRightRadius: 16, marginBottom: 190, padding: 20 },\r\n  webModalBox: { marginTop: 120, width: \"90%\", maxWidth: 700, maxHeight: \"85%\", backgroundColor: \"white\", borderRadius: 16, padding: 40, alignSelf: \"center\", justifyContent: \"flex-start\",},\r\n  configModalContainer: {padding: 30, paddingBottom: 50, alignItems: \"stretch\",},\r\n  warningText: { fontStyle:\"italic\", textAlign:\"center\", marginBottom:20 },\r\n  summaryContainer: { backgroundColor: \"#F9F9F9\", borderRadius: 8, padding: 20, marginBottom: 24, minHeight: 100}, \r\n  summaryRow: {flexDirection:\"row\", alignItems:\"center\", marginBottom:12},\r\n  summaryLabel: { flex: 1, fontWeight: \"bold\", fontSize: 18,                },\r\n  summaryValue: { flex: 2,fontSize: 18},\r\n  label: { marginBottom: 8, fontSize: 18},\r\n  input: { marginBottom: 20, height: 50},\r\n  webInput: { marginBottom:12, padding:8, borderWidth:1, borderRadius:4 },\r\n  selectedColorDisplay: { flexDirection:\"row\", alignItems:\"center\", marginBottom:12},\r\n  colorCircle: {width: 30, height:30, borderRadius:15, marginRight:10 },\r\n  buttonsRow: { flexDirection:\"row\", justifyContent:\"space-between\", marginVertical:16 },\r\n  saveButtonSmall: { flex:1, marginRight:8, backgroundColor:\"#47AD4D\" },\r\n  deleteButtonSmall: { flex:1, marginLeft:8, backgroundColor:\"#FF5733\" },\r\n  editButton: { alignSelf:\"flex-end\", marginBottom:16, borderColor:\"#47AD4D\", borderWidth:1},\r\n  colorModalOverlay: {flex:1, backgroundColor:\"rgba(0,0,0,0.5)\", justifyContent:\"center\", alignItems:\"center\"},\r\n  colorModalContainer: {width:\"80%\", backgroundColor:\"#FFF\", padding:20, borderRadius:10},\r\n  modalTitle: { fontSize:20, fontWeight:\"bold\", marginBottom:15, textAlign:\"center\"},\r\n  colorOptionRow: { flexDirection:\"row\", alignItems:\"center\", paddingVertical:8, borderBottomWidth:1, borderColor:\"#ccc\" },\r\n  toast: { position: \"absolute\", top: Platform.OS === \"web\" ? 10 : (StatusBar.currentHeight || 20) + 10, alignSelf: \"center\", paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, zIndex: 1000, maxWidth: \"90%\",},\r\n  toastSuccess: {backgroundColor: \"#4CAF50\",},\r\n  toastError: {backgroundColor: \"#F44336\",},\r\n  toastText: {color: \"#FFF\",fontSize: 16,textAlign: \"center\",},\r\n  centerContainer: { flex: 1, justifyContent: \"center\", alignItems: \"center\", backgroundColor: \"#fff\" },\r\n});\r\n\r\nexport default PersonalizarTaskOuEventProfScreen;","import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity, Text, Alert, Modal, ImageBackground, Image, ActivityIndicator, StatusBar, KeyboardAvoidingView, ScrollView, Platform,} from \"react-native\";\r\nimport { TextInput, Button, HelperText,} from \"react-native-paper\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config_db\";\r\n\r\nconst InsertPasswordScreen = () => {\r\n  const navigation = useNavigation<any>();\r\n  const route = useRoute<any>();\r\n  const email: string = route.params?.email || \"\";\r\n\r\n  const urlUpdatePassword = `${config.baseUrl}/loginFiles/updatePassword.php`;\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [isConfirmVisible, setIsConfirmVisible] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validatePassword = () => {\r\n    if (password.length < 6) {\r\n      setErrorMessage(\"Para a sua segurança pedimos que a palavra-passe tenha pelo menos 6 caracteres.\");\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage(\"As palavras-passes não coincidem.\");\r\n      return false;\r\n    }\r\n    setErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validatePassword()) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(urlUpdatePassword, { email, newPassword: password});\r\n      if (res.data.success) {\r\n        const role = res.data.userRole;\r\n        if (role === \"aluno\" && !res.data.studentDetailsComplete) {\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        const successMessage = \"A sua palavra-passe foi criada. Agora, faça login com a nova palavra‑passe.\";\r\n        if (Platform.OS === \"web\") {\r\n          window.alert(successMessage);\r\n          navigation.replace(\"Login\");\r\n        } else {\r\n          Alert.alert(\r\n            \"Sucesso!\",\r\n            successMessage,\r\n            [{ text: \"OK\", onPress: () => navigation.replace(\"Login\") }]\r\n          );\r\n        }\r\n      } else {\r\n        setErrorMessage(res.data.message || \"Ocorreu um problema enquanto tentavamos atualizar a sua palavra-passe.\");\r\n      }\r\n    } catch {\r\n      setErrorMessage(\"Ocorreu um problema enquanto tentavamos conectar aos nossos servidores. Pedimos que tente novamente.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require(\"../../assets/images/bg1.jpg\")}\r\n        style={styles.background}\r\n      >\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={require(\"../../assets/images/bg1.jpg\")} style={styles.background}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"transparent\" translucent />\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={[styles.box, { backgroundColor: \"#FFFFFF\" }]}>\r\n          <View style={styles.headerRow}>\r\n            <Text style={{ fontSize: 24, fontWeight: \"bold\", color: \"#000\", textAlign: \"center\" }}>\r\n              Nova Palavra‑Passe\r\n            </Text>\r\n            <View style={{ width: 60 }} />\r\n          </View>\r\n          <TextInput\r\n            label=\"Nova Palavra‑Passe\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry={!isPasswordVisible}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            theme={{\r\n              colors: { primary: \"#47AD4D\", background: \"#fff\", text: \"#000\" },\r\n            }}\r\n            right={\r\n              <TextInput.Icon\r\n                icon={() => (\r\n                  <TouchableOpacity onPress={() => setIsPasswordVisible(v => !v)}>\r\n                    <Image\r\n                      source={\r\n                        isPasswordVisible\r\n                          ? require(\"../../assets/icons/eye-off.png\")\r\n                          : require(\"../../assets/icons/eye.png\")\r\n                      }\r\n                      style={styles.iconStyle}\r\n                    />\r\n                  </TouchableOpacity>\r\n                )}\r\n              />\r\n            }\r\n          />\r\n          <TextInput\r\n            label=\"Confirmar Palavra‑Passe\"\r\n            value={confirmPassword}\r\n            onChangeText={setConfirmPassword}\r\n            secureTextEntry={!isConfirmVisible}\r\n            mode=\"outlined\"\r\n            style={[styles.input, { marginTop: 10 }]}\r\n            theme={{\r\n              colors: { primary: \"#47AD4D\", background: \"#fff\", text: \"#000\" },\r\n            }}\r\n            right={\r\n              <TextInput.Icon\r\n                icon={() => (\r\n                  <TouchableOpacity onPress={() => setIsConfirmVisible(v => !v)}>\r\n                    <Image\r\n                      source={\r\n                        isConfirmVisible\r\n                          ? require(\"../../assets/icons/eye-off.png\")\r\n                          : require(\"../../assets/icons/eye.png\")\r\n                      }\r\n                      style={styles.iconStyle}\r\n                    />\r\n                  </TouchableOpacity>\r\n                )}\r\n              />\r\n            }\r\n          />\r\n          {errorMessage ? (\r\n            <HelperText type=\"error\" visible style={styles.errorText}>\r\n              {errorMessage}\r\n            </HelperText>\r\n          ) : null}\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleSubmit}\r\n            style={styles.submitButton}\r\n            labelStyle={{ color: \"#fff\" }}\r\n          >\r\n            Confirmar\r\n          </Button>\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={() => navigation.navigate(\"Login\")}\r\n            style={styles.link}\r\n            labelStyle={{ color: \"#47AD4D\" }}\r\n          >\r\n            Voltar\r\n          </Button>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  box: {\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    elevation: 3,\r\n    alignItems: \"center\",\r\n  },\r\n  headerRow: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    color: \"#000\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  submitButton: {\r\n    width: \"100%\",\r\n    marginTop: 16,\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  errorText: {\r\n    color: \"#B00020\",\r\n    marginTop: 8,\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    marginTop: 8\r\n  },\r\n  iconStyle: {\r\n    width: 24,\r\n    height: 24,\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n\r\nexport default InsertPasswordScreen;","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { View, StyleSheet, Text, Platform, ImageBackground, StatusBar, KeyboardAvoidingView, ScrollView, ActivityIndicator,} from \"react-native\";\r\nimport { TextInput, Button, HelperText } from \"react-native-paper\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config_db\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\nconst VerificationScreen = () => {\r\n  const navigation = useNavigation<any>();\r\n  const route = useRoute<any>();\r\n  const email: string = route.params?.email || \"\";\r\n\r\n  const url =`${config.baseUrl}/loginFiles/sendVerificationCode.php`;\r\n  const url_validateCode = `${config.baseUrl}/loginFiles/verifyCode.php`;\r\n\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [sendingCode, setSendingCode] = useState(false);\r\n\r\n  const [resendTimer, setResendTimer] = useState(0);\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  const startResendTimer = () => {\r\n    setResendTimer(60);\r\n    timerRef.current = setInterval(() => {\r\n      setResendTimer(prev => {\r\n        if (prev <= 1) {\r\n          if (timerRef.current) clearInterval(timerRef.current);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const sendCode = useCallback(async () => {\r\n    if (sendingCode || resendTimer > 0) return;\r\n    setSendingCode(true);\r\n    setErrorMessage(\"\");\r\n    try {\r\n      const response = await axios.post( url, { email }, { headers: { \"Content-Type\": \"application/json\" } });\r\n      if (response.data.success) {\r\n        startResendTimer();\r\n      } else {\r\n        setErrorMessage(response.data.message || \"Ocorreu um erro da nossa parte ao tentar enviar o código para o seu email. Pedimos que tente novamente mais tarde.\");\r\n      }\r\n    } catch {\r\n      setErrorMessage(\"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.\");\r\n    } finally {\r\n      setSendingCode(false);\r\n    }\r\n  }, [email, sendingCode, resendTimer]);\r\n\r\n  useEffect(() => {\r\n    if (email) sendCode();\r\n  }, [email, sendCode]);\r\n\r\n  const handleVerify = async () => {\r\n    if (!verificationCode.trim()) {\r\n      setErrorMessage(\"Por favor, para a sua segurança pedimos que insira o código de verificação.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post( url_validateCode, { email, code: verificationCode }, { headers: { \"Content-Type\": \"application/json\" } });\r\n      if (response.data.success) {\r\n        if (Platform.OS !== \"web\"){\r\n          ToastAndroid.show(\"Código verificado com sucesso!\", ToastAndroid.LONG);\r\n          navigation.replace(\"InsertPasswordScreen\", { email });\r\n        } else {\r\n          window.alert(\"Código verificado com sucesso!\");\r\n          navigation.replace(\"InsertPasswordScreen\", { email });\r\n        }\r\n      } else {\r\n        setErrorMessage(response.data.message || \"O código que inseriu não é o mesmo que foi enviado para o seu email.\");\r\n      }\r\n    } catch {\r\n      setErrorMessage(\"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={ require(\"../../assets/images/bg1.jpg\") }\r\n        style={styles.background}\r\n      >\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={ require(\"../../assets/images/bg1.jpg\")} style={styles.background}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"transparent\" translucent/>\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={[styles.box, { backgroundColor: \"#FFFFFF\" }]}>\r\n          <ScrollView contentContainerStyle={styles.form}>\r\n            <Text style={{ fontSize: 24, fontWeight: \"bold\", color:\"#000\", textAlign: \"center\" }}>\r\n                Verificação adicional\r\n              </Text>\r\n              <Text style={styles.subtitle}>\r\n                Para a sua segurança enviamos um código para:{\"\\n\"}\r\n                <Text style={{ fontWeight: \"bold\", marginBottom: 20 }}>{email}</Text>\r\n              </Text>\r\n              <TextInput\r\n                label=\"Código de Verificação\"\r\n                value={verificationCode}\r\n                onChangeText={setVerificationCode}\r\n                mode=\"outlined\"\r\n                keyboardType=\"numeric\"\r\n                style={styles.input}\r\n                theme={{\r\n                  colors: {\r\n                    primary: \"#47AD4D\",\r\n                    background: \"#fff\",\r\n                    text: \"#000\",\r\n                  },\r\n                }}\r\n              />\r\n              {errorMessage ? (\r\n                <HelperText type=\"error\" visible style={styles.errorText}>\r\n                  {errorMessage}\r\n                </HelperText>\r\n              ) : null}\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={handleVerify}\r\n                style={styles.submitButton}\r\n                labelStyle={{ color: \"#fff\" }}\r\n                disabled={loading}\r\n              >\r\n                Confirmar Código\r\n              </Button>\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={sendCode}\r\n                style={styles.resendButton}\r\n                labelStyle={{ color: \"#47AD4D\" }}\r\n                disabled={resendTimer > 0 || sendingCode}\r\n              >\r\n                {resendTimer > 0\r\n                  ? `Reenviar em ${resendTimer}s`\r\n                  : \"Reenviar Código\"}\r\n              </Button>\r\n              <Button\r\n                mode=\"text\"\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n                style={styles.link}\r\n                labelStyle={{ color: \"#47AD4D\" }}\r\n              >\r\n                Voltar\r\n              </Button>\r\n          </ScrollView>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  box: {\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    elevation: 3,\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  subtitle: {\r\n    marginTop: 8,\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    marginBottom: 8,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  submitButton: {\r\n    width: \"100%\",\r\n    marginTop: 12,\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  resendButton: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    borderColor: \"#47AD4D\",\r\n  },\r\n  errorText: {\r\n    color: \"#B00020\",\r\n    marginBottom: 4,\r\n  },\r\n  backButton: {\r\n    marginTop: 16,\r\n    alignSelf: \"center\",\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    marginTop: 8\r\n  },\r\n});\r\n\r\nexport default VerificationScreen;","import React, { useState } from 'react';\r\nimport { View, StyleSheet, KeyboardAvoidingView, ImageBackground, Image, Platform, ActivityIndicator, TouchableOpacity} from 'react-native';\r\nimport { Text, TextInput, Button, HelperText } from 'react-native-paper';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport config from '../../config/config_db';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RootStackParamList } from '../../types';\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\ninterface RouteParams {\r\n  email: string;\r\n}\r\n\r\nconst PutNewPassForgetPassword = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const route = useRoute();\r\n  const { email } = route.params as RouteParams;\r\n\r\n  const url = `${config.baseUrl}/forgetPasswordfiles/SaveNewPassForgetPassword.php`;\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const showMessage = (msg: string) => {\r\n    if (Platform.OS === 'web') {\r\n      window.alert(msg);\r\n    } else {\r\n      ToastAndroid.show(msg, ToastAndroid.LONG);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (password.length < 6) {\r\n      showMessage('Para a sua segurança pedimos que coloque uma palavra-passe com mais de 6 caracteres.');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      showMessage('As palavras-passes não são iguais.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setErrorMessage('');\r\n    try {\r\n      const { data } = await axios.post( url, { email, newPassword: password });\r\n      if (data.success) {\r\n        const msg = 'A sua palavra‑passe atualizada com sucesso!';\r\n        showMessage(msg);\r\n        navigation.replace('Login');\r\n      } else {\r\n        setErrorMessage(data.message || 'Ocorreu um erro da nossa para enquanto tentavamos atualizar a sua palavra‑passe. Pedimos que tente novamente.');\r\n      }\r\n    } catch (e) {\r\n      setErrorMessage('Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require('../../assets/images/bg1.jpg')}\r\n        style={styles.background}\r\n      >\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../../assets/images/bg1.jpg')}\r\n      style={styles.background}\r\n    >\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\r\n        style={styles.container}\r\n      >\r\n        <View style={styles.box}>\r\n          <Text variant=\"headlineMedium\" style={[styles.title, { color: \"#000\" }]}>\r\n            Atualizar a palavra‑passe\r\n          </Text>\r\n\r\n          {errorMessage !== '' && (\r\n            <HelperText type=\"error\" visible style={styles.errorText}>\r\n              {errorMessage}\r\n            </HelperText>\r\n          )}\r\n\r\n          <TextInput\r\n            label=\"Palavra‑passe\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry={!showPassword}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            outlineColor=\"#47AD4D\"\r\n            activeOutlineColor=\"#47AD4D\"\r\n            right={\r\n                <TextInput.Icon\r\n                  icon={() => (\r\n                    <TouchableOpacity onPress={() => setShowPassword(prev => !prev)}>\r\n                      <Image\r\n                        source={\r\n                          showPassword\r\n                            ? require(\"../../assets/icons/eye-off.png\")\r\n                            : require(\"../../assets/icons/eye.png\")\r\n                        }\r\n                        style={styles.iconStyle}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  )}\r\n                />\r\n            }\r\n          />\r\n          <TextInput\r\n            label=\"Confirmar a palavra‑passe\"\r\n            value={confirmPassword}\r\n            onChangeText={setConfirmPassword}\r\n            secureTextEntry={!showConfirm}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            outlineColor=\"#47AD4D\"\r\n            activeOutlineColor=\"#47AD4D\"\r\n            right={\r\n              <TextInput.Icon\r\n                icon={() => (\r\n                  <TouchableOpacity onPress={() => setShowConfirm(prev => !prev)}>\r\n                    <Image\r\n                      source={\r\n                        showConfirm\r\n                          ? require(\"../../assets/icons/eye-off.png\")\r\n                          : require(\"../../assets/icons/eye.png\")\r\n                      }\r\n                      style={styles.iconStyle}\r\n                    />\r\n                  </TouchableOpacity>\r\n                )}\r\n              />\r\n          }\r\n        />\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleSubmit}\r\n            style={styles.submitButton}\r\n            labelStyle={{ color: '#FFF' }}\r\n            disabled={!password || !confirmPassword}\r\n          >\r\n            Atualizar a palavra-passe\r\n          </Button>\r\n\r\n          <TouchableOpacity onPress={() => navigation.replace('Login')}>\r\n            <Text style={styles.backText}>Cancelar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  iconStyle: {\r\n    width: 24,\r\n    height: 24,\r\n    resizeMode: \"contain\",\r\n  },\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    width: '100%',\r\n  },\r\n  box: {\r\n    width: '90%',\r\n    maxWidth: 400,\r\n    backgroundColor: 'white',\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    elevation: 4,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 8,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    fontWeight: '700',\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    backgroundColor: 'white',\r\n  },\r\n  submitButton: {\r\n    width: '100%',\r\n    marginTop: 8,\r\n    backgroundColor: '#47AD4D',\r\n  },\r\n  errorText: {\r\n    color: '#D9534F',\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n  },\r\n  backText: {\r\n    color: '#D9534F',\r\n    marginTop: 12,\r\n  },\r\n});\r\n\r\nexport default PutNewPassForgetPassword;","// src/screens/VerifyCodeForgetPassword.tsx\r\nimport config from '../../config/config_db';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, KeyboardAvoidingView, ImageBackground, ActivityIndicator, TouchableOpacity, Platform,} from 'react-native';\r\nimport { Text, TextInput, Button, HelperText } from 'react-native-paper';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RootStackParamList } from '../../types';\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype NavigationProp = StackNavigationProp<RootStackParamList>;\r\n\r\ninterface RouteParams {\r\n  email?: string;\r\n  initialMessage?: string;\r\n}\r\n\r\nconst VerifyCodeForgetPassword = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const route = useRoute();\r\n\r\n  const { email: initialEmail = '', initialMessage = '' } = route.params as RouteParams;\r\n\r\n  const url_validateCode = `${config.baseUrl}/forgetPasswordfiles/validateCodeForgetPassword.php`;\r\n  const url_sendEmail = `${config.baseUrl}/forgetPasswordfiles/sendEmailForgetPassword.php`;\r\n\r\n  const [formData, setFormData] = useState({ email: initialEmail, code: '' });\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [resendCooldown, setResendCooldown] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (initialMessage) {\r\n      setSuccessMessage(initialMessage);\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 2000);\r\n    }\r\n  }, [initialMessage]);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n    if (resendCooldown > 0) {\r\n      timer = setInterval(() => {\r\n        setResendCooldown(prev => (prev <= 1 ? 0 : prev - 1));\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [resendCooldown]);\r\n\r\n  const handleChange = (name: string, value: string) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleCodeSubmit = async () => {\r\n    if (!formData.code) {\r\n      setErrorMessage('Pedimos que insira o código enviado para o seu email.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setErrorMessage('');\r\n    try {\r\n      const response = await fetch(url_validateCode, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ email: formData.email, code: formData.code }),});\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        setSuccessMessage('Código verificado com sucesso!');\r\n        if (Platform.OS !== 'web') {\r\n          ToastAndroid.show('Código verificado com sucesso!', ToastAndroid.LONG);\r\n        }\r\n        setTimeout(() => setSuccessMessage(''), 2000);\r\n        setTimeout(() => {\r\n          navigation.navigate('PutNewPassForgetPassword', { email: formData.email });\r\n        }, 1000);\r\n      } else {\r\n        setErrorMessage(result.message || 'Ocorreu um erro da nossa parte enquanto tentavamos validar o código. Pedimos que tente novamente.');\r\n      }\r\n    } catch {\r\n      setErrorMessage('Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResendCode = async () => {\r\n    if (resendCooldown > 0) return;\r\n    setResendCooldown(60);\r\n    setLoading(true);\r\n    setErrorMessage('');\r\n    try {\r\n      const response = await fetch(url_sendEmail, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ email: formData.email }), });\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        const msg = result.message || `Enviamos o código novamente para ${formData.email} com sucesso!`;\r\n        setSuccessMessage(msg);\r\n        if (Platform.OS !== 'web') {\r\n          ToastAndroid.show(msg, ToastAndroid.LONG);\r\n        }\r\n        setTimeout(() => setSuccessMessage(''), 5000);\r\n      } else {\r\n        setErrorMessage(result.message || 'Não conseguimos enviar o código novamente. Pedimos que tente novamente.');\r\n      }\r\n    } catch {\r\n      setErrorMessage('Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require('../../assets/images/bg1.jpg')}\r\n        style={styles.background}\r\n      >\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../../assets/images/bg1.jpg')}\r\n      style={styles.background}\r\n    >\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={styles.box}>\r\n          <Text variant=\"headlineMedium\" style={styles.title}>\r\n            Código de verificação\r\n          </Text>\r\n\r\n          {successMessage !== '' && (\r\n            <View style={styles.toastContainer}>\r\n              <View style={styles.toastBox}>\r\n                <Text style={styles.toastText}>{successMessage}</Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n          {errorMessage !== '' && (\r\n            <HelperText type=\"error\" visible style={styles.errorText}>\r\n              {errorMessage}\r\n            </HelperText>\r\n          )}\r\n\r\n          <TextInput\r\n            label=\"Código\"\r\n            value={formData.code}\r\n            onChangeText={text => handleChange('code', text)}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"number-pad\"\r\n            outlineColor=\"#47AD4D\"\r\n            activeOutlineColor=\"#47AD4D\"\r\n          />\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleCodeSubmit}\r\n            style={styles.verifyButton}\r\n            labelStyle={{ color: '#fff' }}\r\n          >\r\n            Verificar Código\r\n          </Button>\r\n\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={handleResendCode}\r\n            disabled={resendCooldown > 0}\r\n            style={styles.link}\r\n            labelStyle={{ color: '#47AD4D' }}\r\n          >\r\n            {resendCooldown > 0 ? `Reenviar código (${resendCooldown}s)` : 'Reenviar código'}\r\n          </Button>\r\n\r\n          <TouchableOpacity onPress={() => navigation.replace('Login')}>\r\n            <Text style={styles.backText}>Voltar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    padding: 16,\r\n  },\r\n  box: {\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    backgroundColor: 'white',\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    backgroundColor: 'white',\r\n  },\r\n  link: {\r\n    textAlign: 'center',\r\n    marginTop: -8,\r\n  },\r\n  verifyButton: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    backgroundColor: '#47AD4D',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    marginBottom: 8,\r\n  },\r\n  backText: {\r\n    color: 'red',\r\n    marginTop: 8,\r\n  },\r\n  toastContainer: {\r\n    position: 'absolute',\r\n    top: -200,     \r\n    left: 16,       \r\n    right: 16,\r\n    alignItems: 'center',\r\n    zIndex: 10,\r\n  },\r\n  toastBox: {\r\n    backgroundColor: '#47AD4D',\r\n    borderRadius: 14,            \r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    elevation: 5,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n  },\r\n  toastText: {\r\n    color: '#FFF',\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default VerifyCodeForgetPassword;","import config from '../../config/config_db';\r\nimport React, { useState } from 'react';\r\nimport {View, StyleSheet, KeyboardAvoidingView, ImageBackground, Platform, ActivityIndicator,} from 'react-native';\r\nimport { Text, TextInput, Button, HelperText } from 'react-native-paper';\r\nimport { useNavigation, NavigationProp } from '@react-navigation/native';\r\nimport { RootStackParamList } from '../../types';\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\nconst ForgetPasswordScreen = () => {\r\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\r\n\r\n  const url = `${config.baseUrl}/forgetPasswordFiles/sendEmailForgetPassword.php`;\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const handleResetPassword = async () => {\r\n    setErrorMessage('');\r\n    if (!email) {\r\n      setErrorMessage('Pedimos que coloque o seu email no campo.');\r\n      return;\r\n    }\r\n    if (!email.includes('@etps.com.pt')) {\r\n      setErrorMessage('Pedimos que insira um email válido.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ email })});\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        if (Platform.OS === 'web') {\r\n          navigation.navigate('VerifyCodeForgetPassword', {\r\n            email, initialMessage: data.message || 'Pedimos que verifique o código que enviamos para o seu email.'});\r\n        } else {\r\n          ToastAndroid.show('Pedimos que verifique o código que enviamos para o seu email.', ToastAndroid.LONG);\r\n          navigation.navigate('VerifyCodeForgetPassword', { email });\r\n        }\r\n      } else if (data.emailNaoExiste === true) {\r\n        setErrorMessage('Não foi possível encontrar o email fornecido na nossa base de dados. Se quiser pode criar uma conta.');\r\n        navigation.navigate('Login');\r\n      } else {\r\n        setErrorMessage('Não foi possível encontrar o email fornecido na nossa base de dados. Se quiser pode criar uma conta.');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Ocorreu um erro da nossa parte enquanto tentavamos enviar um código para o seu email. Pedimos que tente novamente mais tarde.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require('../../assets/images/bg1.jpg')}\r\n        style={styles.background}\r\n      >\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../../assets/images/bg1.jpg')}\r\n      style={styles.background}\r\n    >\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={styles.box}>\r\n          <Text variant=\"titleLarge\" style={styles.title}>Recuperar a palavra-passe</Text>\r\n          <Text variant=\"bodySmall\" style={styles.title}>Insira o seu email, em seguida será enviado um código para o seu email para validar a sua identidade e por fim poderá alterar a palavra-passe.</Text>\r\n          \r\n          {errorMessage !== '' && (\r\n            <HelperText type=\"error\" visible>\r\n              {errorMessage}\r\n            </HelperText>\r\n          )}\r\n\r\n          <TextInput\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"email-address\"\r\n            outlineColor=\"#47AD4D\"\r\n            activeOutlineColor=\"#47AD4D\"\r\n          />\r\n\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleResetPassword}\r\n            style={styles.sendLinkButton}\r\n          >\r\n            Enviar código para o email\r\n          </Button>\r\n          <Button\r\n            mode=\"text\"\r\n            onPress={() => navigation.navigate('Login')}\r\n            style={styles.backToLoginButton}\r\n            textColor=\"red\"\r\n          >\r\n            Voltar\r\n          </Button>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    padding: 16,\r\n  },\r\n  box: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n    elevation: 3,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n  },\r\n  sendLinkButton: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    backgroundColor: '#47AD4D',\r\n  },\r\n  backToLoginButton: {\r\n    alignSelf: 'center',\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nexport default ForgetPasswordScreen;","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport QRCode from 'react-native-qrcode-svg';\r\n\r\nconst GenerateQRCodeScreen = () => {\r\n  // Você pode definir o valor estático ou, por exemplo, concatenar a data atual\r\n  const qrData = \"entrada-saida\"; // ou, por exemplo: `entrada-saida-${new Date().toISOString().slice(0,10)}`;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>QR Code de Entrada/Saída</Text>\r\n      <QRCode value={qrData} size={200} />\r\n      <Text style={styles.info}>Faça scan este código para registrar sua entrada/saída</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { \r\n    flex: 1, \r\n    justifyContent: 'center', \r\n    alignItems: 'center', \r\n    backgroundColor: '#fff' \r\n  },\r\n  title: { \r\n    fontSize: 24, \r\n    marginBottom: 20 \r\n  },\r\n  info: {\r\n    fontSize: 16,\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n});\r\n\r\nexport default GenerateQRCodeScreen;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  ScrollView,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Modal,\r\n  Text,\r\n  TouchableOpacity,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  KeyboardAvoidingView\r\n} from \"react-native\";\r\nimport { Button, Card, TextInput, useTheme } from \"react-native-paper\";\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport * as FileSystem from \"expo-file-system\";\r\nimport { WebView } from \"react-native-webview\";\r\nimport config from \"../../config/config_db\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\n\r\n// Interfaces para retorno do expo-document-picker\r\ninterface DocumentPickerAsset {\r\n  uri: string;\r\n  name: string;\r\n  size?: number;\r\n  type?: string;\r\n  mimeType?: string;\r\n}\r\n\r\ninterface DocumentPickerResultNew {\r\n  canceled: boolean;\r\n  assets?: DocumentPickerAsset[];\r\n}\r\n\r\nconst PutCalendar = ({ navigation, route }: any) => {\r\n  const theme = useTheme();\r\n  const { email } = route.params;\r\n\r\n  const [turmas, setTurmas] = useState<any[]>([]);\r\n  const [selectedAno, setSelectedAno] = useState('');\r\n  const [selectedTurma, setSelectedTurma] = useState('');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [pdfFile, setPdfFile] = useState<DocumentPickerAsset | null>(null);\r\n  const [pdfBase64, setPdfBase64] = useState<string | null>(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [previewPdf, setPreviewPdf] = useState<string | null>(null);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [inputsMovedUp, setInputsMovedUp] = useState(false);\r\n  const [modalContaVisivel, setModalContaVisivel] = useState(false);\r\n\r\n  const url_getTurmas = `${config.baseUrl}/adminFiles/getTurmas.php`;\r\n  const url_uploadCalendar = `${config.baseUrl}/adminFiles/uploadCalendar.php`;\r\n\r\n  const isWebWithPdf = Platform.OS === \"web\" && pdfFile;\r\n  const headerPadding = StatusBar.currentHeight || 20;\r\n\r\n  // Obtém as dimensões da tela\r\n  const windowHeight = Dimensions.get(\"window\").height;\r\n\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (e) {\r\n        console.log(\"[DEBUG] Erro ao carregar as configurações:\", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(url_getTurmas)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          console.log(\"[DEBUG] Turmas recebidas:\", data.data);\r\n            setTurmas(data.data); \r\n            setTurmas(Array.isArray(data.turmas) ? data.turmas : []);\r\n          } else {\r\n            console.log(\"[DEBUG] Erro ao buscar turmas:\", data.message);\r\n            Alert.alert(\"Erro\", data.message || \"Erro ao buscar turmas.\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          console.log(\"[DEBUG] Erro na comunicação com o servidor.\");\r\n          Alert.alert(\"Erro\", \"Erro na comunicação com o servidor.\");\r\n        });\r\n  }, [url_getTurmas]);\r\n\r\n  const openDocumentPicker = async () => {\r\n    try {\r\n      setModalVisible(false);\r\n      setTimeout(async () => {\r\n        const result = (await DocumentPicker.getDocumentAsync({ type: \"application/pdf\" })) as DocumentPickerResultNew;\r\n        console.log(\"[DEBUG] Resultado do DocumentPicker:\", result);\r\n        if (!result.canceled && result.assets && result.assets.length > 0) {\r\n          const asset = result.assets[0];\r\n          console.log(\"[DEBUG] Arquivo selecionado:\", asset);\r\n          setPdfFile(asset);\r\n          setPreviewPdf(asset.name);\r\n          try {\r\n            if (Platform.OS === \"web\") {\r\n              // Na web, convertemos a URI (blob) em base64 usando FileReader\r\n              const response = await fetch(asset.uri);\r\n              const blob = await response.blob();\r\n              const reader = new FileReader();\r\n              reader.onloadend = () => {\r\n                let base64data = reader.result as string;\r\n                base64data = base64data.split(\",\")[1];\r\n                setPdfBase64(base64data);\r\n              };\r\n              reader.readAsDataURL(blob);\r\n            } else {\r\n              // Em dispositivos nativos, usamos expo-file-system\r\n              const base64 = await FileSystem.readAsStringAsync(asset.uri, {\r\n                encoding: FileSystem.EncodingType.Base64,\r\n              });\r\n              setPdfBase64(base64);\r\n            }\r\n          } catch (e) {\r\n            console.log(\"[DEBUG] Erro ao ler o arquivo como base64:\", e);\r\n            Alert.alert(\"Erro\", \"Não foi possível ler o arquivo para pré-visualização.\");\r\n          }\r\n        } else {\r\n          console.log(\"[DEBUG] Seleção cancelada ou sem sucesso\");\r\n        }\r\n      }, 100);\r\n    } catch (error) {\r\n      console.log(\"[DEBUG] Erro ao selecionar o arquivo:\", error);\r\n      Alert.alert(\"Erro\", \"Não foi possível selecionar o arquivo.\");\r\n    }\r\n  };\r\n\r\n  const uploadPdf = async () => {\r\n    if (!selectedAno || !selectedTurma || !pdfFile) {\r\n      Alert.alert(\"Atenção\", \"Selecione o ano, a turma e o PDF.\");\r\n      return;\r\n    }\r\n  \r\n    setUploading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"ano\", selectedAno);\r\n      formData.append(\"turma\", selectedTurma);\r\n      if (Platform.OS === \"web\") {\r\n        // no web, você já tem o blob montado\r\n        const responseBlob = await fetch(pdfFile.uri);\r\n        const blob = await responseBlob.blob();\r\n        formData.append(\"pdf\", blob, pdfFile.name);\r\n      } else {\r\n        // no nativo, anexe diretamente a URI\r\n        formData.append(\"pdf\", {\r\n          uri: pdfFile.uri,\r\n          name: pdfFile.name,\r\n          type: pdfFile.mimeType || \"application/pdf\",\r\n        } as any);\r\n      }\r\n  \r\n      console.log(\"[DEBUG] Enviando FormData:\", formData);\r\n      const resp = await fetch(url_uploadCalendar, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const resData = await resp.json();\r\n      console.log(\"[DEBUG] Resposta do servidor:\", resData);\r\n      if (resData.success) {\r\n        Alert.alert(\"Sucesso\", resData.message);\r\n        navigation.navigate(\"Administrador\", { email });\r\n      } else {\r\n        Alert.alert(\"Erro\", resData.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"[DEBUG] Erro no upload:\", err);\r\n      Alert.alert(\"Erro\", \"Erro ao fazer upload.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };    \r\n\r\n  // Recebe um parâmetro \"scale\" para ajustar o zoom do PDF\r\n  const getPdfHtml = (base64: string, scale: number = 1.0) => {\r\n    return `\r\n      <!DOCTYPE html> \r\n      <html>\r\n        <head>\r\n          <meta charset=\"utf-8\">\r\n          <title>PDF Preview</title>\r\n          <style>\r\n            html, body { \r\n              margin: 0; \r\n              height: 100vh; \r\n              overflow: hidden; \r\n              display: flex; \r\n              justify-content: center; \r\n              align-items: center; \r\n              background-color: #eee;\r\n            }\r\n            #canvas_container { \r\n              width: 100vw; \r\n              height: 100vh; \r\n              display: flex; \r\n              justify-content: center; \r\n              align-items: center; \r\n              overflow: hidden; \r\n            }\r\n            canvas { \r\n              display: block; \r\n              max-width: 90vw;  \r\n              max-height: 90vh;\r\n              object-fit: contain;\r\n            }\r\n          </style>\r\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js\"></script>\r\n        </head>\r\n        <body>\r\n          <div id=\"canvas_container\"></div>\r\n          <script>\r\n            pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\r\n            var pdfData = \"${base64}\";\r\n            var loadingTask = pdfjsLib.getDocument({ data: atob(pdfData) });\r\n\r\n            loadingTask.promise.then(function(pdf) {\r\n              pdf.getPage(1).then(function(page) {\r\n                var scale = ${scale};\r\n                var viewport = page.getViewport({ scale: scale });\r\n\r\n                var canvas = document.createElement(\"canvas\");\r\n                var context = canvas.getContext(\"2d\");\r\n\r\n                canvas.height = viewport.height;\r\n                canvas.width = viewport.width;\r\n\r\n                // Adiciona o canvas ao container\r\n                document.getElementById('canvas_container').appendChild(canvas);\r\n\r\n                var renderContext = {\r\n                  canvasContext: context,\r\n                  viewport: viewport\r\n                };\r\n\r\n                page.render(renderContext);\r\n              });\r\n            });\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `;\r\n};\r\n\r\n  // Renderiza o preview do PDF\r\n  const renderPdfPreview = () => {\r\n    if (!pdfBase64) return null;\r\n    // Na web usamos scale menor para que caiba quase tudo na tela\r\n    const scale = Platform.OS === \"web\" ? 1.0 : 1.5;\r\n    const htmlContent = getPdfHtml(pdfBase64, scale);\r\n    if (Platform.OS === \"web\") {\r\n      return (\r\n        <iframe\r\n          srcDoc={htmlContent}\r\n          style={styles.pdfContainer}\r\n          title=\"PDF Preview\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.pdfContainer}>\r\n          <WebView\r\n            originWhitelist={[\"*\"]}\r\n            source={{ html: htmlContent }}\r\n            style={styles.pdfPreview}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <KeyboardAvoidingView\r\n      style={{ flex: 1 }}\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n    >\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../assets/images/bg1.jpg\")\r\n        }\r\n        style={styles.background}\r\n      >\r\n        {userTheme === \"dark\" && <View style={styles.overlayDark} />}\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator\r\n            size=\"large\"\r\n            color={userTheme === \"dark\" ? \"#e0dede\" : \"#000\"}\r\n          />\r\n          <Text\r\n            style={[\r\n              styles.loadingText,\r\n              { color: userTheme === \"dark\" ? \"#e0dede\" : \"#000\" },\r\n            ]}\r\n          >\r\n            Carregando registros...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    </KeyboardAvoidingView>\r\n    );\r\n  }\r\n\r\n  const dynamicBoxBackground = userTheme === \"dark\" ? \"#101218\" : \"#FFFFFF\";\r\n  const inputBackground = userTheme === \"dark\" ? \"#3F4454\" : \"#FFFFFF\";\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#FFFFFF\" : \"#000000\";\r\n\r\n  // Cálculo dos valores numéricos com base na altura da tela\r\n  let fixedBoxHeight: number;\r\n  let fixedBoxMargin: number;\r\n  if (pdfFile) {\r\n    fixedBoxHeight = Platform.OS === \"web\" ? windowHeight * 0.85 : windowHeight * 0.9;\r\n    fixedBoxMargin = windowHeight * 0.1;\r\n  } else if (selectedAno && selectedTurma) {\r\n    fixedBoxHeight = Platform.OS === \"web\" ? windowHeight * 0.7 : windowHeight * 0.75;\r\n    fixedBoxMargin = windowHeight * 0.1;\r\n  } else {\r\n    fixedBoxHeight = Platform.OS === \"web\" ? windowHeight * 0.6 : windowHeight * 0.65;\r\n    fixedBoxMargin = windowHeight * 0.15;\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={{ flex: 1 }}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n    <ImageBackground\r\n      source={\r\n        backgroundUrl\r\n          ? { uri: backgroundUrl }\r\n          : require(\"../../assets/images/bg1.jpg\")\r\n      }\r\n      style={{ flex: 1, width: \"100%\", height: \"100%\" }}\r\n      resizeMode=\"cover\"\r\n    >\r\n      {/* HEADER */}\r\n      <SafeAreaView\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          paddingTop: headerPadding,\r\n          paddingHorizontal: 16,\r\n          paddingBottom: 12,\r\n          backgroundColor: dynamicBoxBackground,\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          zIndex: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOpacity: 0.1,\r\n          shadowRadius: 6,\r\n          elevation: 4,\r\n        }}\r\n      >\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ padding: 8 }}>\r\n          <Image\r\n            source={require(\"../../assets/icons/angle-left.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 36 : 24,\r\n              height: Platform.OS === \"web\" ? 36 : 24,\r\n              tintColor: dynamicTextColor,\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setModalContaVisivel(true)} style={{ padding: 8 }}>\r\n          <Image\r\n            source={require(\"../../assets/icons/user.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 32 : 26,\r\n              height: Platform.OS === \"web\" ? 32 : 26,\r\n              tintColor: dynamicTextColor,\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n      </SafeAreaView>\r\n      <ScrollView\r\n        style={{ flex: 1 }}                                  // ocupa tudo que resta\r\n        contentContainerStyle={{\r\n          flexGrow: 1,                                       // content fully scrollable\r\n          flexDirection: isWebWithPdf ? 'row' : 'column',\r\n          justifyContent: 'space-between',\r\n          alignItems: isWebWithPdf ? 'flex-start' : 'stretch',\r\n          paddingTop: headerPadding + 60,                    // espaço só para sair do header\r\n          paddingBottom: 16,  \r\n          paddingHorizontal: 16,\r\n        }}\r\n      >\r\n        {/* COLUNA 1: Ano / Turma / Botão Selecionar PDF */}\r\n        <View\r\n          style={{\r\n            flex: isWebWithPdf ? 0.48 : undefined,\r\n            width: isWebWithPdf ? undefined : '100%',\r\n            marginBottom: pdfFile ? 24 : 0,\r\n          }}\r\n        >\r\n          <Card style={{ borderRadius: 8, overflow: 'hidden', marginBottom: 16 }}>\r\n            <Card.Content style={{ paddingVertical: 12, paddingHorizontal: 8, backgroundColor: userTheme === 'dark' ? '#FFFFFF' : '#dedad5' }}>\r\n              <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n                <TextInput\r\n                  label=\"Ano\"\r\n                  value={selectedAno}\r\n                  mode=\"outlined\"\r\n                  editable={false}\r\n                  style={{ backgroundColor: inputBackground, color: dynamicTextColor, marginBottom: 12 }}\r\n                  theme={{\r\n                    colors: {\r\n                      text: dynamicTextColor,\r\n                      placeholder: dynamicTextColor,\r\n                      primary: '#47AD4D',\r\n                      background: inputBackground,\r\n                    },\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n                <TextInput\r\n                  label=\"Turma\"\r\n                  value={selectedTurma}\r\n                  mode=\"outlined\"\r\n                  editable={false}\r\n                  style={{ backgroundColor: inputBackground, color: dynamicTextColor }}\r\n                  theme={{\r\n                    colors: {\r\n                      text: dynamicTextColor,\r\n                      placeholder: dynamicTextColor,\r\n                      primary: '#47AD4D',\r\n                      background: inputBackground,\r\n                    },\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n          {selectedAno && selectedTurma && !pdfFile && (\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={openDocumentPicker}\r\n              contentStyle={{ paddingVertical: 8 }}\r\n              style={{ borderRadius: 6, backgroundColor: '#47AD4D' }}\r\n            >\r\n              Selecionar PDF\r\n            </Button>\r\n          )}\r\n        </View>\r\n\r\n        {/* COLUNA 2: Pré‑visualização do PDF */}\r\n        {pdfFile && (\r\n           <View\r\n              style={{\r\n                flex: isWebWithPdf ? 0.48 : undefined,\r\n                width: isWebWithPdf ? undefined : '100%',\r\n                backgroundColor: dynamicBoxBackground,\r\n                borderRadius: 8,\r\n                padding: 16,\r\n                marginLeft: isWebWithPdf ? 16 : 0,\r\n                alignSelf: isWebWithPdf ? 'flex-start' : undefined,\r\n                shadowColor: '#000',\r\n                shadowOpacity: 0.1,\r\n                shadowRadius: 6,\r\n                elevation: 4,\r\n              }}\r\n            >\r\n            <Text style={{ fontSize: 16, fontWeight: '500', color: dynamicTextColor, marginBottom: 12 }}>\r\n              Pré-visualização do PDF\r\n            </Text>\r\n            {renderPdfPreview()}\r\n            <Text style={{ marginTop: 8, color: dynamicTextColor }}>{previewPdf}</Text>\r\n            <View style={{ flexDirection: 'row', marginTop: 16, width: '100%' }}>\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={uploadPdf}\r\n                contentStyle={{ paddingVertical: 6 }}\r\n                style={{ flex: 1, marginRight: 8, borderRadius: 6, backgroundColor: '#47AD4D' }}\r\n              >\r\n                Salvar\r\n              </Button>\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  setPdfBase64(null);\r\n                  setPdfFile(null);\r\n                  setPreviewPdf(null);\r\n                }}\r\n                contentStyle={{ paddingVertical: 6 }}\r\n                style={{ flex: 1, borderRadius: 6 }}\r\n                textColor=\"#47AD4D\"\r\n              >\r\n                Mudar\r\n              </Button>\r\n            </View>\r\n            {uploading && (\r\n              <ActivityIndicator size=\"large\" style={{ marginTop: 16 }} color={userTheme === 'dark' ? '#FFF' : '#000'} />\r\n            )}\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n\r\n      {/* MODAIS */}\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <TouchableOpacity\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n            justifyContent: \"center\",\r\n            padding: 16,\r\n          }}\r\n          onPress={() => setModalVisible(false)}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: dynamicBoxBackground,\r\n              borderRadius: 10,\r\n              padding: 16,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 18, marginBottom: 12, color: dynamicTextColor }}>\r\n              Selecione o Ano e a Turma\r\n            </Text>\r\n            {turmas.map((item, idx) => (\r\n              <TouchableOpacity\r\n                key={idx}\r\n                onPress={() => {\r\n                  setSelectedAno(item.ano);\r\n                  setSelectedTurma(item.turma);\r\n                  setModalVisible(false);\r\n                }}\r\n                style={{ paddingVertical: 10 }}\r\n              >\r\n                <Text style={{ fontSize: 16, color: dynamicTextColor }}>\r\n                  {item.ano} – {item.turma}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </TouchableOpacity>\r\n      </Modal>\r\n\r\n      <ModalConfig\r\n        visible={modalContaVisivel}\r\n        dynamicHeaderBackground={userTheme === \"dark\" ? \"#101218\" : \"#FFF\"}\r\n        dynamicTextColor={dynamicTextColor}\r\n        onClose={() => setModalContaVisivel(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollContent: { padding: 16, paddingBottom: 16 * 2 },\r\n  card: {\r\n    borderRadius: 12,\r\n    elevation: 4,\r\n    overflow: \"hidden\",\r\n  },\r\n  background: {\r\n    flex: 1,\r\n  },\r\n  overlayDark: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    zIndex: 1,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  loadingText: {\r\n    fontSize: 18,\r\n    marginTop: 10,\r\n  },\r\n  fixedBox: {\r\n    alignSelf: \"center\",\r\n    width: \"90%\",\r\n    borderRadius: 12,\r\n    overflow: \"hidden\",\r\n    elevation: 5,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    marginTop: StatusBar.currentHeight || 20,\r\n    marginBottom: 20,\r\n  },\r\n  contentContainer: {\r\n    flexGrow: 1,\r\n    paddingTop: 60,\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  inputsWrapper: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  botao: {\r\n    marginTop: 20,\r\n  },\r\n  carregamento: {\r\n    marginTop: 10,\r\n  },\r\n  previewContainer: {\r\n    marginVertical: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  previewTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    marginBottom: 10,\r\n  },\r\n  pdfContainer: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    backgroundColor: \"#ddd\",\r\n    borderWidth: 0,\r\n  },\r\n  pdfPreview: {\r\n    flex: 1,\r\n  },\r\n  botoesPreview: {\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n  },\r\n  botaoSalvar: {\r\n    marginRight: 10,\r\n  },\r\n  botaoMudar: {},\r\n  modalFundo: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.3)\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  modalContent: {\r\n    borderRadius: 8,\r\n    padding: 20,\r\n    maxHeight: \"80%\",\r\n  },\r\n  modalTitulo: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 15,\r\n  },\r\n  modalItem: {\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ccc\",\r\n  },\r\n});\r\n\r\nexport default PutCalendar;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  Image,\r\n  ScrollView,\r\n  Alert,\r\n  ActivityIndicator,\r\n  StatusBar,\r\n  Dimensions,\r\n  Platform,\r\n  TouchableOpacity,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { Button, TextInput, useTheme } from 'react-native-paper';\r\nimport { Calendar as BigCalendar } from 'react-native-big-calendar';\r\nimport ModalConfig from \"../../components/modalConfig\";\r\nimport config from \"../../config/config_db\";\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\ninterface StatsData {\r\n  totalPessoas: number;\r\n  turmas: Array<{ nome: string; quantidade: number; horario: string }>;\r\n}\r\n\r\ninterface MenuArmazenado {\r\n  date: string;\r\n  pratoPrincipal: string;\r\n  sopa: string;\r\n  sobremesa: string;\r\n}\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n// Função auxiliar para converter um objeto Date em string ISO (YYYY-MM-DD)\r\nconst getISODate = (date: Date): string | null => {\r\n  return date instanceof Date && !isNaN(date.getTime())\r\n    ? date.toISOString().split('T')[0]\r\n    : null;\r\n};\r\n\r\nconst AuxiliarScreen = ({ navigation }: any) => {\r\n  const theme = useTheme();\r\n  const urlSalvar = `${config.baseUrl}/auxiliarFiles/salvar_menu.php`;\r\n  const urlListar = `${config.baseUrl}/auxiliarFiles/listar_menus.php`;\r\n\r\n  // Estados\r\n  const [selectedDates, setSelectedDates] = useState<Date[]>([]);\r\n  const [errorDates, setErrorDates] = useState<Date[]>([]); // Datas com erro (fins de semana)\r\n  const [pratoPrincipal, setPratoPrincipal] = useState('');\r\n  const [sopa, setSopa] = useState('');\r\n  const [sobremesa, setSobremesa] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState<StatsData | null>(null);\r\n  const [menusArmazenados, setMenusArmazenados] = useState<MenuArmazenado[]>([]);\r\n  const [modalContaVisivel, setModalContaVisivel] = useState(false);\r\n  const [dadosFormulario] = useState({ email: 'exemplo@dominio.com' });\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  // Carregar configurações iniciais\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar configurações:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadSettings();\r\n  }, []);\r\n\r\n  // Datas bloqueadas (ex.: feriados e férias)\r\n  const feriados = ['2025-04-25', '2025-05-01'];\r\n  const periodoFerias = { inicio: '2025-08-01', fim: '2025-08-31' };\r\n\r\n  // Compara duas datas (apenas ano, mês e dia)\r\n  const areDatesEqual = (date1: Date, date2: Date) => {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  };\r\n\r\n  // Alterna a seleção de uma data (caso seja válida)\r\n  const toggleDateSelection = (date: Date) => {\r\n    if (isNaN(date.getTime())) {\r\n      console.error(\"Tentativa de alternar data inválida:\", date);\r\n      return;\r\n    }\r\n    setSelectedDates(prevDates => {\r\n      const alreadySelected = prevDates.some(d => areDatesEqual(d, date));\r\n      return alreadySelected\r\n        ? prevDates.filter(d => !areDatesEqual(d, date))\r\n        : [...prevDates, date];\r\n    });\r\n  };\r\n\r\n  // Lidar com o clique numa célula do calendário\r\n  const handleDayPress = (date: Date) => {\r\n    if (isNaN(date.getTime())) {\r\n      console.error(\"Data inválida no onPressCell:\", date);\r\n      return;\r\n    }\r\n    const dayOfWeek = date.getDay();\r\n    const dateString = getISODate(date);\r\n    console.log(\"Pressed date:\", dateString);\r\n\r\n    // Validações para fins de semana, feriados e período de férias\r\n    if (dayOfWeek === 0 || dayOfWeek === 6) {\r\n      Alert.alert(\"Aviso\", \"Não é possível selecionar fins de semana.\");\r\n      setErrorDates(prev => [...prev, date]);\r\n      setTimeout(() => {\r\n        setErrorDates(prev => prev.filter(d => !areDatesEqual(d, date)));\r\n      }, 3000);\r\n      return;\r\n    }\r\n    if (dateString && feriados.includes(dateString)) {\r\n      Alert.alert(\"Aviso\", \"Não é possível selecionar feriados.\");\r\n      return;\r\n    }\r\n    if (\r\n      dateString &&\r\n      dateString >= periodoFerias.inicio &&\r\n      dateString <= periodoFerias.fim\r\n    ) {\r\n      Alert.alert(\"Aviso\", \"Não é possível selecionar datas nas férias.\");\r\n      return;\r\n    }\r\n    toggleDateSelection(date);\r\n  };\r\n\r\n  // Gerar os eventos do calendário conforme o estado:\r\n  // - Para os dias que o usuário tocou (selecionados) e que ainda não foram salvos,\r\n  //   adiciona um evento com título \"✓\".\r\n  // - Para os dias já com menu armazenado (vindos da base de dados), adiciona um evento com título \"🍴\".\r\n  const getCalendarEvents = () => {\r\n    const selectedEvents = selectedDates\r\n      .filter(date => !menusArmazenados.some(menu => menu.date === getISODate(date)))\r\n      .map(date => ({\r\n        id: 'selected-' + getISODate(date),\r\n        title: '✓',\r\n        start: date,\r\n        end: date,\r\n      }));\r\n    const menuEvents = menusArmazenados.map(menu => ({\r\n      id: 'menu-' + menu.date,\r\n      title: '🍴',\r\n      start: new Date(menu.date),\r\n      end: new Date(menu.date),\r\n    }));\r\n    return [...selectedEvents, ...menuEvents];\r\n  };\r\n\r\n  // Renderização customizada do evento\r\n  const renderEvent = (event: any) => {\r\n    // Se o título for \"✓\" (selecionado mas não salvo) ou \"🍴\" (menu já salvo)\r\n    const containerStyle = event.title === \"✓\" ? styles.selectedEventContainer : styles.menuEventContainer;\r\n    return (\r\n      <View style={containerStyle}>\r\n        <Text style={[styles.eventText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>\r\n          {event.title}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // Função de pull-to-refresh (exemplo)\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    listarMenus();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  // Salvar menu para os dias selecionados\r\n  const guardarMenu = async () => {\r\n    if (selectedDates.length === 0) {\r\n      Alert.alert('Atenção', 'Nenhum dia selecionado.');\r\n      return;\r\n    }\r\n    if (!pratoPrincipal || !sopa || !sobremesa) {\r\n      Alert.alert('Atenção', 'Preencha todos os campos do menu.');\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      for (const date of selectedDates) {\r\n        const dia = getISODate(date);\r\n        if (!dia) continue;\r\n        const response = await fetch(urlSalvar, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            dia,\r\n            sopa,\r\n            prato_principal: pratoPrincipal,\r\n            sobremesa,\r\n          }),\r\n        });\r\n        const result = await response.json();\r\n        if (!result.success) {\r\n          Alert.alert('Erro', `Falha ao salvar o menu para o dia ${dia}: ${result.message}`);\r\n        }\r\n      }\r\n      await listarMenus();\r\n      // Após salvar, limpa as datas selecionadas\r\n      setSelectedDates([]);\r\n      setPratoPrincipal('');\r\n      setSopa('');\r\n      setSobremesa('');\r\n      Alert.alert('Sucesso', 'Menu(s) guardado(s) para os dias selecionados!');\r\n    } catch (error) {\r\n      console.error('[ERROR] guardarMenu ->', error);\r\n      Alert.alert('Erro', 'Ocorreu um erro ao guardar o menu.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Listar menus armazenados via API\r\n  const listarMenus = async () => {\r\n    try {\r\n      const response = await fetch(urlListar, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      const result = await response.json();\r\n      if (result.success && result.menus) {\r\n        const menusFormatados: MenuArmazenado[] = result.menus.map((menu: any) => ({\r\n          date: menu.dia,\r\n          pratoPrincipal: menu.prato_principal,\r\n          sopa: menu.sopa,\r\n          sobremesa: menu.sobremesa,\r\n        }));\r\n        setMenusArmazenados(menusFormatados);\r\n      } else {\r\n        Alert.alert('Aviso', 'Nenhum menu encontrado.');\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    listarMenus();\r\n  }, []);\r\n\r\n\r\n  // Header com botões de voltar e configuração de conta\r\n  const renderHeader = () => (\r\n <View\r\n          style={{\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            zIndex: 10,\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => setModalContaVisivel(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n            <Image\r\n              source={require(\"../../assets/icons/user.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 30 : 25,\r\n                height: Platform.OS === \"web\" ? 30 : 25,\r\n                marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n  );\r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#e0dede\" : \"#000\";\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.background}\r\n      resizeMode=\"cover\"\r\n    >\r\n      <StatusBar backgroundColor=\"transparent\" translucent barStyle=\"dark-content\" />\r\n      {loading ? (\r\n        <View style={styles.loadingContainer}>\r\n          {userTheme === \"dark\" && <View style={styles.overlayDark} />}\r\n          <View style={styles.loadingContent}>\r\n            <ActivityIndicator size=\"large\" color={dynamicTextColor} />\r\n            <Text style={[styles.loadingText, { color: dynamicTextColor }]}>\r\n              Carregando registros...\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <>\r\n          {renderHeader()}\r\n          <ScrollView\r\n            contentContainerStyle={styles.scrollContainer}\r\n            refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\r\n          >\r\n            <View style={styles.calendarWrapper}>\r\n              <Text style={styles.titulo}>Calendário</Text>\r\n              <BigCalendar\r\n                events={getCalendarEvents()}\r\n                height={height * 0.75}\r\n                mode=\"month\"\r\n                swipeEnabled={true}\r\n                weekStartsOn={1}\r\n                showTime={false}\r\n                onPressCell={handleDayPress}\r\n                onPressEvent={(event) => {\r\n                  if (event.title === '✓') {\r\n                    handleDayPress(event.start);\r\n                  }\r\n                }}\r\n                renderEvent={renderEvent}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.box}>\r\n              <Text style={styles.titulo}>Criar um Menu</Text>\r\n              <TextInput\r\n                label=\"Prato Principal\"\r\n                value={pratoPrincipal}\r\n                onChangeText={setPratoPrincipal}\r\n                mode=\"outlined\"\r\n                outlineColor=\"green\"         \r\n                activeOutlineColor=\"green\"    \r\n                style={styles.input}\r\n              />\r\n              <TextInput\r\n                label=\"Sopa\"\r\n                value={sopa}\r\n                onChangeText={setSopa}\r\n                mode=\"outlined\"\r\n                outlineColor=\"green\"          \r\n                activeOutlineColor=\"green\"\r\n                style={styles.input}\r\n              />\r\n              <TextInput\r\n                label=\"Sobremesa\"\r\n                value={sobremesa}\r\n                onChangeText={setSobremesa}\r\n                mode=\"outlined\"\r\n                outlineColor=\"green\"          \r\n                activeOutlineColor=\"green\"\r\n                style={styles.input}\r\n              />\r\n              <Button mode=\"contained\" onPress={guardarMenu} style={styles.botao}>\r\n                Guardar Menu\r\n              </Button>\r\n            </View>\r\n            <View style={styles.box}>\r\n              <Text style={styles.titulo}>Estatísticas de Almoço</Text>\r\n              <Button\r\n              mode=\"contained\"\r\n              onPress={() => navigation.navigate(\"auxiliarEstatisticas\")}\r\n              style={styles.botao}\r\n            >\r\n              Estatísticas de Almoço\r\n            </Button>\r\n              {stats && (\r\n                <View style={styles.statsContainer}>\r\n                  <Text style={styles.statsTexto}>Total: {stats.totalPessoas} pessoas</Text>\r\n                  {stats.turmas.map((turma, index) => (\r\n                    <Text key={index} style={styles.statsTexto}>\r\n                      {turma.nome}: {turma.quantidade} ({turma.horario})\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              )}\r\n            </View>\r\n\r\n            <View style={styles.box}>\r\n              <Text style={styles.titulo}>Menus Já inseridos</Text>\r\n              {menusArmazenados.length === 0 ? (\r\n                <Text style={styles.statsTexto}>Nenhum menu armazenado ainda.</Text>\r\n              ) : (\r\n                menusArmazenados.map((menu, index) => (\r\n                  <View key={index} style={styles.menuItem}>\r\n                    <Text style={styles.statsTexto}>Dia: {menu.date}</Text>\r\n                    <Text style={styles.statsTexto}>Prato Principal: {menu.pratoPrincipal}</Text>\r\n                    <Text style={styles.statsTexto}>Sopa: {menu.sopa}</Text>\r\n                    <Text style={styles.statsTexto}>Sobremesa: {menu.sobremesa}</Text>\r\n                  </View>\r\n                ))\r\n              )}\r\n            </View>\r\n          </ScrollView>\r\n          <ModalConfig\r\n            visible={modalContaVisivel}\r\n            dynamicHeaderBackground=\"white\"\r\n            dynamicTextColor=\"black\"\r\n            onClose={() => setModalContaVisivel(false)}\r\n            navigation={navigation}\r\n            email={dadosFormulario.email}\r\n          />\r\n        </>\r\n      )}\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n  },\r\n  scrollContainer: {\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 20,\r\n    paddingTop: 80, // Espaço para o header\r\n  },\r\n  headerContainer: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 10,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  headerButton: {\r\n    flex: 1,\r\n  },\r\n  headerIcon: {\r\n    width: Platform.OS === \"web\" ? 35 : 23,\r\n    height: Platform.OS === \"web\" ? 35 : 25,\r\n    tintColor: \"#5F6368\",\r\n  },\r\n  calendarWrapper: {\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    marginVertical: 15,\r\n  },\r\n  box: {\r\n    backgroundColor: '#ffffffaa',\r\n    marginBottom: 20,\r\n    borderRadius: 8,\r\n    padding: 15,\r\n  },\r\n  titulo: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#000',\r\n  },\r\n  input: {\r\n    marginBottom: 10,\r\n    backgroundColor: '#fff',\r\n  },\r\n  botao: {\r\n    backgroundColor: 'green',\r\n    marginTop: 10,\r\n  },\r\n  statsContainer: {\r\n    marginTop: 10,\r\n  },\r\n  statsTexto: {\r\n    fontSize: 14,\r\n    color: '#000',\r\n    marginBottom: 5,\r\n  },\r\n  menuItem: {\r\n    marginBottom: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n    paddingBottom: 5,\r\n  },\r\n  selectedEventContainer: {\r\n    backgroundColor: 'rgba(0,128,0,0.7)',\r\n    borderRadius: 4,\r\n    padding: 2,\r\n    alignSelf: 'center',\r\n    marginRight: 2,\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  menuEventContainer: {\r\n    backgroundColor: 'rgba(0,128,0,0.7)',\r\n    borderRadius: 4,\r\n    padding: 2,\r\n    alignSelf: 'center',\r\n    marginRight: 2,\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  eventText: {\r\n    fontSize: 30,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loadingContent: {\r\n    alignItems: \"center\",\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n  },\r\n  overlayDark: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: 'rgba(0,0,0,0.3)',\r\n  },\r\n});\r\n\r\nexport default AuxiliarScreen;","// src/screens/AlunosDoProfScreen.tsx\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  StatusBar,\r\n  FlatList,\r\n  RefreshControl,\r\n  Image,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from 'react-native';\r\nimport {\r\n  Provider as PaperProvider,\r\n  DefaultTheme,\r\n  Card,\r\n  List,\r\n  ActivityIndicator,\r\n  Text,\r\n  Divider,\r\n  IconButton,\r\n  useTheme,\r\n} from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport config from '../../config/config_db';\r\nimport ModalConfig from '../../components/modalConfig';\r\n\r\n// — tipos de dado —\r\ntype Turma = { id: number; turma: string; ano: number };\r\ntype Aluno = { id: number; email: string; turma: string; ano: number };\r\ntype Grade = {\r\n  id: number;\r\n  disciplina: string;\r\n  modulo: string;\r\n  nota: number;\r\n  data_lancamento: string;\r\n};\r\ntype TurmaWithStudents = Turma & { students: Aluno[] };\r\n\r\n// — tema Paper com primary = #47AD4D —\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: '#47AD4D',\r\n  },\r\n};\r\n\r\n// — assets de ícones (imagens) —\r\nconst iconAssets: Record<string, any> = {\r\n  school: require('../../assets/icons/school.png'),\r\n  account: require('../../assets/icons/account.png'),\r\n  'account-circle': require('../../assets/icons/account-circle.png'),\r\n  refresh: require('../../assets/icons/refresh.png'),\r\n};\r\n\r\n// — retorna um componente <Image> para usar como ícone —\r\nconst getIconComponent =\r\n  (name: string) =>\r\n  (props: { color: string }) => (\r\n    <Image\r\n      source={iconAssets[name]}\r\n      style={{\r\n        width: 24, // Default size for icons\r\n        height: 24,\r\n        tintColor: props.color,\r\n      }}\r\n      resizeMode=\"contain\"\r\n    />\r\n  );\r\n\r\nfunction AlunosDoProfScreen({ route, navigation }: any) {\r\n  const { colors } = useTheme();\r\n  const professorEmail = route.params?.email ?? '';\r\n\r\n  const urls = {\r\n    profInfo: `${config.baseUrl}/calendarioFiles/professor/fetchProfessorInfo.php`,\r\n    turmas: `${config.baseUrl}/calendarioFiles/professor/fetch_turmas.php`,\r\n    students: `${config.baseUrl}/calendarioFiles/professor/fetchStudents.php`,\r\n    grades: `${config.baseUrl}/calendarioFiles/professor/fetchStudentGrades.php`,\r\n  };\r\n\r\n  const [turmas, setTurmas] = useState<TurmaWithStudents[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [expandedTurma, setExpandedTurma] = useState<number | null>(null);\r\n  const [expandedAluno, setExpandedAluno] = useState<number | null>(null);\r\n  const [gradesByAluno, setGradesByAluno] = useState<Record<number, Grade[]>>({});\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  const fetchAll = useCallback(async () => {\r\n    setError(null);\r\n    try {\r\n      // buscar ID do professor\r\n      const profResp = await axios.post(urls.profInfo, { email: professorEmail });\r\n      if (!profResp.data.success)\r\n        throw new Error('Não foi possível obter dados do professor.');\r\n      const professorId = profResp.data.professor.user_id;\r\n\r\n      // buscar turmas\r\n      const turResp = await axios.post(urls.turmas, { email: professorEmail });\r\n      if (!turResp.data.success) throw new Error('Nenhuma turma encontrada.');\r\n\r\n      // para cada turma, buscar alunos\r\n      const tvs: TurmaWithStudents[] = await Promise.all(\r\n        turResp.data.turmas.map(async (t: Turma) => {\r\n          const stuResp = await axios.post(urls.students, {\r\n            professor_id: professorId,\r\n            turma: t.turma,\r\n            ano: t.ano,\r\n          });\r\n          const students: Aluno[] = stuResp.data.success\r\n            ? stuResp.data.students.map((al: any, idx: number) => ({\r\n                id:\r\n                  typeof al.id === 'number'\r\n                    ? al.id\r\n                    : typeof al.user_id === 'number'\r\n                    ? al.user_id\r\n                    : idx,\r\n                email: al.email,\r\n                turma: al.turma,\r\n                ano: al.ano,\r\n              }))\r\n            : [];\r\n          return { ...t, students };\r\n        })\r\n      );\r\n\r\n      setTurmas(tvs);\r\n    } catch (e: any) {\r\n      setError(e.message || 'Erro de conexão.');\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  }, [professorEmail]);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, [fetchAll]);\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    fetchAll();\r\n  };\r\n\r\n  const loadGrades = async (alunoId: number) => {\r\n    if (gradesByAluno[alunoId]) return;\r\n    try {\r\n      const resp = await axios.post(urls.grades, {\r\n        professor_email: professorEmail,\r\n        aluno_id: alunoId,\r\n      });\r\n      setGradesByAluno((prev) => ({\r\n        ...prev,\r\n        [alunoId]: resp.data.success ? resp.data.grades : [],\r\n      }));\r\n    } catch {\r\n      setGradesByAluno((prev) => ({ ...prev, [alunoId]: [] }));\r\n    }\r\n  };\r\n\r\n  // — loading inicial —\r\n  if (loading && !refreshing) {\r\n    return (\r\n      <SafeAreaView style={styles.center}>\r\n        <ActivityIndicator animating size=\"large\" color={colors.primary} />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  // — erro de carregamento —\r\n  if (error) {\r\n    return (\r\n      <SafeAreaView style={styles.center}>\r\n        <Text style={{ color: colors.error, marginBottom: 16 }}>{error}</Text>\r\n        <IconButton\r\n          icon={getIconComponent('refresh')}\r\n          size={36}\r\n          onPress={fetchAll}\r\n        />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  // — render da lista de turmas e alunos —\r\n  return (\r\n    <>\r\n      <StatusBar backgroundColor={theme.colors.primary} barStyle=\"light-content\" />\r\n                      <View\r\n                        style={{\r\n                          width: \"100%\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-between\",\r\n                          paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n                          paddingHorizontal: 10,\r\n                          paddingBottom: 10,\r\n                          position: \"absolute\",\r\n                          top: 0,\r\n                          zIndex: 10,\r\n                          backgroundColor: \"white\",\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: \"#ddd\",\r\n                        }}\r\n                      >\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            navigation.goBack();\r\n                          }}\r\n                          style={{ flex: 1 }}\r\n                        >\r\n                          <Image\r\n                            source={require(\"../../assets/icons/angle-left.png\")}\r\n                            style={{\r\n                              width: Platform.OS === \"web\" ? 35 : 23,\r\n                              height: Platform.OS === \"web\" ? 35 : 25,\r\n                              marginLeft: 3,\r\n                              marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                              tintColor: \"#000\",\r\n                            }}\r\n                          />\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                          <Image\r\n                            source={require(\"../../assets/icons/user.png\")}\r\n                            style={{\r\n                              width: Platform.OS === \"web\" ? 30 : 25,\r\n                              height: Platform.OS === \"web\" ? 30 : 25,\r\n                              marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                              tintColor: \"#000\",\r\n                            }}\r\n                          />\r\n                        </TouchableOpacity>\r\n                      </View>\r\n      <SafeAreaView style={styles.container}>\r\n        <FlatList\r\n          data={turmas}\r\n          keyExtractor={(t) => t.id.toString()}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n              tintColor={theme.colors.primary}\r\n            />\r\n          }\r\n          renderItem={({ item: turma }) => (\r\n            <Card style={styles.card} elevation={2}>\r\n              <List.Accordion\r\n                title={`Turma ${turma.ano}º ${turma.turma}`}\r\n                description={`${turma.students.length} aluno(s)`}\r\n                expanded={expandedTurma === turma.id}\r\n                onPress={() =>\r\n                  setExpandedTurma(expandedTurma === turma.id ? null : turma.id)\r\n                }\r\n                right={() => null}\r\n              >\r\n                <Divider />\r\n                {turma.students.map((aluno) => (\r\n                  <List.Accordion\r\n                    key={aluno.id}\r\n                    title={aluno.email}\r\n                    expanded={expandedAluno === aluno.id}\r\n                    onPress={async () => {\r\n                      const willExpand = expandedAluno !== aluno.id;\r\n                      setExpandedAluno(willExpand ? aluno.id : null);\r\n                      if (willExpand) await loadGrades(aluno.id);\r\n                    }}\r\n                    left={getIconComponent('school')}\r\n                    right={() => null}\r\n                  >\r\n                    {gradesByAluno[aluno.id] === undefined ? (\r\n                      <ActivityIndicator style={styles.innerLoader} />\r\n                    ) : gradesByAluno[aluno.id].length > 0 ? (\r\n                      gradesByAluno[aluno.id].map((g) => (\r\n                        <View key={g.id} style={styles.gradeRow}>\r\n                          <Text style={styles.gradeDisc}>\r\n                            {g.disciplina} ({g.modulo})\r\n                          </Text>\r\n                          <Text style={styles.gradeNota}>Nota: {g.nota}</Text>\r\n                          <Text style={styles.gradeDate}>\r\n                            {new Date(g.data_lancamento).toLocaleDateString()}\r\n                          </Text>\r\n                          <Divider style={{ marginVertical: 6 }} />\r\n                        </View>\r\n                      ))\r\n                    ) : (\r\n                      <Text style={styles.noGrades}>Sem notas registradas</Text>\r\n                    )}\r\n                  </List.Accordion>\r\n                ))}\r\n              </List.Accordion>\r\n            </Card>\r\n          )}\r\n          ItemSeparatorComponent={() => <View style={{ height: 12 }} />}\r\n          contentContainerStyle={{ padding: 16 }}\r\n        />\r\n      </SafeAreaView>\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={professorEmail}\r\n      />\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default function WrappedScreen(props: any) {\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <AlunosDoProfScreen {...props} />\r\n    </PaperProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#fdfdfd', marginTop: 70 },\r\n  center: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 16 },\r\n  card: { borderRadius: 8 },\r\n  innerLoader: { margin: 12 },\r\n  gradeRow: { paddingHorizontal: 16 },\r\n  gradeDisc: { fontSize: 14, fontWeight: '600' },\r\n  gradeNota: { fontSize: 14, marginTop: 2 },\r\n  gradeDate: { fontSize: 12, color: '#666', marginTop: 2 },\r\n  noGrades: { padding: 16, fontStyle: 'italic', color: '#888' },\r\n});","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Platform,\r\n  TouchableOpacity,\r\n  RefreshControl,\r\n  Modal,\r\n  ImageBackground,\r\n  TouchableWithoutFeedback,\r\n  Dimensions,\r\n  Image,\r\n  ActivityIndicator,\r\n  StatusBar\r\n} from 'react-native';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { IconButton, Button as PaperButton } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-big-calendar';\r\nimport config from \"../../config/config_db\";\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport ModalConfig from '../../components/modalConfig';\r\n\r\ninterface RouteParams {\r\n  email: string;\r\n}\r\n\r\ninterface LunchEvent {\r\n  id?: string;\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  fromDB?: boolean;\r\n  isManual?: boolean;\r\n  hasMenu?: boolean;\r\n}\r\n\r\ninterface MenuEvent {\r\n  dia: string;\r\n  sopa: string;\r\n  prato_principal: string;\r\n  sobremesa: string;\r\n}\r\n\r\nconst normalizeDate = (date: Date): Date => {\r\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n};\r\n\r\nconst getDateString = (date: Date): string => {\r\n  const y = date.getFullYear();\r\n  const m = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const d = ('0' + date.getDate()).slice(-2);\r\n  return `${y}-${m}-${d}`;\r\n};\r\n\r\nconst AlmocoProfScreen: React.FC = () => {\r\n  const navigation = useNavigation<any>();\r\n  const route = useRoute();\r\n  const { email } = route.params as RouteParams;\r\n\r\n  const [selectedLunchDates, setSelectedLunchDates] = useState<Date[]>([]);\r\n  const [dbLunchDates, setDbLunchDates] = useState<LunchEvent[]>([]);\r\n  const [removedLunchDates, setRemovedLunchDates] = useState<Date[]>([]);\r\n  const [almocosMenu, setAlmocosMenu] = useState<MenuEvent[]>([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [menuModalVisible, setMenuModalVisible] = useState(false);\r\n  const [selectedMenu, setSelectedMenu] = useState<MenuEvent | null>(null);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(\"light\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  const urlFound = `${config.baseUrl}/calendarioFiles/almocos/found_lunch.php`;\r\n  const urlMenu = `${config.baseUrl}/calendarioFiles/almocos/found_menu.php`;\r\n  const urlUpdate = `${config.baseUrl}/calendarioFiles/almocos/update_lunch.php`;\r\n\r\n  // Carregar configurações do SecureStore\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        // Se for web, usamos localStorage; se não, usamos SecureStore\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        // Se o background existir e não começar com \"http\", concatenamos com o baseUrl\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch {\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);  \r\n\r\n  const fetchLunchReservations = useCallback(() => {\r\n    fetch(urlFound, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          const dbEvents: LunchEvent[] = json.data.map((row: any) => {\r\n            const rawDate = new Date(row.dia + \"T00:00:00\");\r\n            const eventDate = normalizeDate(rawDate);\r\n            return {\r\n              id: getDateString(eventDate),\r\n              title: row.turma || \"\",\r\n              start: eventDate,\r\n              end: eventDate,\r\n              fromDB: true\r\n            };\r\n          });\r\n          setDbLunchDates(dbEvents);\r\n        } else {\r\n          Alert.alert(\"Erro\", json.message);\r\n        }\r\n      })\r\n      .catch;\r\n  }, [email]);\r\n\r\n  // Busca menus cadastrados\r\n  const fetchMenus = useCallback(() => {\r\n    fetch(urlMenu)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          const menus: MenuEvent[] = json.data.map((row: any) => ({\r\n            dia: row.dia,\r\n            sopa: row.sopa,\r\n            prato_principal: row.prato_principal,\r\n            sobremesa: row.sobremesa,\r\n          }));\r\n          setAlmocosMenu(menus);\r\n        }\r\n      })\r\n      .catch;\r\n  }, []);\r\n\r\n  if (loading) { \r\n    const dynamicTextColor = userTheme === \"dark\" ? \"white\" : \"black\";\r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../assets/images/bg1.jpg\")\r\n        }\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userTheme === \"dark\" && (\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              zIndex: 1,\r\n            }}\r\n          />\r\n        )}\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <ActivityIndicator size=\"large\" color={dynamicTextColor} />\r\n          <Text style={{ fontSize: 18, marginTop: 10, color: dynamicTextColor }}>\r\n            Carregando registros...\r\n          </Text>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n  \r\n  // Pull-to-refresh\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    setSelectedLunchDates([]);\r\n    setRemovedLunchDates([]);\r\n    setSelectedMenu(null);\r\n    setMenuModalVisible(false);\r\n\r\n    Promise.all([fetchLunchReservations(), fetchMenus()])\r\n      .then(() => setRefreshing(false))\r\n      .catch(err => {\r\n        setRefreshing(false);\r\n      });\r\n  }, [fetchLunchReservations, fetchMenus]);\r\n\r\n  useEffect(() => {\r\n    fetchLunchReservations();\r\n  }, [fetchLunchReservations]);\r\n\r\n  useEffect(() => {\r\n    fetchMenus();\r\n  }, [fetchMenus]);\r\n\r\n  const confirmBack = () => {\r\n    if (Platform.OS === \"web\") {\r\n      const confirmed = window.confirm(\"Tem a certeza que deseja sair?\");\r\n      if (confirmed) navigation.navigate(\"Professor\", { email });\r\n    } else {\r\n      Alert.alert(\r\n        \"Confirmação\",\r\n        \"Tem a certeza que deseja sair?\",\r\n        [\r\n          { text: \"Cancelar\", style: \"cancel\" },\r\n          { text: \"Sim\", onPress: () => navigation.navigate(\"Professor\", { email }) }\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const findMenuForDate = (date: Date): MenuEvent | undefined => {\r\n    const dateStr = getDateString(date);\r\n    return almocosMenu.find(menu => menu.dia === dateStr);\r\n  };\r\n\r\n  const onPressDate = (date: Date) => {\r\n    const normalizedDate = normalizeDate(date);\r\n    const dateStr = getDateString(normalizedDate);\r\n    const today = normalizeDate(new Date());\r\n    const maxDate = normalizeDate(new Date(new Date().setMonth(new Date().getMonth() + 1)));\r\n\r\n    if (normalizedDate < today || normalizedDate > maxDate) {\r\n      Platform.OS === \"web\"\r\n        ? window.alert(\"Data inválida: Só é possível selecionar entre hoje e um mês depois.\")\r\n        : Alert.alert(\"Data inválida\", \"Só é possível selecionar entre hoje e um mês depois.\");\r\n      return;\r\n    }\r\n    \r\n    if (normalizedDate.getDay() === 0 || normalizedDate.getDay() === 6) {\r\n      Platform.OS === \"web\"\r\n        ? window.alert(\"Data inválida: Não é possível selecionar fins de semana.\")\r\n        : Alert.alert(\"Data inválida\", \"Não é possível selecionar fins de semana.\");\r\n      return;\r\n    }    \r\n\r\n    const menu = findMenuForDate(normalizedDate);\r\n    if (menu) {\r\n      setSelectedMenu(menu);\r\n      setMenuModalVisible(true);\r\n      return;\r\n    }\r\n\r\n    const dateStrExistsInDB = dbLunchDates.some(event => getDateString(event.start) === dateStr) &&\r\n                              !removedLunchDates.some(d => getDateString(d) === dateStr);\r\n    const dateStrExistsInManual = selectedLunchDates.some(d => getDateString(d) === dateStr);\r\n    const isInRemoved = removedLunchDates.some(d => getDateString(d) === dateStr);\r\n\r\n    if (dateStrExistsInDB || dateStrExistsInManual) {\r\n      if (dateStrExistsInDB)\r\n        setRemovedLunchDates(prev => [...prev, normalizedDate]);\r\n      if (dateStrExistsInManual)\r\n        setSelectedLunchDates(prev => prev.filter(d => getDateString(d) !== dateStr));\r\n    } else if (isInRemoved) {\r\n      setRemovedLunchDates(prev => prev.filter(d => getDateString(d) !== dateStr));\r\n    } else {\r\n      setSelectedLunchDates(prev => [...prev, normalizedDate]);\r\n    }\r\n  };\r\n\r\n  const handleMenuModalAction = () => {\r\n    if (!selectedMenu) return;\r\n    const date = new Date(selectedMenu.dia + \"T00:00:00\");\r\n    const dateStr = getDateString(date);\r\n    const isReservedInDB = dbLunchDates.some(event => getDateString(event.start) === dateStr) &&\r\n                           !removedLunchDates.some(d => getDateString(d) === dateStr);\r\n    const isReservedManual = selectedLunchDates.some(d => getDateString(d) === dateStr);\r\n    const isRemoved = removedLunchDates.some(d => getDateString(d) === dateStr);\r\n    \r\n    if (isReservedInDB || isReservedManual) {\r\n      if (isReservedInDB)\r\n        setRemovedLunchDates(prev => [...prev, date]);\r\n      if (isReservedManual)\r\n        setSelectedLunchDates(prev => prev.filter(d => getDateString(d) !== dateStr));\r\n    } else if (isRemoved) {\r\n      setRemovedLunchDates(prev => prev.filter(d => getDateString(d) !== dateStr));\r\n    } else {\r\n      setSelectedLunchDates(prev => [...prev, date]);\r\n    }\r\n    setMenuModalVisible(false);\r\n    setSelectedMenu(null);\r\n  };\r\n\r\n  const dbSelectedEvents: LunchEvent[] = dbLunchDates.filter(event =>\r\n    !removedLunchDates.some(d => getDateString(d) === getDateString(event.start))\r\n  );\r\n  const manualEvents: LunchEvent[] = selectedLunchDates.map(date => ({\r\n    id: getDateString(date),\r\n    title: \"\",\r\n    start: date,\r\n    end: date,\r\n    isManual: true,\r\n  }));\r\n  const selectedDatesSet = new Set([\r\n    ...dbSelectedEvents.map(e => getDateString(e.start)),\r\n    ...manualEvents.map(e => getDateString(e.start))\r\n  ]);\r\n  const menuEvents: LunchEvent[] = almocosMenu\r\n    .filter(menu => !selectedDatesSet.has(menu.dia))\r\n    .map(menu => ({\r\n      id: menu.dia,\r\n      title: \"\",\r\n      start: new Date(menu.dia + \"T00:00:00\"),\r\n      end: new Date(menu.dia + \"T00:00:00\"),\r\n      hasMenu: true,\r\n    }));\r\n  const calendarEvents: LunchEvent[] = [...dbSelectedEvents, ...manualEvents, ...menuEvents];\r\n  const calendarHeight = Platform.OS === 'web'\r\n    ? Dimensions.get('window').width * 0.6\r\n    : 450;\r\n\r\n  // Renderiza cada evento (ícone) no calendário\r\n  const renderEvent = (event: LunchEvent) => {\r\n    const dateStr = getDateString(event.start);\r\n    const isSelected = (event.isManual || event.fromDB) &&\r\n                        !removedLunchDates.some(d => getDateString(d) === dateStr);\r\n    const hasMenu = event.hasMenu || !!findMenuForDate(event.start);\r\n    const eventContainerStyle = Platform.OS === 'web' ? styles.webEventContainer : {};\r\n\r\n    return (\r\n      <TouchableOpacity onPress={() => onPressDate(event.start)}>\r\n        {isSelected ? (\r\n          <View style={[styles.selectedEventContainer, eventContainerStyle]}>\r\n            <Text style={[styles.eventText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>✓</Text>\r\n          </View>\r\n        ) : hasMenu ? (\r\n          <View style={[styles.menuEventContainer, eventContainerStyle]}>\r\n            <Text style={[styles.eventText, { color: userTheme === \"dark\" ? \"#FFF\" : \"#000\" }]}>🍴</Text>\r\n          </View>\r\n        ) : null}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const allSelectedDates = Array.from(new Set([\r\n    ...dbSelectedEvents.map(e => getDateString(e.start)),\r\n    ...selectedLunchDates.map(d => getDateString(d))\r\n  ])).sort();\r\n\r\n  // Cores dinâmicas\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#FFF\" : \"#000\";\r\n\r\n  // Estilo dinâmico para os itens de datas selecionadas\r\n  const selectedDateItemStyle = {\r\n    backgroundColor: userTheme === \"dark\" ? \"#222\" : \"#e0e0e0\",\r\n    borderColor: userTheme === \"dark\" ? \"#444\" : \"transparent\",\r\n    borderWidth: userTheme === \"dark\" ? 1 : 0,\r\n    borderRadius: 8,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    margin: 4,\r\n  };\r\n\r\n  // Estilo dinâmico para o container do calendário\r\n  const calendarWrapperStyle = {\r\n    backgroundColor: userTheme === \"dark\" ? \"#000\" : \"#FFF\",\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    marginTop: 15, // margem entre header e calendário\r\n    marginHorizontal: -5, // ocupando mais espaço horizontalmente\r\n    marginBottom: 15,\r\n  };\r\n\r\n  // Ação para salvar alterações\r\n  const handleSave = () => {\r\n    if (Platform.OS === \"web\") {\r\n      const confirmed = window.confirm(\"Tem a certeza que deseja guardar as alterações?\");\r\n      if (!confirmed) return;\r\n      if (selectedLunchDates.length === 0 && removedLunchDates.length === 0) {\r\n        window.alert(\"Atenção: Nenhuma alteração foi realizada.\");\r\n        return;\r\n      }\r\n      const diasParaAdicionar = selectedLunchDates.map(date => getDateString(date));\r\n      const diasParaRemover = removedLunchDates.map(date => getDateString(date));\r\n      const payload = { email, diasParaAdicionar, diasParaRemover };\r\n\r\n      fetch(urlUpdate, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload)\r\n      })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.success) {\r\n            setRemovedLunchDates([]);\r\n            onRefresh();\r\n            window.alert(\"Sucesso: Alterações guardadas com sucesso!\");\r\n          } else {\r\n            window.alert(\"Erro: \" + (json.message || \"Não foi possível guardar as alterações.\"));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          window.alert(\"Não foi possível guardar as alterações. Pedimos que tente novamente mais tarde.\");\r\n        });\r\n    } else {\r\n      Alert.alert(\r\n        \"Confirmação\",\r\n        \"Tem a certeza que deseja guardar as alterações?\",\r\n        [\r\n          { text: \"Cancelar\", style: \"cancel\" },\r\n          {\r\n            text: \"Sim\",\r\n            onPress: () => {\r\n              if (selectedLunchDates.length === 0 && removedLunchDates.length === 0) {\r\n                Alert.alert(\"Atenção\", \"Nenhuma alteração foi realizada.\");\r\n                return;\r\n              }\r\n              const diasParaAdicionar = selectedLunchDates.map(date => getDateString(date));\r\n              const diasParaRemover = removedLunchDates.map(date => getDateString(date));\r\n              const payload = { email, diasParaAdicionar, diasParaRemover };\r\n\r\n              fetch(urlUpdate, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload)\r\n              })\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                  if (json.success) {\r\n                    setRemovedLunchDates([]);\r\n                    onRefresh();\r\n                    Alert.alert(\"Sucesso\", \"Alterações guardadas com sucesso!\");\r\n                  } else {\r\n                    Alert.alert(\"Erro\", json.message || \"Não foi possível guardar as alterações.\");\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  Alert.alert(\"Ocorreu um erro\", \"Não foi possível guardar as alterações. Pedimos que tente novamente mais tarde.\");\r\n                });\r\n            }\r\n          }\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.background}\r\n      resizeMode=\"cover\"\r\n    >\r\n      <View style={styles.fullScreenContainer}>\r\n      <View\r\n          style={{\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            zIndex: 10,\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => confirmBack()} style={{ flex: 1 }}>\r\n            <Image\r\n              source={require(\"../../assets/icons/angle-left.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                marginLeft: 3,\r\n                marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n            <Image\r\n              source={require(\"../../assets/icons/user.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 30 : 25,\r\n                height: Platform.OS === \"web\" ? 30 : 25,\r\n                marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView style={styles.container} refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n          <View style={calendarWrapperStyle}>\r\n            <Calendar\r\n              events={calendarEvents}\r\n              height={calendarHeight}\r\n              mode=\"month\"\r\n              swipeEnabled={true}\r\n              weekStartsOn={1}\r\n              showTime={false}\r\n              onPressCell={date => onPressDate(date)}\r\n              renderEvent={renderEvent}\r\n              calendarContainerStyle={styles.bigCalendarContainer}\r\n            />\r\n          </View>\r\n          {/* Exibição das datas selecionadas */}\r\n          {allSelectedDates.length > 0 && (\r\n            <ScrollView style={styles.selectedDatesScroll}>\r\n              <View style={styles.selectedDatesInnerContainer}>\r\n                {allSelectedDates.map((dateStr, index) => (\r\n                  <View key={index} style={selectedDateItemStyle}>\r\n                    <Text style={[styles.selectedDateText, { color: dynamicTextColor }]}>{dateStr}</Text>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            </ScrollView>\r\n          )}\r\n          <TouchableOpacity style={styles.saveButton} onPress={handleSave}>\r\n            <Text style={styles.saveButtonText}>Guardar</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n\r\n        {/* Modal para detalhes do menu */}\r\n        <Modal\r\n          visible={menuModalVisible}\r\n          transparent={true}\r\n          animationType=\"slide\"\r\n          onRequestClose={() => {\r\n            setMenuModalVisible(false);\r\n            setSelectedMenu(null);\r\n          }}\r\n        >\r\n          <TouchableWithoutFeedback onPress={() => { setMenuModalVisible(false); setSelectedMenu(null); }}>\r\n            <View style={styles.modalOverlay}>\r\n              <TouchableWithoutFeedback>\r\n                <View style={[styles.modalContent, { backgroundColor: userTheme === \"dark\" ? \"#333\" : \"#fff\" }]}>\r\n                  {selectedMenu && (\r\n                    <>\r\n                      <Text style={[styles.modalTitle, { color: dynamicTextColor }]}>Detalhes do Almoço</Text>\r\n                      <View style={styles.detailRow}>\r\n                        {Platform.OS !== 'web' && <IconButton icon=\"bowl\" size={20} iconColor={dynamicTextColor} />}\r\n                        <Text style={[styles.detailText, { color: dynamicTextColor }]}>Sopa: {selectedMenu.sopa}</Text>\r\n                      </View>\r\n                      <View style={styles.detailRow}>\r\n                        {Platform.OS !== 'web' && <IconButton icon=\"food-variant\" size={20} iconColor={dynamicTextColor} />}\r\n                        <Text style={[styles.detailText, { color: dynamicTextColor }]}>Prato Principal: {selectedMenu.prato_principal}</Text>\r\n                      </View>\r\n                      <View style={styles.detailRow}>\r\n                        {Platform.OS !== 'web' && <IconButton icon=\"cupcake\" size={20} iconColor={dynamicTextColor} />}\r\n                        <Text style={[styles.detailText, { color: dynamicTextColor }]}>Sobremesa: {selectedMenu.sobremesa}</Text>\r\n                      </View>\r\n                      <PaperButton\r\n                        mode=\"contained\"\r\n                        onPress={handleMenuModalAction}\r\n                        style={styles.modalActionButton}\r\n                        labelStyle={styles.modalActionButtonLabel}\r\n                      >\r\n                        {(dbLunchDates.some(event => getDateString(event.start) === selectedMenu.dia) &&\r\n                          !removedLunchDates.some(d => getDateString(d) === selectedMenu.dia)) ||\r\n                        selectedLunchDates.some(d => getDateString(d) === selectedMenu.dia)\r\n                          ? \"Desmarcar\"\r\n                          : \"Marcar\"}\r\n                      </PaperButton>\r\n                    </>\r\n                  )}\r\n                </View>\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </Modal>\r\n        <ModalConfig\r\n          visible={accountModalVisible}\r\n          dynamicHeaderBackground=\"white\"\r\n          dynamicTextColor=\"black\"\r\n          onClose={() => setAccountModalVisible(false)}\r\n          navigation={navigation}\r\n          email={email}\r\n        />\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n  },\r\n  overlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: 'rgba(0,0,0,0.5)'\r\n  },\r\n  fullScreenContainer: {\r\n    flex: 1,\r\n    paddingBottom: 15,\r\n    backgroundColor: 'transparent'\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    marginTop: 50\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  backButton: {\r\n    marginRight: 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  bigCalendarContainer: {\r\n    flex: 1,\r\n  },\r\n  selectedDatesScroll: {\r\n    maxHeight: 100,\r\n  },\r\n  selectedDatesInnerContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  selectedDateText: {\r\n    fontSize: 14,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"#47AD4D\",\r\n    borderRadius: 5,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    alignSelf: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  saveButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.4)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modalContent: {\r\n    borderRadius: 8,\r\n    padding: 20,\r\n    width: \"80%\",\r\n    elevation: 5,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 15,\r\n    textAlign: 'center'\r\n  },\r\n  detailRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  detailText: {\r\n    fontSize: 16,\r\n    marginLeft: 8,\r\n  },\r\n  modalActionButton: {\r\n    backgroundColor: \"#47AD4D\",\r\n    marginTop: 20,\r\n    borderRadius: 5,\r\n  },\r\n  modalActionButtonLabel: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n  selectedEventContainer: {\r\n    backgroundColor: \"#47AD4D\",\r\n    borderRadius: 4,\r\n    marginTop: 5,\r\n    marginLeft: 1,\r\n    width: 45,\r\n    height: 45,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  menuEventContainer: {\r\n    backgroundColor: Platform.OS === \"web\" ? \"#abedde\" : \"#8a9b9c\",\r\n    borderRadius: 4,\r\n    marginTop: 5,\r\n    marginLeft: 1,\r\n    width: 45,\r\n    height: 45,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  webEventContainer: {\r\n    width: '90%',\r\n    height: '90%',\r\n    alignSelf: 'center'\r\n  },\r\n  eventText: {\r\n    ...Platform.select({\r\n      ios: { fontSize: 20 },\r\n      android: { fontSize: 20 },\r\n      default: { fontSize: 20 }\r\n    }),\r\n    margin: 0,\r\n  }\r\n});\r\n\r\nexport default AlmocoProfScreen;","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { SafeAreaView, StyleSheet, FlatList, ActivityIndicator, RefreshControl, View, TouchableOpacity, Image, Platform, StatusBar, Dimensions,} from \"react-native\";\r\nimport { Text, Card, Title } from \"react-native-paper\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/config_db\";\r\nimport ModalConfig from \"../../../components/modalConfig\";\r\n\r\nconst HEADER_PADDING_TOP = 20;\r\nconst isWeb = Platform.OS === 'web';\r\nconst numColumns = isWeb ? 2 : 1;\r\nconst itemWidth = isWeb ? '42%' : '100%';\r\nconst ITEM_HEIGHT = Dimensions.get(\"window\").height * 0.25;\r\n\r\nconst DisciplinasDoAlunoScreen = ({ route, navigation }) => {\r\n  const [email] = useState(route?.params?.email || \"\");\r\n  const [alunoData, setAlunoData] = useState(null);\r\n  const [availableDisciplinas, setAvailableDisciplinas] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  const url_fetchAluno = `${config.baseUrl}/alunoFiles/fetchDisciplinasAluno.php`;\r\n\r\n  const fetchAlunoInfo = useCallback(async () => {\r\n    try {\r\n      const response = await axios.post(url_fetchAluno, { email });\r\n      if (response.data.success) {\r\n        setAlunoData(response.data.aluno);\r\n        setAvailableDisciplinas(response.data.disciplinas_professores);\r\n        setError(null);\r\n      } else {\r\n        setError(response.data.message || \"Erro ao buscar dados do aluno\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Erro na conexão com a base de dados (aluno)\");\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  }, [email, url_fetchAluno]);\r\n\r\n  useEffect(() => {\r\n    fetchAlunoInfo();\r\n  }, [fetchAlunoInfo]);\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    fetchAlunoInfo();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <SafeAreaView style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SafeAreaView style={styles.centerContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View\r\n              style={{\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n                paddingHorizontal: 10,\r\n                paddingBottom: 10,\r\n                position: \"absolute\",\r\n                top: 0,\r\n                zIndex: 10,\r\n                backgroundColor: \"white\",\r\n              }}\r\n            >\r\n              <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n                <Image\r\n                  source={require(\"../../../assets/icons/angle-left.png\")}\r\n                  style={{\r\n                    width: Platform.OS === \"web\" ? 35 : 23,\r\n                    height: Platform.OS === \"web\" ? 35 : 25,\r\n                    marginLeft: 3,\r\n                    marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                    tintColor: \"#000\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                <Image\r\n                  source={require(\"../../../assets/icons/user.png\")}\r\n                  style={{\r\n                    width: Platform.OS === \"web\" ? 30 : 25,\r\n                    height: Platform.OS === \"web\" ? 30 : 25,\r\n                    marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                    tintColor: \"#000\",\r\n                  }}\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n      <SafeAreaView style={styles.container}>\r\n        {availableDisciplinas.length > 0 ? (\r\n    <FlatList\r\n      data={availableDisciplinas}\r\n      keyExtractor={item => item.disciplina_id.toString()}\r\n      numColumns={numColumns}\r\n      contentContainerStyle={styles.listContent}\r\n      // só aplica espaçamento em colunas quando houver realmente 2 colunas\r\n      columnWrapperStyle={isWeb ? styles.row : undefined}\r\n              refreshControl={\r\n                <RefreshControl\r\n                  refreshing={refreshing}\r\n                  onRefresh={onRefresh}\r\n                  tintColor=\"#47AD4D\"\r\n                />\r\n              }\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity\r\n                style={[\r\n                  styles.itemBox,\r\n                  {\r\n                    width: itemWidth,\r\n                    // só aplica height no web; no mobile fica auto\r\n                    ...(isWeb\r\n                      ? { height: ITEM_HEIGHT }\r\n                      : {}\r\n                    ),\r\n                  },\r\n                ]}\r\n                onPress={() =>\r\n                  navigation.navigate(\"NotasDisciplina\", {\r\n                    email: alunoData.email,\r\n                    emailprof: item.professor_email,\r\n                    disciplina_id: item.disciplina_id,\r\n                    disciplina_nome: item.disciplina_nome,\r\n                  })\r\n                }\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={`Abrir ${item.disciplina_nome}`}\r\n              >\r\n                <Card\r\n                  style={[\r\n                    styles.smallerCard,\r\n                    // remove qualquer altura fixa no mobile\r\n                    !isWeb && { height: undefined },\r\n                  ]}\r\n                >\r\n                  <Card.Content style={styles.cardContent}>\r\n                    <Title style={styles.itemTitle}>\r\n                      {item.disciplina_nome}\r\n                    </Title>\r\n                    <Text style={styles.infoText}>\r\n                      {item.professor_email}\r\n                    </Text>\r\n                  </Card.Content>\r\n                </Card>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        ) : (\r\n          <View style={styles.centerContainer}>\r\n            <Text style={styles.infoText}>Nenhuma disciplina disponível.</Text>\r\n            <TouchableOpacity onPress={onRefresh} style={{ marginTop: 16 }}>\r\n              <Text style={{ color: \"#47AD4D\", fontWeight: \"bold\" }}>\r\n                Tentar novamente\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}            \r\n      </SafeAreaView>\r\n\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f7f7f7\",\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    marginTop:\r\n      Platform.OS === \"web\" ? 80 : HEADER_PADDING_TOP + 35,\r\n    },\r\n  centerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#f7f7f7\",\r\n    padding: 16,\r\n  },\r\n  errorText: {\r\n    fontSize: 18,\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n  },\r\n  listContent: {\r\n    paddingHorizontal: 16,\r\n    paddingTop: 8,\r\n  },\r\n  row: {  \r\n    justifyContent: \"space-between\",\r\n    marginBottom: 8,\r\n  },\r\n  itemBox: {\r\n       alignItems: \"center\",\r\n       marginVertical: 8,    // espaçamento uniforme em cima/baixo\r\n     },\r\n  smallerCard: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  itemTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: 4,\r\n    color: \"#47AD4D\",\r\n  },\r\n  infoText: {\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\nexport default DisciplinasDoAlunoScreen;","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { \r\n  SafeAreaView, \r\n  StyleSheet, \r\n  FlatList, \r\n  ActivityIndicator, \r\n  RefreshControl, \r\n  View, \r\n  ScrollView, \r\n  TouchableOpacity,\r\n  Platform,\r\n  StatusBar,\r\n  Image\r\n} from \"react-native\";\r\nimport { Text, Card, Title, Appbar, useTheme } from \"react-native-paper\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/config_db\"; // ajuste conforme sua estrutura\r\n\r\nconst NotasDisciplina = ({ route, navigation }) => {\r\n  // Recebe os parâmetros: email do aluno, disciplina_id, disciplina_nome e emailprof (email do professor)\r\n  const { email, disciplina_id, disciplina_nome, emailprof } = route.params;\r\n\r\n  // Estados para cada seção\r\n  const [notas, setNotas] = useState([]);\r\n  const [eventos, setEventos] = useState([]);\r\n  const [tarefas, setTarefas] = useState([]);\r\n\r\n  // Estados de loading e erros\r\n  const [loadingNotas, setLoadingNotas] = useState(true);\r\n  const [loadingEventos, setLoadingEventos] = useState(true);\r\n  const [loadingTarefas, setLoadingTarefas] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [errorNotas, setErrorNotas] = useState(null);\r\n  const [errorEventos, setErrorEventos] = useState(null);\r\n  const [errorTarefas, setErrorTarefas] = useState(null);\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  // Endpoints\r\n  const url_fetchNotas = `${config.baseUrl}/alunoFiles/fetchNotas.php`;\r\n  const url_fetchEventos = `${config.baseUrl}/alunoFiles/fetchEventos.php`;\r\n  const url_fetchTarefas = `${config.baseUrl}/alunoFiles/fetchTasks.php`; // endpoint para tarefas\r\n\r\n  const theme = useTheme();\r\n\r\n  // FUNÇÃO: Buscar Notas (continua inalterado)\r\n  const fetchNotas = useCallback(async () => {\r\n    try {\r\n      console.log(\"DEBUG: Buscando notas para email:\", email, \"disciplina_id:\", disciplina_id);\r\n      const response = await axios.post(url_fetchNotas, { email, disciplina_id });\r\n      console.log(\"DEBUG: Resposta do fetchNotas:\", response.data);\r\n      if (response.data.notas) {\r\n        setNotas(response.data.notas);\r\n        setErrorNotas(null);\r\n      } else {\r\n        setErrorNotas(response.data.error || \"Nenhuma nota encontrada\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"DEBUG: Erro ao buscar notas:\", err);\r\n      setErrorNotas(\"Erro na conexão com a base de dados (notas)\");\r\n    } finally {\r\n      setLoadingNotas(false);\r\n    }\r\n  }, [email, disciplina_id, url_fetchNotas]);\r\n\r\n  // FUNÇÃO: Buscar Eventos (continua inalterado)\r\n  const fetchEventos = useCallback(async () => {\r\n    try {\r\n      console.log(\"DEBUG: Buscando eventos para email:\", email, \"disciplina_id:\", disciplina_id);\r\n      const response = await axios.post(url_fetchEventos, { email, disciplina_id });\r\n      console.log(\"DEBUG: Resposta do fetchEventos:\", response.data);\r\n      if (Array.isArray(response.data)) {\r\n        setEventos(response.data);\r\n        setErrorEventos(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"DEBUG: Erro ao buscar eventos:\", err);\r\n      setErrorEventos(\"Erro na conexão com o servidor (eventos)\");\r\n    } finally {\r\n      setLoadingEventos(false);\r\n    }\r\n  }, [email, disciplina_id, url_fetchEventos]);\r\n\r\n  // FUNÇÃO: Buscar Tarefas – agora usando o email do professor (emailprof)\r\n  const fetchTarefas = useCallback(async () => {\r\n    try {\r\n      console.log(\"DEBUG: Buscando tarefas para email (professor):\", emailprof, \"disciplina_id:\", disciplina_id);\r\n      // Envie o email do professor (emailprof) como professor_id no payload\r\n      const response = await axios.post(url_fetchTarefas, { email: emailprof, disciplina_id });\r\n      console.log(\"DEBUG: Resposta do fetchTarefas:\", response.data);\r\n      if (response.data.success && Array.isArray(response.data.tasks)) {\r\n        setTarefas(response.data.tasks);\r\n        setErrorTarefas(null);\r\n      } else {\r\n        setErrorTarefas(response.data.error || \"Nenhuma tarefa encontrada\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"DEBUG: Erro ao buscar tarefas:\", err);\r\n      setErrorTarefas(\"Erro na conexão com o servidor (tarefas)\");\r\n    } finally {\r\n      setLoadingTarefas(false);\r\n    }\r\n  }, [emailprof, disciplina_id, url_fetchTarefas]);\r\n\r\n  useEffect(() => {\r\n    fetchNotas();\r\n    fetchEventos();\r\n    fetchTarefas();\r\n  }, [fetchNotas, fetchEventos, fetchTarefas]);\r\n\r\n  const onRefresh = () => {\r\n    console.log(\"DEBUG: Refresh acionado.\");\r\n    setRefreshing(true);\r\n    setLoadingNotas(true);\r\n    setLoadingEventos(true);\r\n    setLoadingTarefas(true);\r\n    Promise.all([fetchNotas(), fetchEventos(), fetchTarefas()])\r\n      .finally(() => setRefreshing(false));\r\n  };\r\n\r\n  if (loadingNotas || loadingEventos || loadingTarefas) {\r\n    return (\r\n      <SafeAreaView style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color={\"#47AD4D\"} />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n<View\r\n        style={{\r\n          width: \"100%\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n          paddingHorizontal: 10,\r\n          paddingBottom: 10,\r\n          position: \"absolute\",\r\n          top: 0,\r\n          zIndex: 10,\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/angle-left.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 35 : 23,\r\n              height: Platform.OS === \"web\" ? 35 : 25,\r\n              marginLeft: 3,\r\n              marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n              tintColor: \"#000\",\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          <Image\r\n            source={require(\"../../../assets/icons/user.png\")}\r\n            style={{\r\n              width: Platform.OS === \"web\" ? 30 : 25,\r\n              height: Platform.OS === \"web\" ? 30 : 25,\r\n              marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n              tintColor: \"#000\",\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <ScrollView style={styles.container} refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n        <Title style={styles.sectionTitle}>Notas</Title>\r\n        {errorNotas ? (\r\n          <Text style={styles.errorText}>{errorNotas}</Text>\r\n        ) : notas.length > 0 ? (\r\n          notas.map((item, index) => (\r\n            <Card key={item.nota_id ? item.nota_id.toString() : index.toString()} style={styles.card}>\r\n              <Card.Content>\r\n                <Title style={styles.itemTitle}>Nota: {item.nota}</Title>\r\n                <Text style={styles.infoText}>Professor: {item.professor_email}</Text>\r\n                <Text style={styles.infoText}>Data: {item.data_lancamento}</Text>\r\n                {item.comentario_privado && (\r\n                  <Text style={styles.infoText}>Comentário: {item.comentario_privado}</Text>\r\n                )}\r\n              </Card.Content>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Text style={styles.infoText}>Nenhuma nota encontrada.</Text>\r\n        )}\r\n\r\n        {/* Seção de Eventos */}\r\n        <Title style={styles.sectionTitle}>Eventos da Disciplina</Title>\r\n        {errorEventos ? (\r\n          <Text style={styles.errorText}>{errorEventos}</Text>\r\n        ) : eventos.length > 0 ? (\r\n          eventos.map((item) => (\r\n            <Card \r\n              key={item.id.toString()} \r\n              style={[\r\n                styles.card,\r\n                item.professor_email === emailprof \r\n                  ? styles.highlightCard \r\n                  : styles.normalCard\r\n              ]}\r\n            >\r\n              <Card.Content>\r\n                <Title style={styles.itemTitle}>{item.title}</Title>\r\n                <Text style={styles.infoText}>Início: {item.start_datetime}</Text>\r\n                <Text style={styles.infoText}>Fim: {item.end_datetime}</Text>\r\n              </Card.Content>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Text style={styles.infoText}>Nenhum evento encontrado para esta disciplina.</Text>\r\n        )}\r\n\r\n        {/* Seção de Tarefas */}\r\n        <Title style={styles.sectionTitle}>Tarefas Publicadas</Title>\r\n        {errorTarefas ? (\r\n          <Text style={styles.errorText}>{errorTarefas}</Text>\r\n        ) : tarefas.length > 0 ? (\r\n          tarefas.map((item) => (\r\n            <Card key={item.tarefa_id ? item.tarefa_id.toString() : item.id.toString()} style={styles.card}>\r\n              <Card.Content>\r\n                <Title style={styles.itemTitle}>{item.titulo}</Title>\r\n                <Text style={styles.infoText}>Descrição: {item.descricao}</Text>\r\n                <Text style={styles.infoText}>Data de Criação: {item.dataDeCriacao}</Text>\r\n                <Text style={styles.infoText}>Data da Tarefa: {item.data_da_tarefa}</Text>\r\n              </Card.Content>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Text style={styles.infoText}>Nenhuma tarefa encontrada para esta disciplina.</Text>\r\n        )}\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f7f7f7\",\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    marginTop: Platform.OS === \"web\" ? 30 : ( StatusBar.currentHeight + 35 || 70),\r\n  },\r\n  centerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#f7f7f7\",\r\n    padding: 16,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#47AD4D\",\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    marginTop: 12,\r\n    marginBottom: 8,\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n  infoText: {\r\n    fontSize: 14,\r\n    color: \"#333\",\r\n    marginTop: 4,\r\n  },\r\n  errorText: {\r\n    fontSize: 16,\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  card: {\r\n    marginVertical: 6,\r\n    borderRadius: 8,\r\n    elevation: 3,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  itemTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#47AD4D\",\r\n  },\r\n  highlightCard: {\r\n    backgroundColor: \"#e0f7fa\",\r\n  },\r\n  normalCard: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport default NotasDisciplina;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Button, Icon } from \"react-native-paper\";\r\nimport config from \"../../config/config_db\";\r\n\r\ninterface utilizador {\r\n  id: number;\r\n  email: string;\r\n  cargo: string;\r\n  dias: string[];\r\n  turma?: { ano: string; turma: string };\r\n}\r\n\r\ninterface EstatisticasResponse {\r\n  success: boolean;\r\n  headline: string;\r\n  alunosCount: number;\r\n  professoresCount: number;\r\n  administradoresCount: number;\r\n  total: number;\r\n  alunos: utilizador[];\r\n  professores: utilizador[];\r\n  administradores: utilizador[];\r\n}\r\n\r\nexport default function AuxiliarEstatisticas({ navigation }: any) {\r\n  const [dados, setDados] = useState<EstatisticasResponse | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [secaoAtiva, setSecaoAtiva] = useState<\"alunos\" | \"professores\" | \"administradores\" | null>(null);\r\n  const [subDetalhe, setSubDetalhe] = useState<any>(null);\r\n\r\n  const showAlert = (title: string, message: string) => {\r\n    if (Platform.OS === 'web') {\r\n      window.alert(`${title}\\n\\n${message}`);\r\n    } else {\r\n      Alert.alert(title, message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${config.baseUrl}/auxiliarFiles/fetchEstatisticasAlmoco.php`)\r\n      .then(async (res) => {\r\n        const text = await res.text();\r\n        console.log(\"Texto recebido:\", text);\r\n        try {\r\n          const json = JSON.parse(text);\r\n          if (json.success) {\r\n            setDados(json);\r\n          } else {\r\n            showAlert(\"Erro\", \"Não foi possível carregar as estatísticas. Pedimos que tente novamente mais tarde.\");\r\n          }\r\n        } catch (parseError) {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        showAlert(\"Erro\", \"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Pedimos que tente novamente mais tarde.\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const agruparAlunosPorTurma = () => {\r\n    const grupos: { [key: string]: utilizador[] } = {};\r\n    dados?.alunos.forEach((aluno) => {\r\n      if (aluno.turma) {\r\n        const chave = `${aluno.turma.ano} - ${aluno.turma.turma}`;\r\n        if (!grupos[chave]) {\r\n          grupos[chave] = [];\r\n        }\r\n        grupos[chave].push(aluno);\r\n      }\r\n    });\r\n    return grupos;\r\n  };\r\n\r\n  // Renderização dos detalhes (quando uma seção é selecionada)\r\n  const renderDetalhes = () => {\r\n    if (!dados) return null;\r\n    if (secaoAtiva === \"alunos\" && subDetalhe === null) {\r\n      // Agrupa alunos por turma e exibe botões maiores e mais apelativos\r\n      const grupos = agruparAlunosPorTurma();\r\n      return (\r\n        <View style={styles.detailContainer}>\r\n          <Text style={styles.detailTitle}>Turmas com alunos que almoçam</Text>\r\n          {Object.keys(grupos).map((chave, index) => {\r\n            const alunosTurma = grupos[chave];\r\n            // extraímos a lógica de navegação para não repetir\r\n            const handlePress = () =>\r\n              setSubDetalhe({ tipo: \"turma\", turma: chave, alunos: alunosTurma });\r\n\r\n            return (\r\n              <TouchableOpacity\r\n                key={index}\r\n                style={styles.turmaItem}\r\n                onPress={handlePress}       \r\n              >\r\n                <TouchableOpacity\r\n                  style={styles.greenSquare}\r\n                  onPress={handlePress}     \r\n                  activeOpacity={0.7}\r\n                >\r\n                  <Icon source=\"check-circle\" size={24} />\r\n                </TouchableOpacity>\r\n\r\n                <Text style={styles.turmaText}>{chave}</Text>\r\n                <Text style={styles.turmaText}>({alunosTurma.length})</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => {\r\n              setSecaoAtiva(null);\r\n              setSubDetalhe(null);\r\n            }}\r\n            style={styles.voltarBotao}\r\n            labelStyle={styles.voltarBotaoText}\r\n          >\r\n            Voltar\r\n          </Button>\r\n        </View>\r\n      );\r\n    }\r\n    if (secaoAtiva === \"alunos\" && subDetalhe && subDetalhe.tipo === \"turma\") {\r\n      return (\r\n        <View style={styles.detailContainer}>\r\n          <Text style={styles.detailTitle}>Alunos de {subDetalhe.turma}</Text>\r\n          {subDetalhe.alunos.map((aluno: utilizador, idx: number) => (\r\n            <View key={idx} style={styles.detailItem}>\r\n              <Text style={styles.detailItemText}>Email: {aluno.email}</Text>\r\n              <Text style={styles.detailItemText}>\r\n                Dias: {aluno.dias.join(\", \")}\r\n              </Text>\r\n            </View>\r\n          ))}\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => setSubDetalhe(null)}\r\n            style={styles.voltarBotao}\r\n            labelStyle={styles.voltarBotaoText}\r\n          >\r\n            Voltar\r\n          </Button>\r\n        </View>\r\n      );\r\n    }\r\n    if (secaoAtiva === \"professores\" || secaoAtiva === \"administradores\") {\r\n      const lista =\r\n        secaoAtiva === \"professores\" ? dados.professores : dados.administradores;\r\n      return (\r\n        <View style={styles.detailContainer}>\r\n          <Text style={styles.detailTitle}>\r\n            {secaoAtiva === \"professores\" ? \"Professores\" : \"Administradores\"} que almoçam\r\n          </Text>\r\n          {lista.map((user: utilizador, idx: number) => (\r\n            <View key={idx} style={styles.detailItem}>\r\n              <Text style={styles.detailItemText}>Email: {user.email}</Text>\r\n              <Text style={styles.detailItemText}>\r\n                Dias: {user.dias.join(\", \")}\r\n              </Text>\r\n            </View>\r\n          ))}\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => setSecaoAtiva(null)}\r\n            style={styles.voltarBotao}\r\n            labelStyle={styles.voltarBotaoText}\r\n          >\r\n            Voltar\r\n          </Button>\r\n        </View>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Layout principal: menu vertical à esquerda e dados estatísticos à direita\r\n  const renderMenuEHeadline = () => {\r\n    return (\r\n      <View style={styles.mainContainer}>\r\n        {/* Menu Vertical */}\r\n        <View style={styles.menuVertical}>\r\n          <TouchableOpacity\r\n            style={styles.menuButton}\r\n            onPress={() => setSecaoAtiva(\"alunos\")}\r\n          >\r\n            <Text style={styles.menuButtonText}>Alunos</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.menuButton}\r\n            onPress={() => setSecaoAtiva(\"professores\")}\r\n          >\r\n            <Text style={styles.menuButtonText}>Professores</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.menuButton}\r\n            onPress={() => setSecaoAtiva(\"administradores\")}\r\n          >\r\n            <Text style={styles.menuButtonText}>Administradores</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        {/* Dados Estatísticos à Direita */}\r\n        <View style={styles.headlineContainer}>\r\n          <Text style={styles.headline}>{dados?.headline}</Text>\r\n          <Text style={styles.infoText}>Alunos: {dados?.alunosCount}</Text>\r\n          <Text style={styles.infoText}>Professores: {dados?.professoresCount}</Text>\r\n          <Text style={styles.infoText}>\r\n            Administradores: {dados?.administradoresCount}\r\n          </Text>\r\n          <Text style={styles.totalText}>📋 Total: {dados?.total}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      {!secaoAtiva && renderMenuEHeadline()}\r\n      {secaoAtiva && renderDetalhes()}\r\n      {!secaoAtiva && (\r\n        <Button\r\n          mode=\"outlined\"\r\n          onPress={() => navigation.goBack()}\r\n          style={styles.voltarBotao}\r\n          labelStyle={styles.voltarBotaoText}\r\n        >\r\n          Voltar\r\n        </Button>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n  \r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 15,\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    loadingContainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    mainContainer: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"stretch\", // estica as colunas\r\n        justifyContent: \"space-between\",\r\n        paddingVertical: 20,\r\n      },\r\n    menuVertical: {\r\n      flex: 1,\r\n      marginRight: 30,\r\n      justifyContent: \"center\",\r\n    },\r\n    menuButton: {\r\n      backgroundColor: \"#47AD4D\",\r\n      paddingVertical: 18,\r\n      paddingHorizontal: 10,\r\n      marginBottom: 12,\r\n      borderRadius: 10,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: { width: 0, height: 1 },\r\n      shadowOpacity: 0.2,\r\n      shadowRadius: 2,\r\n      elevation: 2,\r\n    },\r\n    menuButtonText: {\r\n      color: \"#fff\",\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n    },\r\n    headlineContainer: {\r\n        flex: 1,\r\n        justifyContent: \"space-evenly\",\r\n        padding: 20,\r\n        backgroundColor: \"#F9F9F9\",\r\n        borderRadius: 10,\r\n        elevation: 2,\r\n        minHeight: 300, // aumenta o preenchimento vertical\r\n      },\r\n      headline: {\r\n        fontSize: 24,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 20,\r\n        borderBottomWidth: 1,\r\n        borderColor: \"#ccc\",\r\n        paddingBottom: 10,\r\n        textAlign: \"center\",\r\n      },\r\n      infoText: {\r\n        fontSize: 20,\r\n        marginVertical: 6,\r\n        textAlign: \"center\",\r\n      },\r\n      totalText: {\r\n        fontSize: 22,\r\n        fontWeight: \"bold\",\r\n        marginTop: 16,\r\n        textAlign: \"center\",\r\n        color: \"#2E7D32\",\r\n      },\r\n    detailContainer: {\r\n      marginTop: 20,\r\n      alignItems: \"center\",\r\n      paddingHorizontal: 10,\r\n    },\r\n    detailTitle: {\r\n      fontSize: 22,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 20,\r\n      textAlign: \"center\",\r\n    },\r\n    detailItem: {\r\n      backgroundColor: \"#F1F8E9\",\r\n      padding: 12,\r\n      borderRadius: 8,\r\n      marginVertical: 6,\r\n      width: \"95%\",\r\n      elevation: 1,\r\n    },\r\n    detailItemText: {\r\n      fontSize: 16,\r\n    },\r\n    turmaItem: {\r\n      backgroundColor: \"#E8F5E9\",\r\n      borderRadius: 12,\r\n      paddingVertical: 18,\r\n      paddingHorizontal: 20,\r\n      marginVertical: 8,\r\n      width: \"95%\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      elevation: 3,\r\n    },\r\n    turmaText: {\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n      color: \"#2E7D32\",\r\n    },\r\n    voltarBotao: {\r\n      marginTop: 25,\r\n      alignSelf: \"center\",\r\n      width: \"60%\",\r\n    },\r\n    voltarBotaoText: {\r\n       color: \"#47AD4D\",\r\n    },\r\n    greenSquare: {\r\n      width: 30,\r\n      height: 30,\r\n      backgroundColor: \"#47AD4D\",\r\n      borderRadius: 4,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      // não aceita clics: passa tudo para o pai\r\n    },    \r\n  })\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  StatusBar,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Image,\r\n  SafeAreaView\r\n} from 'react-native';\r\nimport { useTheme, Card } from 'react-native-paper';\r\nimport config from '../../config/config_db';\r\nimport ModalConfig from '../../components/modalConfig';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nconst ConfirmacoesScreen = ({ navigation, route }) => {\r\n  const theme = useTheme();\r\n  const [loading, setLoading] = useState(true);\r\n  const [backgroundUrl, setBackgroundUrl] = useState(null);\r\n  const [userTheme, setUserTheme] = useState(theme.dark ? 'dark' : 'light');\r\n  const [alunos, setAlunos] = useState([]);\r\n  const [modalContaVisivel, setModalContaVisivel] = useState(false);\r\n  const [toast, setToast] = useState({ visible: false, message: '', type: '' });\r\n\r\n  const showToast = useCallback((message, type) => {\r\n    setToast({ visible: true, message, type });\r\n    setTimeout(() => setToast({ visible: false, message: '', type: '' }), 2000);\r\n  }, []);\r\n\r\n  // carregar preferências de tema/background\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let bg, mode;\r\n        if (Platform.OS === 'web') {\r\n          bg = localStorage.getItem('backgroundUrl');\r\n          mode = localStorage.getItem('userTheme');\r\n        } else {\r\n          bg = await SecureStore.getItemAsync('backgroundUrl');\r\n          mode = await SecureStore.getItemAsync('userTheme');\r\n        }\r\n        if (bg && !bg.startsWith('http')) bg = `${config.baseUrl}/${bg}`;\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === 'dark' ? 'dark' : 'light');\r\n      } catch (err) {\r\n        console.error('Erro carregando configurações', err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // buscar alunos pendentes\r\n  const fetchPendentes = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(`${config.baseUrl}/adminFiles/aboutStudents/fetchAlunosPendentes.php`);\r\n      const json = await res.json();\r\n      if (json.success) {\r\n        setAlunos(json.alunos);\r\n      } else {\r\n        showToast(json.message || 'Erro ao carregar alunos', 'error');\r\n      }\r\n    } catch (err) {\r\n      console.error('fetchPendentes', err);\r\n      showToast('Falha ao procurar os alunos', 'error');\r\n    }\r\n    setLoading(false);\r\n  }, [showToast]);\r\n\r\n  useEffect(() => { fetchPendentes(); }, [fetchPendentes]);\r\n\r\n  const confirmAluno = async (id) => {\r\n    try {\r\n      const res = await fetch(`${config.baseUrl}/adminFiles/aboutStudents/confirmAluno.php`, {\r\n        method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id })\r\n      });\r\n      const json = await res.json();\r\n      if (json.success) {\r\n        showToast('Aluno confirmado', 'success');\r\n        fetchPendentes();\r\n      } else showToast(json.message, 'error');\r\n    } catch (err) {\r\n      console.error('confirmAluno', err);\r\n      showToast('Erro ao confirmar aluno', 'error');\r\n    }\r\n  };\r\n\r\n  const deleteAluno = async (id) => {\r\n    try {\r\n      const res = await fetch(`${config.baseUrl}/adminFiles/aboutStudents/deleteAluno.php`, {\r\n        method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id })\r\n      });\r\n      const json = await res.json();\r\n      if (json.success) {\r\n        showToast('Aluno removido', 'success');\r\n        fetchPendentes();\r\n      } else showToast(json.message, 'error');\r\n    } catch (err) {\r\n      console.error('deleteAluno', err);\r\n      showToast('Erro ao remover aluno', 'error');\r\n    }\r\n  };\r\n\r\n  const boxBg = userTheme === 'dark' ? '#1e1e1e' : '#fff';\r\n  const textColor = userTheme === 'dark' ? '#fff' : '#000';\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Card style={[styles.card, { backgroundColor: boxBg }]}>      \r\n      <View style={styles.cardContent}>\r\n        <View style={styles.infoBox}>\r\n          <Text style={[styles.emailText, { color: textColor }]} numberOfLines={1}>\r\n            {item.email}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.actionsBox}>\r\n          <TouchableOpacity onPress={() => confirmAluno(item.id)}>\r\n            <Image source={require('../../assets/icons/check.png')} style={styles.iconAction} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => deleteAluno(item.id)}>\r\n            <Image source={require('../../assets/icons/cross.png')} style={styles.iconAction} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={ backgroundUrl ? { uri: backgroundUrl } : require('../../assets/images/bg1.jpg') }\r\n      style={styles.bgImage}\r\n      resizeMode=\"cover\"\r\n    >\r\n      {userTheme === 'dark' && <View style={styles.darkOverlay} />}      \r\n      <StatusBar\r\n        translucent\r\n        backgroundColor=\"transparent\"\r\n        barStyle={userTheme === 'dark' ? 'light-content' : 'dark-content'}\r\n      />\r\n\r\n      {toast.visible && (\r\n        <View style={[styles.toast, toast.type === 'success' ? styles.toastSuccess : styles.toastError]}>\r\n          <Text style={styles.toastText}>{toast.message}</Text>\r\n        </View>\r\n      )}\r\n\r\n<View\r\n          style={{\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            zIndex: 10,\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n            <Image\r\n              source={require(\"../../assets/icons/angle-left.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 35 : 23,\r\n                height: Platform.OS === \"web\" ? 35 : 25,\r\n                marginLeft: 3,\r\n                marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setModalContaVisivel(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n            <Image\r\n              source={require(\"../../assets/icons/user.png\")}\r\n              style={{\r\n                width: Platform.OS === \"web\" ? 30 : 25,\r\n                height: Platform.OS === \"web\" ? 30 : 25,\r\n                marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      <SafeAreaView style={styles.listContainer}>\r\n        {loading ? (\r\n          <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n        ) : (\r\n          <FlatList\r\n            data={alunos}\r\n            keyExtractor={(item) => item.id.toString()}\r\n            renderItem={renderItem}\r\n            contentContainerStyle={alunos.length === 0 && styles.emptyContainer}\r\n            ListEmptyComponent={<Text style={[styles.emptyText, { color: textColor }]}>Nenhum aluno pendente.</Text>}\r\n          />\r\n        )}\r\n      </SafeAreaView>\r\n\r\n      <ModalConfig\r\n        visible={modalContaVisivel}\r\n        dynamicHeaderBackground={boxBg}\r\n        dynamicTextColor={textColor}\r\n        onClose={() => setModalContaVisivel(false)}\r\n        navigation={navigation}\r\n        email={route.params.email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  bgImage: { flex: 1 },\r\n  darkOverlay: { ...StyleSheet.absoluteFillObject, backgroundColor: 'rgba(0,0,0,0.4)' },\r\n  header: {\r\n    width: '100%', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center',\r\n    paddingVertical: 12, paddingHorizontal: 16, marginTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0\r\n  },\r\n  headerTitle: { color: '#fff', fontSize: 20, fontWeight: 'bold' },\r\n  headerIcon: { width: 28, height: 28, tintColor: '#000' },\r\n  listContainer: { flex: 1, paddingHorizontal: 16, paddingBottom: 16, marginTop: 90 },\r\n  card: { marginVertical: 8, borderRadius: 10, elevation: 4 },\r\n  cardContent: { flexDirection: 'row', alignItems: 'center', padding: 12 },\r\n  infoBox: { flex: 1, marginRight: 12 },\r\n  emailText: { fontSize: 16, fontWeight: '500' },\r\n  actionsBox: { flexDirection: 'row' },\r\n  iconAction: { width: 24, height: 24, marginHorizontal: 8 },\r\n  toast: {\r\n    position: 'absolute', top: Platform.OS === 'web' ? 50 : 80,\r\n    alignSelf: 'center', paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, zIndex: 20\r\n  },\r\n  toastText: { color: '#fff', fontSize: 14 },\r\n  toastSuccess: { backgroundColor: '#47AD4D' },\r\n  toastError: { backgroundColor: '#D32F2F' },\r\n  emptyContainer: { flex: 1, justifyContent: 'center', alignItems: 'center' },\r\n  emptyText: { fontSize: 16 }\r\n});\r\n\r\nexport default ConfirmacoesScreen;","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, ScrollView, ActivityIndicator, StyleSheet, ImageBackground, Platform, Alert, StatusBar, KeyboardAvoidingView} from \"react-native\";\r\nimport { Button, RadioButton, HelperText } from \"react-native-paper\";\r\nimport config from \"../../config/config_db\";\r\nimport { useNavigation, useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport type { NavigationProp } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../../types\";\r\n\r\ntype Turma = { id: number; turma: string };\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\nfunction showMessage(msg: string) {\r\n  if (Platform.OS === \"android\") {\r\n    ToastAndroid.show(msg, ToastAndroid.LONG);\r\n  } else {\r\n    Alert.alert(\"\", msg);\r\n  }\r\n}\r\n\r\nconst SelectTurmaScreen = () => {\r\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\r\n  const route = useRoute<RouteProp<RootStackParamList, 'SelectTurma'>>();\r\n  const { email, initialMessage = \"\" } = route.params;\r\n\r\n  const url_fetchTurmas = `${config.baseUrl}/signInFiles/fetchTurmas.php`;\r\n  const url_saveTurmas  = `${config.baseUrl}/signInFiles/saveSelectedTurma.php`;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [success, setSuccess] = useState<string>(initialMessage);\r\n  const [turmas, setTurmas] = useState<Turma[]>([]);\r\n  const [selectedId, setSelectedId] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (initialMessage) {\r\n      setSuccess(initialMessage);\r\n      setTimeout(() => setSuccess(\"\"), 2000);\r\n    }\r\n  }, [initialMessage]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res  = await fetch(url_fetchTurmas);\r\n        const text = await res.text();\r\n        const json = JSON.parse(text);\r\n        if (json.success) {\r\n          if (isMounted) setTurmas(json.turmas);\r\n        } else {\r\n          showMessage(json.message);\r\n        }\r\n      } catch {\r\n        showMessage(\"Ocorreu um erro de conexão. Tente novamente mais tarde.\");\r\n      } finally {\r\n        if (isMounted) setLoading(false);\r\n      }\r\n    })();\r\n    return () => { isMounted = false };\r\n  }, []);\r\n\r\nconst handleSubmit = async () => {\r\n  if (selectedId === null) {\r\n    setErrorMessage(\"Selecione uma turma antes de avançar.\");\r\n    return;\r\n  }\r\n  setErrorMessage(\"\");\r\n  setLoading(true);\r\n\r\n  try {\r\n    const res  = await fetch(url_saveTurmas, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, turma_id: selectedId }),\r\n    });\r\n    const text = await res.text();\r\n    const json = JSON.parse(text);\r\n\r\n    if (json.success) {\r\n      const mensagem = \"A sua turma foi selecionada com sucesso! Você agora vai precisar da aprovação de um administrador.\";\r\n      if (Platform.OS === \"web\") {\r\n        window.alert(mensagem);\r\n      } else {\r\n        showMessage(mensagem);\r\n      }\r\n      navigation.navigate(\"Login\");\r\n    } else {\r\n      showMessage(json.message || \"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Tente novamente mais tarde.\");\r\n    }\r\n  } catch {\r\n    showMessage(\"Ocorreu um erro enquanto o tentavamos conectar aos nossos servidores. Tente novamente mais tarde.\");\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  if (loading) {\r\n    return (\r\n      <ImageBackground\r\n        source={require('../../assets/images/bg1.jpg')}\r\n        style={styles.bg}\r\n      >\r\n        <ActivityIndicator size=\"large\" color=\"#47AD4D\" />\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={require('../../assets/images/bg1.jpg')} style={styles.bg}>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"transparent\" translucent />\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n          {success !== \"\" && (\r\n            <View style={styles.toastContainer}>\r\n              <View style={styles.toastBox}>\r\n                <Text style={styles.toastText}>{success}</Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n          <View style={styles.box}>\r\n            <Text style={styles.title}>Selecione sua Turma (10º Ano)</Text>\r\n\r\n            {errorMessage ? (\r\n              <HelperText type=\"error\" visible style={styles.errorText}>\r\n                {errorMessage}\r\n              </HelperText>\r\n            ) : null}\r\n\r\n            <RadioButton.Group\r\n              onValueChange={v => setSelectedId(Number(v))}\r\n              value={selectedId?.toString()}\r\n            >\r\n              <ScrollView style={styles.list}>\r\n                {turmas.map(t => (\r\n                  <View key={t.id} style={styles.item}>\r\n                    <RadioButton value={t.id.toString()} />\r\n                    <Text style={styles.itemText}>Turma {t.turma}</Text>\r\n                  </View>\r\n                ))}\r\n              </ScrollView>\r\n            </RadioButton.Group>\r\n\r\n            <Button\r\n              mode=\"contained\"\r\n              onPress={handleSubmit}\r\n              loading={loading}\r\n              disabled={loading}\r\n              style={styles.button}\r\n              labelStyle={styles.buttonLabel}\r\n            >\r\n              Confirmar\r\n            </Button>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  bg: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  box: {\r\n    width: \"90%\",\r\n    maxWidth: 400,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 12,\r\n    padding: 24,\r\n    elevation: 3,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    shadowOffset: { width: 0, height: 2 },\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginBottom: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#333\"\r\n  },\r\n  list: {\r\n    maxHeight: 200,\r\n    marginBottom: 20\r\n  },\r\n  item: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8\r\n  },\r\n  itemText: {\r\n    fontSize: 16,\r\n    color: \"#333\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    backgroundColor: \"#47AD4D\"\r\n  },\r\n  buttonLabel: {\r\n    color: \"#fff\"\r\n  },\r\n  errorText: {\r\n    color: \"#B00020\",\r\n    marginBottom: 8\r\n  },\r\n  toastContainer: {\r\n    position: \"absolute\",\r\n    top: 16,\r\n    left: 16,\r\n    right: 16,\r\n    alignItems: \"center\",\r\n    zIndex: 10,\r\n  },\r\n  toastBox: {\r\n    backgroundColor: \"#47AD4D\",\r\n    borderRadius: 24,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    elevation: 5,                \r\n    shadowColor: \"#000\",         \r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n  },\r\n  toastText: {\r\n    color: \"#FFF\",\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default SelectTurmaScreen;","import React, { useState, useEffect } from \"react\";\r\nimport { \r\n  View, \r\n  StyleSheet, \r\n  ScrollView, \r\n  Platform, \r\n  ImageBackground, \r\n  ActivityIndicator, \r\n  Modal, \r\n  TouchableOpacity, \r\n  Image, \r\n  StatusBar\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { Text, TextInput, Button, useTheme, IconButton } from \"react-native-paper\";\r\nimport { Calendar as BigCalendar } from \"react-native-big-calendar\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config_db\";\r\nimport { useRoute, useNavigation, RouteProp } from \"@react-navigation/native\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport ModalConfig from \"../../components/modalConfig\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nlet ToastAndroid: any = null;\r\nif (Platform.OS === \"android\") {\r\n  // Só importa ToastAndroid no Android\r\n  ToastAndroid = require(\"react-native\").ToastAndroid;\r\n}\r\n\r\ntype RootStackParamList = {\r\n  AddEventsScreenWeb: { email: string };\r\n};\r\n\r\ntype AddEventsScreenWebRouteProp = RouteProp<RootStackParamList, \"AddEventsScreenWeb\">;\r\n\r\nconst colorOptions = [\r\n  { value: \"#FF6347\", name: \"Tomate\" },\r\n  { value: \"#DC143C\", name: \"Carmesim\" },\r\n  { value: \"#FF4500\", name: \"Vermelho-Laranja\" },\r\n  { value: \"#8A2BE2\", name: \"Azul-Violeta\" },\r\n  { value: \"#5F9EA0\", name: \"Azul-Cadete\" },\r\n  { value: \"#2E8B57\", name: \"Verde-Mar\" },\r\n  { value: \"#FF8C00\", name: \"Laranja-Escuro\" },\r\n  { value: \"#9932CC\", name: \"Orquídea-Escura\" },\r\n  { value: \"#20B2AA\", name: \"Verde-Mar-Claro\" },\r\n  { value: \"#4682B4\", name: \"Azul-Aço\" },\r\n];\r\n\r\nconst getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / 86400000) + 1) / 7);\r\n};\r\n\r\nconst getCalendarMode = (start: Date, end: Date, isTask: boolean) => {\r\n  if (isTask) return \"day\";\r\n  if (start.toDateString() === end.toDateString()) return \"day\";\r\n  const startWeek = getWeekNumber(start);\r\n  const endWeek = getWeekNumber(end);\r\n  if (start.getDay() === 6 && end.getDay() === 1) return \"month\";\r\n  if (startWeek === endWeek) return \"week\";\r\n  const diffDays = (end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24);\r\n  if (diffDays > 7) return \"month\";\r\n  return \"week\";\r\n};\r\n\r\nconst validateTimesAndDates = (\r\n  startDate: Date,\r\n  startTime: Date,\r\n  endTime: Date,\r\n  isTask: boolean\r\n) => {\r\n  const warnings: string[] = [];\r\n  const parseTime = (timeObj: Date) => {\r\n    const hours = timeObj.getHours();\r\n    const minutes = timeObj.getMinutes();\r\n    return { hours, minutes };\r\n  };\r\n  if (isTask) {\r\n    const { hours, minutes } = parseTime(startTime);\r\n    if (hours > 17 || (hours === 17 && minutes >= 15)) {\r\n      warnings.push(\"A hora da tarefa é após 17:15.\");\r\n    }\r\n  } else {\r\n    const { hours: startH, minutes: startM } = parseTime(startTime);\r\n    const { hours: endH, minutes: endM } = parseTime(endTime);\r\n    if (startH > 17 || (startH === 17 && startM >= 15)) {\r\n      warnings.push(\"A hora de início é após 17:15.\");\r\n    }\r\n    if (endH > 17 || (endH === 17 && endM >= 15)) {\r\n      warnings.push(\"A hora de fim é após 17:15.\");\r\n    }\r\n  }\r\n  const dayOfWeek = startDate.getDay();\r\n  if (dayOfWeek === 0 || dayOfWeek === 6) {\r\n    warnings.push(\"A data selecionada é no fim de semana.\");\r\n  }\r\n  return warnings;\r\n};\r\n\r\nconst AddEventsScreenWeb = () => {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation<any>();\r\n  const route = useRoute<AddEventsScreenWebRouteProp>();\r\n  const { email } = route.params;\r\n\r\n  const url_adicionarEventos = `${config.baseUrl}/calendarioFiles/professor/eventos/add_event.php`;\r\n  const url_addTask = `${config.baseUrl}/calendarioFiles/professor/tarefas/add_task.php`;\r\n  const url_profInfo = `${config.baseUrl}/calendarioFiles/professor/fetchProfessorInfo.php`;\r\n\r\n  const [newEvent, setNewEvent] = useState({ title: \"\", description: \"\" });\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\r\n  const [customCategory, setCustomCategory] = useState<string>(\"\");\r\n  const [selectedType, setSelectedType] = useState<string>(\"\");\r\n  const isTask = selectedType === \"Tarefa\";\r\n  const [selectedColor, setSelectedColor] = useState<string>(\"#DC143C\");\r\n  const [showColorModal, setShowColorModal] = useState<boolean>(false);\r\n\r\n  // Estados de datas e horas iniciam com o valor atual\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startTime, setStartTime] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [endTime, setEndTime] = useState(new Date());\r\n\r\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\r\n  const [showStartTimePicker, setShowStartTimePicker] = useState(false);\r\n  const [showEndDatePicker, setShowEndDatePicker] = useState(false);\r\n  const [showEndTimePicker, setShowEndTimePicker] = useState(false);\r\n\r\n  const [turmas, setTurmas] = useState<any[]>([]);\r\n  const [selectedTurmas, setSelectedTurmas] = useState<any[]>([]);\r\n  const [showTurmaModal, setShowTurmaModal] = useState(false);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [fieldErrors, setFieldErrors] = useState<{ [key: string]: boolean }>({});\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string | null>(null);\r\n  const [userTheme, setUserTheme] = useState<\"light\" | \"dark\">(theme.dark ? \"dark\" : \"light\");\r\n  const [accountModalVisible, setAccountModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function loadSettings() {\r\n      try {\r\n        let bg: string | null;\r\n        let mode: string | null;\r\n        // Se for web, usamos localStorage; se não, usamos SecureStore\r\n        if (Platform.OS === \"web\") {\r\n          bg = localStorage.getItem(\"backgroundUrl\");\r\n          mode = localStorage.getItem(\"userTheme\");\r\n        } else {\r\n          bg = await SecureStore.getItemAsync(\"backgroundUrl\");\r\n          mode = await SecureStore.getItemAsync(\"userTheme\");\r\n        }\r\n        // Se o background existir e não começar com \"http\", concatenamos com o baseUrl\r\n        if (bg && !bg.startsWith(\"http\")) {\r\n          bg = `${config.baseUrl}/${bg}`;\r\n        }\r\n        setBackgroundUrl(bg);\r\n        setUserTheme(mode === \"dark\" ? \"dark\" : \"light\");\r\n      } catch (error) {\r\n        console.log(\"Erro ao carregar configurações.\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadSettings();\r\n  }, []);  \r\n\r\n  // Modal para quando não houver turmas\r\n  const showNoTurmasModal = turmas.length === 0;\r\n\r\n  const displayError = (msg: string) => {\r\n    setError(msg);\r\n    if (Platform.OS === \"web\") {\r\n      window.alert(msg);\r\n    } else {\r\n      ToastAndroid.show(msg, ToastAndroid.LONG);\r\n    }\r\n  };\r\n\r\n  const displaySuccess = (msg: string) => {\r\n    setSuccess(msg);\r\n    if (Platform.OS === \"web\") {\r\n      window.alert(msg);\r\n    } else {\r\n      ToastAndroid.show(msg, ToastAndroid.LONG);\r\n    }\r\n  };\r\n\r\n  const validateFields = () => {\r\n    const errorsObj: { [key: string]: boolean } = {};\r\n  \r\n    if (isTask) {\r\n      if (!selectedCategory) errorsObj.category = true;\r\n      if (selectedCategory === \"Outro\" && !customCategory.trim())\r\n        errorsObj.customCategory = true;\r\n      if (!newEvent.title.trim()) errorsObj.title = true;\r\n      if (!startDate) errorsObj.startDate = true;\r\n      if (!startTime) errorsObj.startTime = true;\r\n    } else {\r\n      if (!newEvent.title.trim()) errorsObj.title = true;\r\n      if (!startDate) errorsObj.startDate = true;\r\n      if (!startTime) errorsObj.startTime = true;\r\n      if (!endDate) errorsObj.endDate = true;\r\n      if (!endTime) errorsObj.endTime = true;\r\n      if (selectedTurmas.length === 0) errorsObj.turmas = true;\r\n    }\r\n  \r\n    return errorsObj;\r\n  };\r\n\r\n  // Handlers para DateTimePicker\r\n  const onChangeStartDate = (event: any, selectedDate?: Date) => {\r\n    setShowStartDatePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedDate) {\r\n      setStartDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  const onChangeStartTime = (event: any, selectedTime?: Date) => {\r\n    setShowStartTimePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedTime) {\r\n      setStartTime(selectedTime);\r\n    }\r\n  };\r\n\r\n  const onChangeEndDate = (event: any, selectedDate?: Date) => {\r\n    setShowEndDatePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedDate) {\r\n      setEndDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  const onChangeEndTime = (event: any, selectedTime?: Date) => {\r\n    setShowEndTimePicker(false);\r\n    if (event.type !== \"dismissed\" && selectedTime) {\r\n      setEndTime(selectedTime);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateObj: Date) => dateObj.toLocaleDateString(\"pt-PT\");\r\n  const formatTime = (timeObj: Date) =>\r\n    timeObj.toLocaleTimeString(\"pt-PT\", { hour: \"2-digit\", minute: \"2-digit\" });\r\n\r\n  // Busca as turmas associadas ao professor\r\n  useEffect(() => {\r\n    axios\r\n      .post(url_profInfo, { email })\r\n      .then((response) => {\r\n        console.log(\"Response:\", response.data);\r\n        if (response.data && Array.isArray(response.data.turmas)) {\r\n          setTurmas(response.data.turmas);\r\n        } else {\r\n          setTurmas([]);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setTurmas([]);\r\n      });\r\n  }, [email]);\r\n\r\n  // Define o tipo padrão conforme a categoria selecionada\r\n  useEffect(() => {\r\n    if (selectedCategory) {\r\n      if (selectedCategory === \"Trabalho de casa\") {\r\n        if (!selectedType) setSelectedType(\"Tarefa\");\r\n      } else {\r\n        if (!selectedType) setSelectedType(\"Evento\");\r\n      }\r\n    } else {\r\n      setSelectedType(\"\");\r\n    }\r\n  }, [selectedCategory]);\r\n\r\n  const toggleTurma = (turma: any) => {\r\n    if (selectedTurmas.some((item) => item.turma === turma.turma && item.ano === turma.ano)) {\r\n      setSelectedTurmas(selectedTurmas.filter((item) => !(item.turma === turma.turma && item.ano === turma.ano)));\r\n    } else {\r\n      setSelectedTurmas([...selectedTurmas, turma]);\r\n    }\r\n  };\r\n\r\n  const handlePreview = () => {\r\n    const errorsObj = validateFields();\r\n    if (Object.keys(errorsObj).length > 0) {\r\n      setFieldErrors(errorsObj);\r\n      displayError(\"Por favor, preencha todos os campos obrigatórios.\");\r\n      return;\r\n    } else {\r\n      setFieldErrors({});\r\n    }\r\n\r\n    // Para eventos, se a data/hora de fim for anterior à de início, ajusta para os valores escolhidos\r\n    if (!isTask) {\r\n      const startDateTime = new Date(\r\n        startDate.getFullYear(),\r\n        startDate.getMonth(),\r\n        startDate.getDate(),\r\n        startTime.getHours(),\r\n        startTime.getMinutes()\r\n      );\r\n      const endDateTime = new Date(\r\n        endDate.getFullYear(),\r\n        endDate.getMonth(),\r\n        endDate.getDate(),\r\n        endTime.getHours(),\r\n        endTime.getMinutes()\r\n      );\r\n      if (startDateTime > endDateTime || startDateTime.getTime() === endDateTime.getTime()) {\r\n        window.alert(\r\n          \"Erro de Data/Hora: A data e hora de início não pode ser posterior ou igual à data e hora de fim.\"\r\n        );\r\n        return;\r\n      }\r\n      if (endDateTime < startDateTime) {\r\n        setEndDate(startDate);\r\n        setEndTime(startTime);\r\n      }\r\n    }\r\n    setError(\"\");\r\n    const warnings = validateTimesAndDates(startDate, startTime, endTime, isTask);\r\n    if (warnings.length > 0) {\r\n      const warningMessage = warnings.join(\"\\n\") + \"\\nTem certeza que deseja continuar?\";\r\n      if (window.confirm(`${warningMessage}\\n\\nTem certeza que deseja continuar?`)) {\r\n        setShowPreview(true);\r\n      }\r\n    } else {\r\n      setShowPreview(true);\r\n    }\r\n  };\r\n\r\n  const handleCreateEventOrTask = () => {\r\n    const eventData: any = {\r\n      email: email || \"\",\r\n      title: newEvent.title,\r\n      description: newEvent.description.trim() ? newEvent.description : \"\",\r\n      category: selectedCategory === \"Outro\" ? customCategory : selectedCategory,\r\n      type: selectedType,\r\n      color: selectedColor\r\n    };\r\n  \r\n    if (isTask) {\r\n      eventData.data_da_tarefa = `${formatDate(startDate)} ${formatTime(startTime)}`;\r\n    } else {\r\n      eventData.start_date = formatDate(startDate);\r\n      eventData.start_time = formatTime(startTime);\r\n      eventData.end_date = formatDate(endDate);\r\n      eventData.end_time = formatTime(endTime);\r\n    }\r\n  \r\n    if (selectedTurmas.length > 0) {\r\n      eventData.turma = selectedTurmas[0].turma;\r\n      eventData.ano = selectedTurmas[0].ano;\r\n    } else {\r\n      displayError(\"Pedimos que selecione pelo menos uma turma.\");\r\n      return;\r\n    }\r\n  \r\n    const endpoint = isTask ? url_addTask : url_adicionarEventos;\r\n  \r\n    axios\r\n      .post(endpoint, eventData)\r\n      .then((response) => {\r\n        if (response.data.success !== true) {\r\n          displayError(response.data.message || \"Ocorreu um erro ao tentar adicionar um novo evento/tarefa, pedimos que tente novamente mais tarde.\");\r\n          return;\r\n        } else {\r\n          const successMessage = isTask ? \"Você conseguiu criar uma nova tarefa com sucesso!\" : \"Você conseguiu criar um novo evento com sucesso!\";\r\n          displaySuccess(successMessage);\r\n          setTimeout(() => {\r\n            navigation.goBack();\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        displayError(\"Erro ao adicionar. Tente novamente mais tarde.\");\r\n      });\r\n  };\r\n    \r\n  // Calcula o bloco para tarefas: \r\n  // Se a hora selecionada for entre 00:00 e 00:29, o bloco será do horário selecionado até 30 minutos depois;\r\n  // Caso contrário, será das 30 minutos antes até o horário selecionado.\r\n  let taskBlockStart = new Date(startDate);\r\n  let taskBlockEnd = new Date(startDate);\r\n  if (isTask) {\r\n    const selectedHour = startTime.getHours();\r\n    const selectedMinutes = startTime.getMinutes();\r\n    // Define a hora selecionada\r\n    taskBlockEnd.setHours(selectedHour, selectedMinutes, 0, 0);\r\n    if (selectedHour === 0 && selectedMinutes < 30) {\r\n      // Bloco de 30 minutos para baixo\r\n      taskBlockStart = new Date(taskBlockEnd.getTime());\r\n      taskBlockEnd = new Date(taskBlockEnd.getTime() + 30 * 60000);\r\n    } else {\r\n      // Bloco de 30 minutos antes\r\n      taskBlockStart = new Date(taskBlockEnd.getTime() - 30 * 60000);\r\n    }\r\n  }\r\n  \r\n  // Define os eventos do dia para o calendário\r\n  const dayEvents = [\r\n    {\r\n      // Concatena o título com o horário selecionado\r\n      title: `${newEvent.title} - ${formatTime(startTime)}`,\r\n      start: isTask\r\n        ? taskBlockStart\r\n        : new Date(\r\n            startDate.getFullYear(),\r\n            startDate.getMonth(),\r\n            startDate.getDate(),\r\n            startTime.getHours(),\r\n            startTime.getMinutes()\r\n          ),\r\n      end: isTask\r\n        ? taskBlockEnd\r\n        : new Date(\r\n            endDate.getFullYear(),\r\n            endDate.getMonth(),\r\n            endDate.getDate(),\r\n            endTime.getHours(),\r\n            endTime.getMinutes()\r\n          ),\r\n      color: selectedColor\r\n    }\r\n  ];  \r\n\r\n  const dynamicTextColor = userTheme === \"dark\" ? \"#e0dede\" : \"#000\";\r\n  if (loading) { \r\n    return (\r\n      <ImageBackground\r\n        source={\r\n          backgroundUrl\r\n            ? { uri: backgroundUrl }\r\n            : require(\"../../assets/images/bg1.jpg\")\r\n        }\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userTheme === \"dark\" && (\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              zIndex: 1,\r\n            }}\r\n          />\r\n        )}\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <ActivityIndicator size=\"large\" color={\"#47AD4D\"} />\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  if (showPreview) {\r\n    return (\r\n      <ImageBackground source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")} style={styles.background}>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n                    paddingHorizontal: 10,\r\n                    paddingBottom: 10,\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    zIndex: 10,\r\n                    backgroundColor: \"white\",\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: \"#ddd\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      navigation.goBack();\r\n                    }}\r\n                    style={{ flex: 1 }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../../assets/icons/angle-left.png\")}\r\n                      style={{\r\n                        width: Platform.OS === \"web\" ? 35 : 23,\r\n                        height: Platform.OS === \"web\" ? 35 : 25,\r\n                        marginLeft: 3,\r\n                        marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                        tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                    <Image\r\n                      source={require(\"../../assets/icons/user.png\")}\r\n                      style={{\r\n                        width: Platform.OS === \"web\" ? 30 : 25,\r\n                        height: Platform.OS === \"web\" ? 30 : 25,\r\n                        marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                        tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n            <BigCalendar\r\n              date={startDate}\r\n              events={dayEvents}\r\n              height={500}\r\n              mode={getCalendarMode(startDate, isTask ? startDate : endDate, isTask)}\r\n              swipeEnabled={true}\r\n              showTime={false}\r\n              eventCellStyle={(event) => (event.color ? { backgroundColor: event.color } : {})}\r\n            />\r\n            <View style={styles.previewDetails}>\r\n              <Text style={styles.previewText}>Título: {newEvent.title}</Text>\r\n              {isTask ? (\r\n                <Text style={styles.previewText}>\r\n                  Data da Tarefa: {formatDate(startDate)} às {formatTime(startTime)}\r\n                </Text>\r\n              ) : (\r\n                <>\r\n                  <Text style={styles.previewText}>\r\n                    Início: {formatDate(startDate)} às {formatTime(startTime)}\r\n                  </Text>\r\n                  <Text style={styles.previewText}>\r\n                    Fim: {formatDate(endDate)} às {formatTime(endTime)}\r\n                  </Text>\r\n                </>\r\n              )}\r\n              <Text style={styles.previewText}>\r\n                Turmas Selecionadas:{\" \"}\r\n                {selectedTurmas.map((t, index) => (\r\n                  <Text key={index}>\r\n                    {t.ano} - {t.turma}\r\n                    {index < selectedTurmas.length - 1 ? \", \" : \"\"}\r\n                  </Text>\r\n                ))}\r\n              </Text>\r\n              <Text style={styles.previewText}>\r\n                Categoria: {selectedCategory === \"Outro\" ? customCategory : selectedCategory}\r\n              </Text>\r\n              <Text style={styles.previewText}>Tipo: {selectedType}</Text>\r\n              <View style={styles.selectedColorDisplay}>\r\n                <View style={[styles.colorCircle, { backgroundColor: selectedColor }]} />\r\n                <Text style={styles.previewText}>Cor Selecionada</Text>\r\n              </View>\r\n            </View>\r\n            {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n            <Button mode=\"contained\" onPress={handleCreateEventOrTask} style={[styles.button, { backgroundColor: \"#47AD4D\" }]}>\r\n              Confirmar\r\n            </Button>\r\n            <Button mode=\"contained\" onPress={() => setShowPreview(false)} style={[styles.button, { backgroundColor: \"red\", marginTop: 10 }]}>\r\n              Editar\r\n            </Button>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n\r\n  // Tela de formulário\r\n  return (\r\n    <ImageBackground\r\n      source={backgroundUrl ? { uri: backgroundUrl } : require(\"../../assets/images/bg1.jpg\")}\r\n      style={styles.background} \r\n    >\r\n      <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  paddingTop: Platform.OS === \"web\" ? 40 : (StatusBar.currentHeight || 20),\r\n                  paddingHorizontal: 10,\r\n                  paddingBottom: 10,\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  zIndex: 10,\r\n                  backgroundColor: \"white\",\r\n                }}\r\n              >\r\n                <TouchableOpacity onPress={() => navigation.goBack()} style={{ flex: 1 }}>\r\n                  <Image\r\n                    source={require(\"../../assets/icons/angle-left.png\")}\r\n                    style={{\r\n                      width: Platform.OS === \"web\" ? 35 : 23,\r\n                      height: Platform.OS === \"web\" ? 35 : 25,\r\n                      marginLeft: 3,\r\n                      marginTop: Platform.OS === \"web\" ? -15 : 3,\r\n                      tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => setAccountModalVisible(true)} style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/icons/user.png\")}\r\n                    style={{\r\n                      width: Platform.OS === \"web\" ? 30 : 25,\r\n                      height: Platform.OS === \"web\" ? 30 : 25,\r\n                      marginTop: Platform.OS === \"web\" ? -5 : 3,\r\n                      tintColor: userTheme === \"dark\" ? \"#FFFFFF\" : \"#000\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.formContainer}>\r\n          {turmas.length === 0 && (\r\n            <Text style={styles.infoText}>\r\n              Nenhuma turma encontrada para si. Por favor, pedimos que tente mais tarde, ou peça para ter uma turma.\r\n            </Text>\r\n          )}\r\n          <ScrollView style={styles.innerScroll} contentContainerStyle={{ paddingBottom: 100 }} nestedScrollEnabled>\r\n            <View style={[styles.inputGroup, fieldErrors.category && styles.errorBorder]}>\r\n              <Picker\r\n                selectedValue={selectedCategory}\r\n                onValueChange={(itemValue) => {\r\n                  setSelectedCategory(itemValue);\r\n                  if (itemValue !== \"Outro\") setCustomCategory(\"\");\r\n                  setSelectedType(\"\");\r\n                }}\r\n                style={styles.picker}\r\n              >\r\n                <Picker.Item label=\"Selecione a categoria\" value=\"\" />\r\n                <Picker.Item label=\"Teste\" value=\"Teste\" />\r\n                <Picker.Item label=\"Trabalho de casa\" value=\"Trabalho de casa\" />\r\n                <Picker.Item label=\"Atividade\" value=\"Atividade\" />\r\n                <Picker.Item label=\"Visita de estudo\" value=\"Visita de estudo\" />\r\n                <Picker.Item label=\"Outro\" value=\"Outro\" />\r\n              </Picker>\r\n            </View>\r\n            {selectedCategory !== \"\" && (\r\n              <>\r\n                {selectedCategory === \"Outro\" && (\r\n                  <View style={[styles.inputGroup, fieldErrors.customCategory && styles.errorBorder]}>\r\n                    <TextInput\r\n                      label=\"Categoria personalizada *\"\r\n                      value={customCategory}\r\n                      onChangeText={(text) => setCustomCategory(text)}\r\n                      mode=\"outlined\"\r\n                      error={!!fieldErrors.customCategory}\r\n                      style={styles.input}\r\n                      theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                    />\r\n                  </View>\r\n                )}\r\n                <View style={[styles.inputGroup, fieldErrors.type && styles.errorBorder]}>\r\n                  <Picker\r\n                    selectedValue={selectedType}\r\n                    onValueChange={(itemValue) => setSelectedType(itemValue)}\r\n                    style={styles.picker}\r\n                  >\r\n                    <Picker.Item label=\"Evento\" value=\"evento\" />\r\n                    <Picker.Item label=\"Tarefa\" value=\"Tarefa\" />\r\n                  </Picker>\r\n                </View>\r\n                <View style={styles.inputGroup}>\r\n                  <TouchableOpacity onPress={() => setShowColorModal(true)} style={styles.selectedColorDisplay}>\r\n                    <View style={[styles.colorCircle, { backgroundColor: selectedColor }]} />\r\n                    <Text style={styles.colorText}>Cor Selecionada</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                <TextInput\r\n                  label=\"Título *\"\r\n                  value={newEvent.title}\r\n                  onChangeText={(text) => setNewEvent({ ...newEvent, title: text })}\r\n                  mode=\"outlined\"\r\n                  error={!!fieldErrors.title}\r\n                  style={styles.input}\r\n                  theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                />\r\n                <View style={styles.inputGroup}>\r\n                  <TextInput\r\n                    label=\"Descrição\"\r\n                    value={newEvent.description}\r\n                    onChangeText={(text) => setNewEvent({ ...newEvent, description: text })}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                  />\r\n                </View>\r\n              </>\r\n            )}\r\n            \r\n            {/* Campos de Data/Hora */}\r\n            <View style={styles.inputGroup}>\r\n              <TextInput\r\n                label={isTask ? \"Data da Tarefa *\" : \"Data de Início *\"}\r\n                value={formatDate(startDate)}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                editable={false}\r\n                onPressIn={() => setShowStartDatePicker(true)}\r\n                right={ <TextInput.Icon\r\n                  onPress={() => setShowStartDatePicker(true)}\r\n                  icon={() => <MaterialCommunityIcons name=\"calendar\" size={24} onPress={() => setShowStartDatePicker(true)}/>}\r\n                />}\r\n                theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n              />\r\n              {showStartDatePicker && (\r\n                <DateTimePicker\r\n                  value={startDate}\r\n                  mode=\"date\"\r\n                  display={Platform.OS === \"ios\" ? \"spinner\" : \"calendar\"}\r\n                  onChange={onChangeStartDate}\r\n                />\r\n              )}\r\n            </View>\r\n            <View style={styles.inputGroup}>\r\n              <TextInput\r\n                label={isTask ? \"Hora da Tarefa *\" : \"Hora de Início *\"}\r\n                value={formatTime(startTime)}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                editable={false}\r\n                onPressIn={() => setShowStartTimePicker(true)}\r\n                right={<TextInput.Icon icon={() => <MaterialCommunityIcons name=\"clock\" size={24} />} onPress={() => setShowStartTimePicker(true)} />}\r\n                theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n              />\r\n              {showStartTimePicker && (\r\n                <DateTimePicker\r\n                  value={startTime}\r\n                  mode=\"time\"\r\n                  display={Platform.OS === \"ios\" ? \"spinner\" : \"clock\"}\r\n                  is24Hour={true}\r\n                  onChange={onChangeStartTime}\r\n                />\r\n              )}\r\n            </View>\r\n            {!isTask && (\r\n              <>\r\n                <View style={styles.inputGroup}>\r\n                  <TextInput\r\n                    label=\"Data de Fim *\"\r\n                    value={formatDate(endDate)}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    editable={false}\r\n                    onPressIn={() => setShowEndDatePicker(true)}\r\n                    right={ <TextInput.Icon\r\n                      onPress={() => setShowStartDatePicker(true)}\r\n                      icon={() => <MaterialCommunityIcons name=\"calendar\" size={24} onPress={() => setShowEndDatePicker(true)}/>}\r\n                    />}\r\n                    theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                  />\r\n                  {showEndDatePicker && (\r\n                    <DateTimePicker\r\n                      value={endDate}\r\n                      mode=\"date\"\r\n                      display={Platform.OS === \"ios\" ? \"spinner\" : \"calendar\"}\r\n                      onChange={onChangeEndDate}\r\n                    />\r\n                  )}\r\n                </View>\r\n                <View style={styles.inputGroup}>\r\n                  <TextInput\r\n                    label=\"Hora de Fim *\"\r\n                    value={formatTime(endTime)}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    editable={false}\r\n                    onPressIn={() => setShowEndTimePicker(true)}\r\n                    right={<TextInput.Icon icon={() => <MaterialCommunityIcons name=\"clock\" size={24} />} onPress={() => setShowEndTimePicker(true)} />}\r\n                    theme={{ colors: { text: \"#000\", primary: \"#47AD4D\", placeholder: \"#000\" } }}\r\n                  />\r\n                  {showEndTimePicker && (\r\n                    <DateTimePicker\r\n                      value={endTime}\r\n                      mode=\"time\"\r\n                      display={Platform.OS === \"ios\" ? \"spinner\" : \"clock\"}\r\n                      is24Hour={true}\r\n                      onChange={onChangeEndTime}\r\n                    />\r\n                  )}\r\n                </View>\r\n              </>\r\n            )}\r\n            {selectedTurmas.length > 0 && (\r\n              <View style={styles.inputGroup}>\r\n                <Text style={styles.label}>Turmas Selecionadas:</Text>\r\n                {selectedTurmas.map((turma, index) => (\r\n                  <View key={index} style={styles.selectedTurmaRow}>\r\n                    <Text>{turma.ano} - {turma.turma}</Text>\r\n                    <IconButton\r\n                      icon=\"close\"\r\n                      size={20}\r\n                      onPress={() => toggleTurma(turma)}\r\n                    />\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            )}\r\n            <Button\r\n              mode=\"outlined\"\r\n              onPress={() => setShowTurmaModal(true)}\r\n              style={styles.addTurmaButton}\r\n              labelStyle={{ color: \"#47AD4D\" }}\r\n            >\r\n              + Adicionar turma\r\n            </Button>\r\n            {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n            {success ? <Text style={styles.successText}>{success}</Text> : null}\r\n            <Button mode=\"contained\" onPress={handlePreview} style={[styles.button, { backgroundColor: \"#47AD4D\" }]}>\r\n              Visualizar Preview\r\n            </Button>\r\n          </ScrollView>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Modal de Seleção de Turmas */}\r\n      <Modal visible={showTurmaModal} onRequestClose={() => setShowTurmaModal(false)} animationType=\"slide\" transparent>\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContainer}>\r\n            <Text style={styles.modalTitle}>Selecione uma Turma</Text>\r\n            {turmas.length === 0 ? (\r\n              <Text style={styles.infoText}>Não há turmas disponíveis para este professor.</Text>\r\n            ) : (\r\n              <ScrollView>\r\n                {turmas.map((turma, index) => (\r\n                  <TouchableOpacity \r\n                    key={index} \r\n                    style={styles.turmaRow} \r\n                    onPress={() => {\r\n                      toggleTurma(turma);\r\n                      setShowTurmaModal(false);\r\n                    }}\r\n                  >\r\n                    <Text>{turma.ano} - {turma.turma}</Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </ScrollView>\r\n            )}\r\n            <Button mode=\"contained\" onPress={() => setShowTurmaModal(false)} style={styles.modalCloseButton}>\r\n              Fechar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      {/* Modal de Seleção de Cor */}\r\n      <Modal visible={showColorModal} animationType=\"slide\" transparent>\r\n        <View style={styles.colorModalOverlay}>\r\n          <View style={styles.colorModalContainer}>\r\n            <Text style={[styles.modalTitle, { color: \"#000\" }]}>Selecionar Cor</Text>\r\n            {colorOptions.map((opt) => (\r\n              <TouchableOpacity\r\n                key={opt.value}\r\n                style={styles.colorOptionRow}\r\n                onPress={() => {\r\n                  setSelectedColor(opt.value);\r\n                  setShowColorModal(false);\r\n                }}\r\n              >\r\n                <View style={[styles.colorCircle, { backgroundColor: opt.value }]} />\r\n                <Text style={[styles.colorName, { color: \"#000\" }]}>{opt.name}</Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n            <Button mode=\"contained\" onPress={() => setShowColorModal(false)} style={styles.modalCloseButton}>\r\n              Fechar\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n        <Modal\r\n          visible={showNoTurmasModal}\r\n          animationType=\"fade\"\r\n          transparent\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: 'rgba(0,0,0,0.5)',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: '80%',\r\n                backgroundColor: userTheme === 'dark' ? '#333' : '#fff',\r\n                padding: 20,\r\n                borderRadius: 8,\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              {/* Bolinha a girar */}\r\n              <ActivityIndicator\r\n                size=\"large\"\r\n                color=\"#47AD4D\"\r\n                style={{ marginBottom: 16 }}\r\n              />\r\n\r\n              {/* Texto de aviso */}\r\n              <Text\r\n                style={{\r\n                  fontSize: 16,\r\n                  textAlign: 'center',\r\n                  marginBottom: 24,\r\n                  color: dynamicTextColor,\r\n                }}\r\n              >\r\n                Não é possível criar nenhum evento porque não foram encontradas turmas.\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                {/* Tentar novamente: fecha o modal */}\r\n                <TouchableOpacity\r\n                  onPress={() => setShowTurmaModal(false)}\r\n                  style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#47AD4D',\r\n                    paddingVertical: 10,\r\n                    borderRadius: 6,\r\n                    alignItems: 'center',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: '#fff', fontWeight: 'bold' }}>\r\n                    Tentar novamente\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                {/* Ícone voltar: faz goBack */}\r\n                <TouchableOpacity\r\n                  onPress={() => navigation.goBack()}\r\n                  style={{\r\n                    padding: 10,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Image\r\n                    source={require('../../assets/icons/angle-left.png')}\r\n                    style={{\r\n                      width: 24,\r\n                      height: 24,\r\n                      tintColor: '#47AD4D',\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      <ModalConfig\r\n        visible={accountModalVisible}\r\n        dynamicHeaderBackground=\"white\"\r\n        dynamicTextColor=\"black\"\r\n        onClose={() => setAccountModalVisible(false)}\r\n        navigation={navigation}\r\n        email={email}\r\n      />\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingText: { marginTop: 16, fontSize: 16, color: \"#000\", textAlign: \"center\" },\r\n  background: { flex: 1 },\r\n  scrollContainer: { flexGrow: 1, padding: 5, marginTop: 70, paddingBottom: 100 },\r\n  formContainer: { flex: 1, alignSelf: \"stretch\" },\r\n  innerScroll: { flexGrow: 1 },\r\n  previewContainer: { flex: 1 },\r\n  previewDetails: { marginVertical: 15 },\r\n  previewText: { fontSize: 16, marginVertical: 2, color: \"#000\" },\r\n  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15, textAlign: \"center\" },\r\n  input: { marginBottom: 15, backgroundColor: \"#f5f5f5\", color: \"#000\", borderRadius: 8, paddingHorizontal: 10 },\r\n  inputGroup: { marginBottom: 10 },\r\n  picker: { backgroundColor: \"#f5f5f5\", color: \"#000\" },\r\n  label: { marginBottom: 5, fontWeight: \"bold\" },\r\n  button: { borderRadius: 8 },\r\n  errorText: { color: \"red\", textAlign: \"center\", marginBottom: 10 },\r\n  successText: { color: \"green\", textAlign: \"center\", marginBottom: 10 },\r\n  infoText: { color: \"red\", textAlign: \"center\", marginBottom: 10 },\r\n  loaderContainer: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n  colorModalOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  colorModalContainer: { width: \"80%\", backgroundColor: \"#fff\", borderRadius: 10, padding: 20 },\r\n  modalOverlay: { flex: 1, backgroundColor: \"rgba(0,0,0,0.5)\", justifyContent: \"center\", alignItems: \"center\" },\r\n  modalContainer: { width: \"80%\", backgroundColor: \"#fff\", borderRadius: 10, padding: 20, maxHeight: \"80%\" },\r\n  modalTitle: { fontSize: 18, fontWeight: \"bold\", marginBottom: 15, textAlign: \"center\" },\r\n  colorOptionRow: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 10 },\r\n  colorCircle: { width: 30, height: 30, borderRadius: 15, marginRight: 10 },\r\n  colorName: { fontSize: 16 },\r\n  modalCloseButton: { backgroundColor: \"#47AD4D\", marginTop: 10 },\r\n  selectedColorDisplay: { flexDirection: \"row\", alignItems: \"center\", marginTop: 10 },\r\n  colorText: { fontSize: 16, color: \"#47AD4D\" },\r\n  backButton: { alignSelf: \"flex-start\" },\r\n  errorBorder: { borderWidth: 1, borderColor: \"red\", borderRadius: 8, marginBottom: 10 },\r\n  turmaRow: { flexDirection: \"row\", alignItems: \"center\", paddingVertical: 5 },\r\n  selectedTurmaRow: { flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", borderWidth: 1, borderColor: \"#ccc\", padding: 8, borderRadius: 8, marginVertical: 3 },\r\n  addTurmaButton: { borderRadius: 8, marginVertical: 10 },\r\n  noTurmaOverlay: { \r\n    flex: 1, \r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\", \r\n    justifyContent: \"center\", \r\n    alignItems: \"center\" \r\n  },\r\n  noTurmaModal: { \r\n    width: \"80%\", \r\n    backgroundColor: \"#fff\", \r\n    borderRadius: 10, \r\n    padding: 20, \r\n    alignItems: \"center\" \r\n  },\r\n  noTurmaText: { \r\n    fontSize: 16, \r\n    textAlign: \"center\", \r\n    marginBottom: 20 \r\n  },\r\n  noTurmaButton: { \r\n    backgroundColor: \"#47AD4D\" \r\n  }\r\n});\r\n\r\nexport default AddEventsScreenWeb;","import React, { useState, useEffect } from \"react\";\r\nimport { Platform, ActivityIndicator, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport config from \"./config/config_db\";\r\nimport { ThemeProvider } from \"./context/themeContext\";\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n    shouldShowBanner: true,\r\n    shouldShowList: true,\r\n  }),\r\n});\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n// Importação das telas\r\nimport AdministradorScreen from \"./screens/admin/AdministradorScreen\";\r\nimport suggestionsScreen from \"./screens/admin/suggestionsScreen\";\r\nimport AlunoScreen from \"./screens/aluno/AlunoScreen\";\r\nimport ProfessorScreen from \"./screens/professor/ProfessorScreen\";\r\nimport LoginLayout from \"./screens/login/LoginScreen\";\r\nimport PutPasswordScreen from \"./screens/signIn/PutPasswordScreen\";\r\nimport SignInScreen from \"./screens/signIn/SignInScreen\";\r\nimport VerifyCodeScreen from \"./screens/signIn/VerifyCodeScreen\";\r\nimport ThemeScreen from \"./screens/MenuAluno/Configuracoes/temaScreen\";\r\nimport PersonalDataScreen from \"./screens/MenuAluno/Configuracoes/dadosPessoaisScreen\";\r\nimport sugestAnythingScreen from \"./screens/MenuAluno/Configuracoes/sugestAnythingScreen\";\r\nimport PasswordSecurityScreen from \"./screens/MenuAluno/Configuracoes/passwordESegurancaScreen\";\r\nimport NotasScreen from \"./screens/MenuAluno/Menu/NotasScreen\";\r\nimport AlmocosScreen from \"./screens/MenuAluno/Menu/AlmocosScreen\";\r\nimport HorariosScreen from \"./screens/MenuAluno/Menu/HorariosScreen\";\r\nimport entradasEsaidas from \"./screens/MenuAluno/Menu/entradasEsaidas\";\r\nimport AddEventsScreen from \"./screens/MenuProf/adicionarEventosOrTasks\";\r\nimport AdicionarNotasScreen from \"./screens/MenuProf/adicionarNotas\";\r\nimport PersonalizarTarefaScreen from \"./screens/MenuAluno/tarefas/eventosETarefas\";\r\nimport QRCodeScannerScreen from \"./screens/aluno/qrcodeScanner\";\r\nimport PersonalizarTaskOuEventProfScreen from \"./screens/MenuProf/personalizar_tarefaOuEvento\";\r\nimport InsertPassword from \"./screens/login/InsertPasswordScreen\";\r\nimport VerificationScreen from \"./screens/login/VerificationScreen\";\r\nimport PutNewPassForgetPassword from \"./screens/forgetPass/PutNewPassForgetPassword\";\r\nimport VerifyCodeForgetPassword from \"./screens/forgetPass/VerifiyCodeForgetPassword\";\r\nimport ForgetPasswordScreen from \"./screens/forgetPass/ForgetPasswordScreen\";\r\nimport GenerateQRCodeScreen from \"./screens/aluno/createQrCode\";\r\nimport PutCalendar from \"./screens/admin/adminPutFiles\";\r\nimport auxiliarScreen from \"./screens/auxiliar/auxiliarScreen\";\r\nimport alunosDoProfScreen from \"./screens/MenuProf/alunosDoProfScreen\";\r\nimport almocoProfScreen from \"./screens/MenuProf/almocosProfScreen\";\r\nimport disciplinasAluno from \"./screens/MenuAluno/Menu/disciplinasAluno\";\r\nimport NotasDisciplina from \"./screens/MenuAluno/Menu/NotasDisciplina\";\r\nimport auxiliarEstatisticas from \"./screens/auxiliar/auxiliarEstatisticas\";\r\nimport confirmacoesScreen from \"./screens/admin/confirmacoesScreen\";\r\nimport SelectTurma from \"./screens/signIn/SelectTurma\";\r\nimport AddEventsScreenWeb from \"./screens/MenuProf/adicionarEventosOrTasksWeb\";\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userToken, setUserToken] = useState<string | null>(null);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n  const [userEmail, setUserEmail] = useState<string | null>(null);\r\n  const [themeData, setThemeData] = useState({ theme: \"light\", background_url: \"\" });\r\n\r\n  const endpoint = `${config.baseUrl}/backgroundFiles/getThemeAndBackground.php`;\r\n\r\n  const fetchThemeAndBackground = async (email: string) => {\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const json = await response.json();\r\n      if (json.success) {\r\n        setThemeData({\r\n          theme: json.tema_user,\r\n          background_url: json.background_user,\r\n        });\r\n        console.log(\"Tema e background obtidos com sucesso:\", json);\r\n      } else {\r\n        console.error(\"Erro ao buscar tema/background:\", json.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro na requisição:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === \"android\") {\r\n      Notifications.setNotificationChannelAsync(\"default\", {\r\n        name: \"default\",\r\n        importance: Notifications.AndroidImportance.DEFAULT,\r\n      });\r\n    }\r\n\r\n    const checkToken = async () => {\r\n      try {\r\n        let token: string | null, role: string | null, email: string | null;\r\n        if (Platform.OS === \"web\") {\r\n          token = localStorage.getItem(\"userToken\");\r\n          role = localStorage.getItem(\"userRole\");\r\n          email = localStorage.getItem(\"email\");\r\n        } else {\r\n          token = await SecureStore.getItemAsync(\"userToken\");\r\n          role = await SecureStore.getItemAsync(\"userRole\");\r\n          email = await SecureStore.getItemAsync(\"email\");\r\n        }\r\n        setUserToken(token);\r\n        setUserRole(role);\r\n        setUserEmail(email);\r\n\r\n        if (email) {\r\n          await fetchThemeAndBackground(email);\r\n        } else {\r\n          console.warn(\"Nenhum email encontrado. Não foi possível buscar tema e background.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao recuperar dados do utilizador:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    checkToken();\r\n  }, []);\r\n\r\n  const initialRoute = userToken\r\n    ? userRole === \"aluno\"\r\n      ? \"Aluno\"\r\n      : userRole === \"professor\"\r\n      ? \"Professor\"\r\n      : userRole === \"admin\"\r\n      ? \"Administrador\"\r\n      : userRole === \"auxiliar\"\r\n      ? \"auxiliarScreen\"\r\n      : \"Login\"\r\n    : \"Login\";\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator initialRouteName={initialRoute} id={undefined} screenOptions={{ headerShown: false }}>\r\n          <Stack.Screen name=\"Login\" component={LoginLayout} />\r\n          <Stack.Screen name=\"Aluno\" component={AlunoScreen} initialParams={{ email: userEmail, theme: themeData.theme, backgroundUrl: themeData.background_url }} />\r\n          <Stack.Screen name=\"Professor\" component={ProfessorScreen} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"Administrador\" component={AdministradorScreen} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"SignIn\" component={SignInScreen} />\r\n          <Stack.Screen name=\"VerifyCode\" component={VerifyCodeScreen} />\r\n          <Stack.Screen name=\"PutPassword\" component={PutPasswordScreen} />\r\n          <Stack.Screen name=\"TemaScreen\" component={ThemeScreen} />\r\n          <Stack.Screen name=\"suggestionsScreen\" component={suggestionsScreen} />\r\n          <Stack.Screen name=\"PersonalDataScreen\" component={PersonalDataScreen} />\r\n          <Stack.Screen name=\"sugestAnythingScreen\" component={sugestAnythingScreen} />\r\n          <Stack.Screen name=\"PasswordSecurityScreen\" component={PasswordSecurityScreen} />\r\n          <Stack.Screen name=\"NotasScreen\" component={NotasScreen} />\r\n          <Stack.Screen name=\"AlmocosScreen\" component={AlmocosScreen} />\r\n          <Stack.Screen name=\"HorariosScreen\" component={HorariosScreen} />\r\n          <Stack.Screen name=\"entradasEsaidas\" component={entradasEsaidas} />\r\n          <Stack.Screen name=\"addEventListener\" component={AddEventsScreen} />\r\n          <Stack.Screen name=\"AddEventsScreenWeb\" component={AddEventsScreenWeb} />\r\n          <Stack.Screen name=\"AdicionarNotas\" component={AdicionarNotasScreen} />\r\n          <Stack.Screen name=\"PersonalizarTarefa\" component={PersonalizarTarefaScreen} />\r\n          <Stack.Screen name=\"QRCodeScannerScreen\" component={QRCodeScannerScreen} />\r\n          <Stack.Screen name=\"PersonalizarTarefaProf\" component={PersonalizarTaskOuEventProfScreen} />\r\n          <Stack.Screen name=\"InsertPasswordScreen\" component={InsertPassword} />\r\n          <Stack.Screen name=\"VerificationScreen\" component={VerificationScreen} />\r\n          <Stack.Screen name=\"PutNewPassForgetPassword\" component={PutNewPassForgetPassword} />\r\n          <Stack.Screen name=\"VerifyCodeForgetPassword\" component={VerifyCodeForgetPassword} />\r\n          <Stack.Screen name=\"ForgetPasswordScreen\" component={ForgetPasswordScreen} />\r\n          <Stack.Screen name=\"GenerateQRCodeScreen\" component={GenerateQRCodeScreen} />\r\n          <Stack.Screen name=\"PutCalendar\" component={PutCalendar} />\r\n          <Stack.Screen name=\"auxiliarScreen\" component={auxiliarScreen} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"alunosDoProfScreen\" component={alunosDoProfScreen} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"almocoProfScreen\" component={almocoProfScreen} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"disciplinasAluno\" component={disciplinasAluno} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"NotasDisciplina\" component={NotasDisciplina} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"auxiliarEstatisticas\" component={auxiliarEstatisticas} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"confirmacoesScreen\" component={confirmacoesScreen} initialParams={{ email: userEmail }} />\r\n          <Stack.Screen name=\"SelectTurma\" component={SelectTurma} initialParams={{ email: userEmail }} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;","import { registerRootComponent } from 'expo';\r\nimport 'react-native-gesture-handler';\r\nimport 'react-native-reanimated';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [829], () => (__webpack_require__(1363)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["baseUrl","styles","StyleSheet","create","modalOverlay","flex","backgroundColor","justifyContent","alignItems","modalContent","width","height","padding","borderTopLeftRadius","borderBottomLeftRadius","alignSelf","modalTitle","fontSize","fontWeight","marginBottom","modalOption","paddingVertical","modalOptionText","separator","marginVertical","logoutButton","marginTop","borderRadius","logoutButtonText","color","ModalConfig","visible","dynamicHeaderBackground","dynamicTextColor","onClose","navigation","email","loadingLogout","setLoadingLogout","useState","userRole","setUserRole","useEffect","role","localStorage","getItem","_jsx","Modal","animationType","transparent","onRequestClose","children","TouchableOpacity","style","activeOpacity","onPressOut","_jsxs","View","Text","onPress","openPersonalData","navigate","disabled","goToPasswordSecurity","goPersonalize","suggestionsScreen","sugestAnything","ActivityIndicator","size","async","token","axios","post","config","headers","removeItem","replace","scrollViewDisciplinas","maxHeight","scrollViewTurmas","bgImage","indicadorContainer","darkOverlay","position","top","left","right","bottom","headerFixed","flexDirection","paddingTop","StatusBar","currentHeight","paddingHorizontal","paddingBottom","zIndex","botaoMenu","menuIcon","marginLeft","plusButton","newDisciplinaContainer","newDisciplinaInput","marginRight","newDisciplinaButton","botaoConta","userIcon","fixedBox","scrollContainer","webContainer","mobileContainer","leftColumn","paddingRight","rightColumn","paddingLeft","rotulo","grupoRadio","campoInput","botaoCriar","loadingContainer","loadingText","grelhaTurmas","flexWrap","botaoTurma","borderWidth","borderColor","botaoTurmaSelecionada","textoTurma","textoTurmaSelecionada","containerTurmas","rotuloTurmas","textoTurmas","turmasSelecionadas","scrollViewFixed","toastContainer","toastText","toastSuccess","toastError","webErrorOverlay","webErrorText","textAlign","overlay","sideMenu","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","menuItem","borderBottomWidth","borderBottomColor","menuText","CriarUtilizadorScreen","route","theme","useTheme","url","url_getDisciplinas","url_getTurmas","url_createTurma","turmasList","setTurmasList","anosList","setAnosList","turmasByAno","setTurmasByAno","showNewTurma","setShowNewTurma","newTurmaAno","setNewTurmaAno","newTurmaLetra","setNewTurmaLetra","creatingTurma","setCreatingTurma","emailLocal","setEmailLocal","cargo","setCargo","carregando","setCarregando","menuVisivel","setMenuVisivel","modalContaVisivel","setModalContaVisivel","backgroundUrl","setBackgroundUrl","userTheme","setUserTheme","dark","loading","setLoading","anoAluno","setAnoAluno","turmaAluno","setTurmaAluno","disciplinaSelecionada","setDisciplinaSelecionada","disciplinasList","setDisciplinasList","anoProfessorSelecionado","setAnoProfessorSelecionado","turmasProfessor","setTurmasProfessor","showNewDisciplinaInput","setShowNewDisciplinaInput","newDisciplina","setNewDisciplina","creatingDisciplina","setCreatingDisciplina","toast","setToast","message","type","infoVisible","setInfoVisible","authEmail","setAuthEmail","boxBackground","inputBackground","params","fetch","then","text","res","console","log","JSON","parse","dados","success","turmas","anos","Array","from","Set","map","t","ano","sort","a","b","Number","n","toString","agrup","forEach","push","showToast","catch","handleCreateTurma","trim","some","turma","toUpperCase","method","body","stringify","json","prev","includes","anoKey","arr","Object","assign","salvarDisabled","renderAlunoFields","_Fragment","length","RadioButton","Group","onValueChange","value","id","Ionicons","name","Portal","Dialog","onDismiss","marginHorizontal","colors","surface","Title","Content","TextInput","mode","placeholder","onChangeText","maxLength","primary","background","Actions","Button","labelStyle","opacity","setTimeout","window","alert","bg","startsWith","err","error","loadSettings","buscarDisciplinas","controller","AbortController","timeoutId","abort","resposta","signal","clearTimeout","ok","Error","status","disciplinas","erro","criarUtilizador","keys","endpoint","admin","professor","aluno","auxiliar","fullEmail","payload","cargoUtilizador","disciplina","txt","handleCreateNewDisciplina","nomeDisciplina","professorId","novaDisciplinaObj","disciplinaId","podeSalvarDisciplina","salvarTurmaDisabled","renderProfessorFields","ScrollView","contentContainerStyle","nestedScrollEnabled","scrollEnabled","keyboardShouldPersistTaps","d","selecionada","Pressable","alternarTurmaProfessor","currentYear","currentTurmas","newTurmas","filter","entries","isArray","join","renderContent","margin","Image","source","require","tintColor","label","keyboardType","Affix","onSurfaceVariant","ImageBackground","uri","translucent","barStyle","TouchableWithoutFeedback","Paragraph","safe","header","icon","card","msgTitle","msgDate","msgBody","responseInput","minHeight","saveButton","SuggestionsResponseScreen","useNavigation","useRoute","responderEmail","unanswered","setUnanswered","loadingList","setLoadingList","responses","setResponses","saving","setSaving","fetchUnanswered","get","data","Alert","resizeMode","SafeAreaView","confirmBack","confirm","FlatList","keyExtractor","i","renderItem","item","date_sent","multiline","Divider","ListFooterComponent","resp","response","responder","palette","light","title","box","iconColor","defaultColors","pickerSelectStyles","inputIOS","inputAndroid","configModalContainer","configHeader","warningText","fieldContainer","fieldLabel","fieldValue","editableBox","selectedColorDisplay","colorCircle","notificationRow","spinnerContainer","spinnerInput","spinnerButtons","stepButton","stepButtonText","addTimeButton","colorModalOverlay","colorModalContainer","colorOptionRow","colorName","modalCloseButton","absoluteFillObject","safeContainer","loaderContainer","maxWidth","todoIcon","accountIcon","headerButtons","container","calendarBox","badge","badgeText","eventRectangle","eventRectangleText","dayModalContainer","dayModalHeader","dayModalTitle","fullScreenModal","calendarContainer","bigCalendarContainer","selectedDatesScroll","selectedDatesContainer","selectedDateItem","selectedDateText","configHeaderTitle","input","menuOverlay","menuContent","borderTopRightRadius","borderBottomRightRadius","menuTitle","menuLink","backButton","AlunoScreen","url_searchEvents","url_fetchTasksData","url_saveUserEvents","url_saveUserTasks","Dimensions","formData","setFormData","aluno_id","bigCalendarEvents","setBigCalendarEvents","tasks","setTasks","menuModalVisible","setMenuModalVisible","accountModalVisible","setAccountModalVisible","dayModalVisible","setDayModalVisible","selectedDay","setSelectedDay","selectedTask","setSelectedTask","selectedEvent","setSelectedEvent","notifications","setNotifications","taskColor","setTaskColor","showColorModal","setShowColorModal","refreshing","setRefreshing","fetchTasks","fetchEvents","backgroundPath","useCallback","newEvents","event","startDateStr","startTimeStr","start_datetime","split","endDateStr","endTimeStr","end_datetime","year","month","day","startHour","startMinute","endHour","endMinute","startDate","Date","parseInt","endDate","start","end","cores","descricao","handleCalendarEventPress","isTask","taskDetails","taskEvents","task","taskTime","data_da_tarefa","getTime","titulo","cor","combinedEvents","dayEvents","ev","toDateString","formatDate","date","getDate","padStart","getMonth","getFullYear","getHours","getMinutes","updateEventConfig","notification_times","notif","total","timeValue","unit","event_id","notificacao_tipo","updateTaskConfig","tarefa_id","incrementTime","index","copy","decrementTime","handleAddNotificationRow","alertType","getUnitLabel","textColor","refreshControl","RefreshControl","onRefresh","BigCalendar","events","swipeEnabled","weekStartsOn","showTime","onPressCell","onPressEvent","calendarContainerStyle","renderEvent","numberOfLines","flexGrow","eventCellStyle","professor_email","minWidth","RNPickerSelect","items","useNativeAndroidPickerStyle","borderRightWidth","String","num","isNaN","onBlur","_","overflow","find","opt","modalBg","mobileModalBox","webModalBox","editButton","buttonsRow","saveButtonSmall","deleteButtonSmall","summaryContainer","summaryRow","summaryLabel","summaryValue","dayHeader","eventItem","eventTitle","eventTime","noEventsText","fontStyle","closeButton","closeIcon","webInput","fab","transform","translateX","plusButtonContainer","plusIcon","accontIcon","loaderOverlay","badgeOnListCheck","backIcon","nonEditableInput","inputContainer","colorSelector","saveButtonText","deleteButton","deleteButtonText","confirmationOverlay","confirmationContainer","confirmationText","confirmationButtons","cancelButton","confirmButton","previewOverlay","previewContainer","previewImage","previewText","previewButtons","ProfessorScreen","url_deleteTask","url_deleteEvent","url_updateTask","url_updateEvent","url_fetchTurmas","userThemeLocal","setUserThemeLocal","confirmationModalVisible","setConfirmationModalVisible","updateConfirmModalVisible","setUpdateConfirmModalVisible","selectedItem","setSelectedItem","detailModalVisible","setDetailModalVisible","isEditing","setIsEditing","editedTitle","setEditedTitle","editedDescricao","setEditedDescricao","editedDataTarefa","setEditedDataTarefa","editedStart","setEditedStart","editedEnd","setEditedEnd","showDatePicker","setShowDatePicker","datePickerMode","setDatePickerMode","datePickerTarget","setDatePickerTarget","setTurmas","editedTurmaId","setEditedTurmaId","editedFile","setEditedFile","filePreviewModalVisible","setFilePreviewModalVisible","useRef","previewFile","setPreviewFile","turma_id","fetchTurmas","handleDeleteItem","rawDate","handleUpdate","FormData","append","formatDateTime","pad","toLocaleDateString","toLocaleTimeString","hour","minute","renderDetailModal","boxStyle","toISOString","slice","onChange","e","y","m","target","dt","setFullYear","h","min","setHours","Picker","selectedValue","val","Item","toLocaleString","match","headerRow","infoIcon","loginButton","signInButton","link","iconStyle","webDialog","webScroll","LoginScreen","loginUrl","sendCodeUrl","setEmail","password","setPassword","deviceType","isPasswordVisible","setIsPasswordVisible","errorMessage","setErrorMessage","setMessage","togglePasswordVisibility","displayError","msg","wallpaperImage","timer","KeyboardAvoidingView","behavior","variant","placeholderTextColor","secureTextEntry","Icon","endsWith","setItem","estado","HelperText","toastBox","UserDetailsPassword","initialMessage","url_password","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setError","setSuccess","isConfirmPasswordVisible","setIsConfirmPasswordVisible","outlineColor","activeOutlineColor","registrarButton","successText","errorText","SignInScreen","url_sendEmail","successMessage","setSuccessMessage","verifyButton","VerifyCodeScreen","url_validateCode","code","resendCooldown","setResendCooldown","setInterval","clearInterval","handleChange","result","Background","ThemeToggle","onToggle","currentTheme","dynamicSwitchTrackColor","false","true","Switch","thumbColor","trackColor","modal","subtitle","thumbnailsContainer","thumbnailWrapper","selectedWrapper","thumbnail","buttonRow","storeItem","key","defaultImages","path","button","buttonText","loadingWrapper","loadingDark","loadingLight","defaultImagesContainer","defaultImage","previewButtonsContainer","cancelButtonText","ThemeScreen","setCurrentTheme","modalVisible","setModalVisible","setPreviewImage","fileInputRef","changeBgUrl","getPersonalizationUrl","newTheme","tema_user","background_user","fetchPersonalization","updatePersonalization","backgroundToSend","handleFileChange","files","file","reader","FileReader","onloadend","readAsDataURL","openFilePicker","current","click","handleSaveBackground","imageUri","changeBackground","handleCancelPreview","loadingBackground","defaultBg","img","resolvedBackground","defaultMapping","dynamicOverlayColor","dynamicCardBackground","buttonStyle","buttonTextStyle","pointerEvents","goBack","handleThemeToggle","changeTheme","accept","ref","display","flexCenter","headerContainer","subheader","PersonalDataScreen","userData","setUserData","user","fetchUserData","List","description","getLeftIcon","charAt","data_criacao","toLowerCase","alunoData","professorData","idx","fullScreenContainer","inner","loader","list","SugestAnythingScreen","suggestion","setSuggestion","loadingSubmit","setLoadingSubmit","snackbarMsg","setSnackbarMsg","snackbarVisible","setSnackbarVisible","suggestions","setSuggestions","fetchSuggestions","undefined","animating","Snackbar","duration","renderSuggestion","date_response","props","PasswordInput","memo","secure","toggleSecure","textInput","blurOnSubmit","displayName","TimerText","info","PasswordSecurityScreen","url_verifyPassword","url_updatePassword","settingsLoading","setSettingsLoading","step","setStep","currentPasswordInput","setCurrentPasswordInput","currentPasswordSecure","setCurrentPasswordSecure","newPasswordSecure","setNewPasswordSecure","confirmPasswordSecure","setConfirmPasswordSecure","setTimer","timerRef","SecureStore","getItemAsync","toggleCurrentPasswordSecure","toggleNewPasswordSecure","toggleConfirmPasswordSecure","titleStyle","cancelButtonStyle","backIconColor","cancelUpdate","screenWidth","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","strokeWidth","barPercentage","useShadowColorFromDataset","getDisciplineColor","discipline","themeMode","hash","str","charCodeAt","hashCode","Math","abs","groupNotesByDiscipline","notes","reduce","acc","nota","disciplina_nome","calculateStats","values","parseFloat","sum","avg","max","listItemContainer","listItemHeader","listItemTitle","listItemDate","listItemContent","borderTopWidth","borderTopColor","listItemRow","listItemLabel","listItemValue","tableContainer","tableRow","tableHeader","tableCell","internalHeader","internalHeaderText","viewToggleContainer","viewToggleButton","viewToggleButtonActive","viewToggleButtonText","chartTypeToggleContainer","chartTypeButton","chartTypeButtonActive","chartWrapper","chartContent","barContainer","barWrapper","bar","barValue","barLabel","statsContainer","statsText","filterButton","filterButtonText","professionalFilterButton","professionalFilterButtonText","statItem","statTitle","statDescription","modalContainer","modalInput","modalButtonRow","modalButton","modalButtonText","detailModalContent","detailText","detailLabel","closeModalButton","pdfButton","pdfButtonText","webPieContainer","filterOptionButton","datePickerButton","NotasScreen","loadingBg","setLoadingBg","allNotas","setAllNotas","notas","setNotas","viewMode","setViewMode","chartType","setChartType","selectedDisciplineFilter","setSelectedDisciplineFilter","dateInicio","setDateInicio","dateFim","setDateFim","showStatsFilter","setShowStatsFilter","showPickerInicio","setShowPickerInicio","showPickerFim","setShowPickerFim","disciplineOptions","setDisciplineOptions","showFilter","setShowFilter","showDetailsModal","setShowDetailsModal","selectedNote","setSelectedNote","selectedDiscipline","setSelectedDiscipline","pdfChartRef","url_fetchNotes","fetchedNotas","disciplines","fetchNotas","generatePdf","captureRef","format","quality","overallStats","overallMode","freq","maxCount","valor","calculateMode","globalStandout","positive","negative","globalPositive","globalNegative","maxPosDiff","maxNegDiff","diff","calculateGlobalStandout","currentDate","formattedDate","disciplineNoteTable","generateDisciplineNoteTable","html","toFixed","Print","printAsync","DisciplineLineChart","percentageChange","labels","baseDate","data_lancamento","dataPoints","lineColor","dynamicChartWidth","horizontal","LineChart","datasets","fromZero","decimalPlaces","propsForDots","r","stroke","propsForBackgroundLines","propsForLabels","fill","bezier","onDataPointClick","note","headerBackgroundColor","headerTextColor","onSurface","nota_id","onPrimary","showsHorizontalScrollIndicator","barHeight","ellipsizeMode","renderPieChart","grouped","population","legendFontColor","legendFontSize","pieData","chartBg","PieChart","accessor","absolute","hasLegend","renderLineChart","sortedNotas","isDark","labelColor","renderStatistics","stats","computeAdvancedStatistics","filteredNotas","disciplineGroupsAll","disciplineGroupsFiltered","disciplineStats","filteredStats","notesOrdered","overallAvg","filteredAvg","highestFiltered","lowestFiltered","highestIncrease","highestDecline","stat","valid","outline","disc","DateTimePicker","selectedDate","PdfChartLight","filtrosAplicados","filtroMsg","normalizeDate","getDateString","calendarWrapper","webEventContainer","selectedEventContainer","menuEventContainer","eventText","feedbackButton","feedbackButtonText","ratingNumber","ratingSelected","selectedDatesWrapper","detailRow","modalActionButton","textAlignVertical","ratingRow","spacer","smallFeedbackButton","smallFeedbackButtonText","AlmocosScreen","dbLunchDates","setDbLunchDates","selectedLunchDates","setSelectedLunchDates","removedLunchDates","setRemovedLunchDates","almocosMenu","setAlmocosMenu","feedbackDoneDates","setFeedbackDoneDates","selectedMenu","setSelectedMenu","feedbackModalVisible","setFeedbackModalVisible","avaliacao","setAvaliacao","opiniao","setOpiniao","urlFound","urlMenu","urlUpdate","urlFoundFeedbacks","urlSubmitFeedback","horaAtual","showAlert","fetchLunchReservations","eventos","row","dia","fromDB","fetchMenus","menus","sopa","prato_principal","sobremesa","fetchFeedbacks","Promise","all","finally","findMenuForDate","dbSelectedEvents","manualEvents","isManual","selectedSet","menuEvents","has","hasMenu","calendarEvents","onPressDate","today","now","getDay","menu","inDB","inManual","d2","inRemoved","handleSave","toAdd","toRem","diasParaAdicionar","diasParaRemover","j","todayStr","temAlmocoHoje","jaFezFeedback","Calendar","selected","handlePress","hoje","dataAlmoco","podeMarcarAlmoco","IconButton","PaperButton","handleMenuModalAction","dbSelectedDates","handleSubmitFeedback","safeArea","filterButtonsContainer","tabsContainer","filterButtonActive","filterText","filterTextActive","listContainer","listContent","itemContainer","itemTitle","itemSub","previewHeader","previewTitle","pdfContainer","controlsContainer","controlButton","controlButtonText","webInlinePreviewContainer","webPreviewTitle","iframeContainer","iframeStyle","webModalButton","webModalButtonText","HorariosScreen","calendarData","setCalendarData","errorMsg","setErrorMsg","studentActiveInfo","setStudentActiveInfo","activePhase","setActivePhase","selectedGrade","setSelectedGrade","activeIndex","setActiveIndex","selectedPdfUrl","setSelectedPdfUrl","pdfBase64","setPdfBase64","pdfUri","setPdfUri","Animated","Value","fetchCalendarData","activeCalendar","phase","ano_inicio","ano_fim","filteredCalendars","renderTabButtons","tabs","grade","togglePreview","pdfUrl","pdf_url","data_de_upload","pdf","src","encodeURIComponent","open","COLORS","parseDateString","dateStr","datePart","timePart","dateParts","second","timeParts","Toolbar","filterType","setFilterType","toolbarContainer","viewModeContainer","viewModeButton","viewModeButtonActive","viewModeText","filterContainer","centered","dayContainer","dayHeaderText","recordItem","recordText","modalHeader","modalCalendarWrapper","EntradasEsaidas","days","setDays","weekendFeedback","setWeekendFeedback","dynamicModalBackground","setOptions","headerTitle","headerLeft","contentStyle","fetchData","sortedDaysWithRecords","sortedRecords","records","data_do_registo","renderRecord","bgColor","renderDay","filteredRecords","capitalizedStatus","record","filteredCombinedEvents","groups","dateKey","dayKey","ellipsisStart","ellipsisEnd","clickedDate","dayOfWeek","headerContainerStyle","colorOptions","getWeekNumber","UTC","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getCalendarMode","startWeek","endWeek","formContainer","innerScroll","previewDetails","inputGroup","picker","infoText","colorText","errorBorder","turmaRow","selectedTurmaRow","addTurmaButton","noTurmaOverlay","noTurmaModal","noTurmaText","noTurmaButton","AddEventsScreen","url_adicionarEventos","url_addTask","url_profInfo","newEvent","setNewEvent","selectedCategory","setSelectedCategory","customCategory","setCustomCategory","selectedType","setSelectedType","selectedColor","setSelectedColor","setStartDate","startTime","setStartTime","setEndDate","endTime","setEndTime","showStartDatePicker","setShowStartDatePicker","showStartTimePicker","setShowStartTimePicker","showEndDatePicker","setShowEndDatePicker","showEndTimePicker","setShowEndTimePicker","selectedTurmas","setSelectedTurmas","showTurmaModal","setShowTurmaModal","showPreview","setShowPreview","fieldErrors","setFieldErrors","showNoTurmasModal","dateObj","formatTime","timeObj","toggleTurma","handleCreateEventOrTask","eventData","category","start_date","start_time","end_date","end_time","taskBlockStart","taskBlockEnd","selectedHour","selectedMinutes","itemValue","editable","onPressIn","onChangeStartDate","is24Hour","onChangeStartTime","selectedTime","onChangeEndDate","onChangeEndTime","handlePreview","errorsObj","validateFields","startDateTime","endDateTime","warnings","validateTimesAndDates","parseTime","hours","minutes","startH","startM","endH","endM","warningMessage","url_saveNote","url_fetchProfessor","url_fetchAlunos","url_fetchModulos","wrapper","scrollContent","contentWrapper","turmaContainer","turmaButton","turmaButtonSelected","turmaButtonLabel","turmaButtonLabelSel","moduloContainer","moduloButton","moduloButtonSelected","moduloButtonLabel","moduloButtonLabelSelected","moduloButtonContent","alunoContainer","alunoHeader","alunoEmail","alunoForm","comentarioInput","AdicionarNotasScreen","dataLoading","setDataLoading","submissionLoading","setSubmissionLoading","selectedModuloNum","setSelectedModuloNum","selectedModuloName","setSelectedModuloName","setProfessorData","availableTurmas","setAvailableTurmas","selectedTurma","setSelectedTurma","modulos","setModulos","selectedModulo","setSelectedModulo","alunos","setAlunos","snackbarMessage","setSnackbarMessage","showMessage","profRes","user_id","turRes","professor_id","modulo","students","isSel","numero_do_modulo","nome","MaterialCommunityIcons","comentario_privado","handleSaveNote","selecionados","aprovados","atrasados","proceedSave","listaAtrasados","action","getStyles","loadingOverlay","tasksContainer","eventsContainer","sectionHeader","textShadowColor","textShadowOffset","textShadowRadius","listItem","itemInfo","modalWarning","colorButton","editText","removeBtn","addTimeButtonLabel","saveButtonLabel","colorModalContent","commonWeb","inputWeb","PersonalizarTarefaScreen","userThemeParam","backgroundUrlParam","url_fetchTasks","url_fetchEvents","setEvents","taskDescription","setTaskDescription","dynamicHeaderBg","sanitizeInput","quantity","units","weeks","configData","newNotifications","handleSelectTask","handleSelectEvent","camera","overlayTop","overlayMiddle","overlaySide","focusedArea","overlayBottom","animationOverlay","animationText","manualButton","manualButtonText","buttonContainer","btnSolicitar","btnManual","modalBackground","modalText","modalButtonContainer","btnConfirmar","btnCancelar","previewSaida","previewHora","QRCodeScannerScreen","emailFromParams","permission","requestPermission","useCameraPermissions","isPermissionGranted","Boolean","granted","isScanning","setIsScanning","scannedData","setScannedData","manualModalVisible","setManualModalVisible","previewData","setPreviewData","isPreviewLoading","setIsPreviewLoading","cameraRef","animation","urlInserir","urlPreview","headerShown","abrirModalManual","fetchPreview","novoTipo","diaAtual","tipo","hora","animatedStyle","scale","interpolate","inputRange","outputRange","CameraView","facing","onBarcodeScanned","scannedEmail","sequence","timing","toValue","useNativeDriver","delay","manualInsertion","loaderBg","scroll","mobileLayout","webLayout","boxMobile","boxWeb","sectionTitle","itemText","centerContainer","PersonalizarTaskOuEventProfScreen","url_fetchTaskView","taskDate","setTaskDate","setTaskTime","showConfigModal","setShowConfigModal","isEditingTask","setIsEditingTask","showTimePicker","setShowTimePicker","setEventTitle","eventDescription","setEventDescription","eventColor","setEventColor","showEventModal","setShowEventModal","isEditingEvent","setIsEditingEvent","showEventColorModal","setShowEventColorModal","eventStartDateObj","setEventStartDateObj","eventStartTimeObj","setEventStartTimeObj","eventEndDateObj","setEventEndDateObj","eventEndTimeObj","setEventEndTimeObj","taskTitle","setTaskTitle","sanitize","s","saveTaskConfig","toTimeString","substr","timeStr","showFeedback","performDeleteTask","performUpdateEvent","dateStart","hS","mS","startStr","dateEnd","hE","mE","endStr","performDeleteEvent","cfg","ds","de","RNText","setMinutes","deleteTask","deleteEvent","submitButton","InsertPasswordScreen","urlUpdatePassword","isConfirmVisible","setIsConfirmVisible","v","studentDetailsComplete","form","resendButton","VerificationScreen","verificationCode","setVerificationCode","sendingCode","setSendingCode","resendTimer","setResendTimer","sendCode","backText","PutNewPassForgetPassword","showPassword","setShowPassword","showConfirm","setShowConfirm","VerifyCodeForgetPassword","initialEmail","sendLinkButton","backToLoginButton","ForgetPasswordScreen","emailNaoExiste","GenerateQRCodeScreen","QRCode","overlayDark","contentContainer","inputsWrapper","botao","carregamento","pdfPreview","botoesPreview","botaoSalvar","botaoMudar","modalFundo","modalTitulo","modalItem","PutCalendar","selectedAno","setSelectedAno","pdfFile","setPdfFile","uploading","setUploading","previewPdf","setPreviewPdf","inputsMovedUp","setInputsMovedUp","url_uploadCalendar","isWebWithPdf","headerPadding","windowHeight","dynamicBoxBackground","fixedBoxHeight","fixedBoxMargin","Card","DocumentPicker","canceled","assets","asset","blob","base64data","renderPdfPreview","htmlContent","getPdfHtml","base64","srcDoc","responseBlob","resData","getISODate","headerButton","headerIcon","statsTexto","loadingContent","AuxiliarScreen","urlSalvar","urlListar","selectedDates","setSelectedDates","errorDates","setErrorDates","pratoPrincipal","setPratoPrincipal","setSopa","setSobremesa","setStats","menusArmazenados","setMenusArmazenados","dadosFormulario","feriados","periodoFerias","areDatesEqual","date1","date2","handleDayPress","dateString","prevDates","toggleDateSelection","listarMenus","menusFormatados","containerStyle","totalPessoas","quantidade","horario","DefaultTheme","iconAssets","school","account","refresh","getIconComponent","AlunosDoProfScreen","professorEmail","urls","profInfo","grades","expandedTurma","setExpandedTurma","expandedAluno","setExpandedAluno","gradesByAluno","setGradesByAluno","fetchAll","profResp","turResp","tvs","stuResp","al","center","expanded","willExpand","alunoId","loadGrades","innerLoader","g","gradeRow","gradeDisc","gradeNota","gradeDate","noGrades","ItemSeparatorComponent","WrappedScreen","PaperProvider","selectedDatesInnerContainer","modalActionButtonLabel","AlmocoProfScreen","dbEvents","eventDate","normalizedDate","maxDate","setMonth","dateStrExistsInDB","dateStrExistsInManual","isInRemoved","selectedDatesSet","calendarHeight","allSelectedDates","selectedDateItemStyle","calendarWrapperStyle","isSelected","eventContainerStyle","isReservedInDB","isReservedManual","isRemoved","ITEM_HEIGHT","itemBox","smallerCard","cardContent","DisciplinasDoAlunoScreen","setAlunoData","availableDisciplinas","setAvailableDisciplinas","url_fetchAluno","fetchAlunoInfo","disciplinas_professores","disciplina_id","numColumns","columnWrapperStyle","emailprof","accessibilityRole","accessibilityLabel","appBar","highlightCard","normalCard","NotasDisciplina","setEventos","tarefas","setTarefas","loadingNotas","setLoadingNotas","loadingEventos","setLoadingEventos","loadingTarefas","setLoadingTarefas","errorNotas","setErrorNotas","errorEventos","setErrorEventos","errorTarefas","setErrorTarefas","url_fetchNotas","url_fetchEventos","url_fetchTarefas","fetchEventos","fetchTarefas","dataDeCriacao","AuxiliarEstatisticas","setDados","secaoAtiva","setSecaoAtiva","subDetalhe","setSubDetalhe","parseError","mainContainer","menuVertical","menuButton","menuButtonText","headlineContainer","headline","alunosCount","professoresCount","administradoresCount","totalText","renderDetalhes","grupos","agruparAlunosPorTurma","chave","detailContainer","detailTitle","alunosTurma","turmaItem","greenSquare","turmaText","voltarBotao","voltarBotaoText","detailItem","detailItemText","dias","lista","professores","administradores","infoBox","emailText","actionsBox","iconAction","emptyContainer","emptyText","ConfirmacoesScreen","fetchPendentes","boxBg","confirmAluno","deleteAluno","ListEmptyComponent","buttonLabel","SelectTurmaScreen","url_saveTurmas","selectedId","setSelectedId","isMounted","mensagem","AddEventsScreenWeb","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","shouldShowBanner","shouldShowList","Stack","createStackNavigator","isLoading","setIsLoading","userToken","setUserToken","userEmail","setUserEmail","themeData","setThemeData","background_url","fetchThemeAndBackground","warn","checkToken","initialRoute","NavigationContainer","Navigator","initialRouteName","screenOptions","Screen","component","LoginLayout","initialParams","AdministradorScreen","PutPasswordScreen","sugestAnythingScreen","entradasEsaidas","InsertPassword","auxiliarScreen","alunosDoProfScreen","almocoProfScreen","disciplinasAluno","auxiliarEstatisticas","confirmacoesScreen","SelectTurma","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}